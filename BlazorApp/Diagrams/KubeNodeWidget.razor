@typeparam            T
@using Extension
@using Extension.k8s
@using k8s.Models
@inherits BlazorApp.Pages.Common.PageBase

<div class="default-node ">


    @foreach (var port in Node.Ports.Where(x => x.Alignment == PortAlignment.Left))
    {
        <PortRenderer @key="port" Port="port" Class="default"/>
    }


    @foreach (var port in Node.Ports.Where(x => x.Alignment == PortAlignment.Right))
    {
        <PortRenderer @key="port" Port="port" Class="default"/>
    }

    <div style="width: 260px;" onclick="@(() => Show())">
        <GridRow Style="align-items: center" Gutter="8">
            <GridCol Span="4">


                @if (typeName == "V1Deployment")
                {
                    <Icon Type="appstore" Theme="twotone" Style="font-size: 30px"/>
                }
                else if (typeName == "V1Pod")
                {
                    <Icon Type="hdd" Theme="twotone" Style="font-size: 30px"/>
                }
                else if (typeName == "V1ReplicaSet")
                {
                    <Icon Type="switcher" Theme="twotone" Style="font-size: 30px ;color: teal"/>
                }
            </GridCol>
            <GridCol Span="18">
                <div class="long-text">@(resName)</div>
            </GridCol>
            <GridCol Span="2">
                <Icon Type="more" Theme="outline" Style="font-size: 18px"/>
            </GridCol>
        </GridRow>
        <GridRow Style="align-items: center" Gutter="8">
            @switch (typeName)
            {
                case "V1Deployment":
                    <GridCol Span="4">
                        @("deploy")
                    </GridCol>
                    <GridCol Span="20" Style="font-size: 18px">
                        @{
                            var item = Node.Item as V1Deployment;
                        }
                        <ReadyIconView Ready="@item?.IsReady()"></ReadyIconView>
                        <ProcessingIconView Processing="@item?.IsProcessing()"></ProcessingIconView>
                    </GridCol>
                    break;
                case "V1Pod":
                    <GridCol Span="4">
                        @("pod")
                    </GridCol>
                    <GridCol Span="20" Style="font-size: 18px">
                        @{
                            var item = Node.Item as V1Pod;
                        }
                        <ReadyIconView Ready="@item?.IsReady()"></ReadyIconView>
                        <ProcessingIconView Processing="@item?.IsProcessing()"></ProcessingIconView>
                    </GridCol>
                    break;
                case "V1ReplicaSet":
                    <GridCol Span="4">
                        @("rs")
                    </GridCol>
                    <GridCol Span="20" Style="font-size: 18px">
                        @{
                            var item = Node.Item as V1ReplicaSet;
                        }
                        <ReadyIconView Ready="@item?.IsReady()"></ReadyIconView>
                        <ProcessingIconView Processing="@item?.IsProcessing()"></ProcessingIconView>
                    </GridCol>
                    break;
            }
        </GridRow>
    </div>
    <div class="time-ago">
        <div class="center">@Node.Item.CreationTimestamp().AgeFromUtc()</div>
    </div>
</div>
