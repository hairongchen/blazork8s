namespace BlazorApp.Utils.Swagger;

/// <summary>
/// wget https://raw.githubusercontent.com/kubernetes/kubernetes/master/api/openapi-spec/swagger.json
/// 提取 definitions 部分
/// </summary>
public class SwaggerDefinition
{
    public static string KubeSwaggerDefinition => """
{
 "definitions":{
    "io.k8s.api.admissionregistration.v1.MatchCondition": {
      "description": "MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.",
      "properties": {
        "expression": {
          "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
          "type": "string"
        },
        "name": {
          "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhook": {
      "description": "MutatingWebhook describes an admission webhook and the resources and operations it applies to.",
      "properties": {
        "admissionReviewVersions": {
          "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig",
          "description": "ClientConfig defines how to communicate with the hook. Required"
        },
        "failurePolicy": {
          "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
          "type": "string"
        },
        "matchConditions": {
          "description": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchPolicy": {
          "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
          "type": "string"
        },
        "name": {
          "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything."
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything."
        },
        "reinvocationPolicy": {
          "description": "reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are \"Never\" and \"IfNeeded\".\n\nNever: the webhook will not be called more than once in a single admission evaluation.\n\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\n\nDefaults to \"Never\".",
          "type": "string"
        },
        "rules": {
          "description": "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          },
          "type": "array"
        },
        "sideEffects": {
          "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
          "type": "string"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration": {
      "description": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "webhooks": {
          "description": "Webhooks is a list of webhooks and the affected resources and operations.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList": {
      "description": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of MutatingWebhookConfiguration.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfigurationList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.RuleWithOperations": {
      "description": "RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersions": {
          "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "operations": {
          "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "scope": {
          "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ServiceReference": {
      "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
      "properties": {
        "name": {
          "description": "`name` is the name of the service. Required",
          "type": "string"
        },
        "namespace": {
          "description": "`namespace` is the namespace of the service. Required",
          "type": "string"
        },
        "path": {
          "description": "`path` is an optional URL path which will be sent in any request to this service.",
          "type": "string"
        },
        "port": {
          "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhook": {
      "description": "ValidatingWebhook describes an admission webhook and the resources and operations it applies to.",
      "properties": {
        "admissionReviewVersions": {
          "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig",
          "description": "ClientConfig defines how to communicate with the hook. Required"
        },
        "failurePolicy": {
          "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
          "type": "string"
        },
        "matchConditions": {
          "description": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchPolicy": {
          "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
          "type": "string"
        },
        "name": {
          "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything."
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything."
        },
        "rules": {
          "description": "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          },
          "type": "array"
        },
        "sideEffects": {
          "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
          "type": "string"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration": {
      "description": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "webhooks": {
          "description": "Webhooks is a list of webhooks and the affected resources and operations.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList": {
      "description": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ValidatingWebhookConfiguration.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfigurationList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.WebhookClientConfig": {
      "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook",
      "properties": {
        "caBundle": {
          "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
          "format": "byte",
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference",
          "description": "`service` is a reference to the service for this webhook. Either `service` or `url` must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`."
        },
        "url": {
          "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation": {
      "description": "AuditAnnotation describes how to produce an audit annotation for an API request.",
      "properties": {
        "key": {
          "description": "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
          "type": "string"
        },
        "valueExpression": {
          "description": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "valueExpression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning": {
      "description": "ExpressionWarning is a warning information that targets a specific expression.",
      "properties": {
        "fieldRef": {
          "description": "The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"",
          "type": "string"
        },
        "warning": {
          "description": "The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.",
          "type": "string"
        }
      },
      "required": [
        "fieldRef",
        "warning"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.MatchCondition": {
      "properties": {
        "expression": {
          "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
          "type": "string"
        },
        "name": {
          "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.MatchResources": {
      "description": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
      "properties": {
        "excludeResourceRules": {
          "description": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "matchPolicy": {
          "description": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything."
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "ObjectSelector decides whether to run the validation based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything."
        },
        "resourceRules": {
          "description": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches _any_ Rule.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations": {
      "description": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersions": {
          "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "operations": {
          "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "scope": {
          "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ParamKind": {
      "description": "ParamKind is a tuple of Group Kind and Version.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion is the API group version the resources belong to. In format of \"group/version\". Required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the API kind the resources belong to. Required.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ParamRef": {
      "description": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.",
      "properties": {
        "name": {
          "description": "`name` is the name of the resource being referenced.\n\n`name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
          "type": "string"
        },
        "namespace": {
          "description": "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
          "type": "string"
        },
        "parameterNotFoundAction": {
          "description": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny` Default to `Deny`",
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1alpha1.TypeChecking": {
      "description": "TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy",
      "properties": {
        "expressionWarnings": {
          "description": "The type checking warnings for each expression.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy": {
      "description": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec",
          "description": "Specification of the desired behavior of the ValidatingAdmissionPolicy."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus",
          "description": "The status of the ValidatingAdmissionPolicy, including warnings that are useful to determine if the policy behaves in the expected way. Populated by the system. Read-only."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicy",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding": {
      "description": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec",
          "description": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyBinding",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList": {
      "description": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of PolicyBinding.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyBindingList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec": {
      "description": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.",
      "properties": {
        "matchResources": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchResources",
          "description": "MatchResources declares what resources match this binding and will be validated by it. Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required."
        },
        "paramRef": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ParamRef",
          "description": "paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param."
        },
        "policyName": {
          "description": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
          "type": "string"
        },
        "validationActions": {
          "description": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList": {
      "description": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ValidatingAdmissionPolicy.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec": {
      "description": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.",
      "properties": {
        "auditAnnotations": {
          "description": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "failurePolicy": {
          "description": "failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
          "type": "string"
        },
        "matchConditions": {
          "description": "MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the policy is skipped",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchConstraints": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchResources",
          "description": "MatchConstraints specifies what resources this policy is designed to validate. The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required."
        },
        "paramKind": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ParamKind",
          "description": "ParamKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null."
        },
        "validations": {
          "description": "Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.Validation"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "variables": {
          "description": "Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.Variable"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus": {
      "description": "ValidatingAdmissionPolicyStatus represents the status of a ValidatingAdmissionPolicy.",
      "properties": {
        "conditions": {
          "description": "The conditions represent the latest available observations of a policy's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "The generation observed by the controller.",
          "format": "int64",
          "type": "integer"
        },
        "typeChecking": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.TypeChecking",
          "description": "The results of type checking for each expression. Presence of this field indicates the completion of the type checking."
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.Validation": {
      "description": "Validation specifies the CEL expression which is used to apply the validation.",
      "properties": {
        "expression": {
          "description": "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.",
          "type": "string"
        },
        "message": {
          "description": "Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
          "type": "string"
        },
        "messageExpression": {
          "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
          "type": "string"
        },
        "reason": {
          "description": "Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
          "type": "string"
        }
      },
      "required": [
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1alpha1.Variable": {
      "description": "Variable is the definition of a variable that is used for composition.",
      "properties": {
        "expression": {
          "description": "Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.AuditAnnotation": {
      "description": "AuditAnnotation describes how to produce an audit annotation for an API request.",
      "properties": {
        "key": {
          "description": "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
          "type": "string"
        },
        "valueExpression": {
          "description": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "valueExpression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.ExpressionWarning": {
      "description": "ExpressionWarning is a warning information that targets a specific expression.",
      "properties": {
        "fieldRef": {
          "description": "The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"",
          "type": "string"
        },
        "warning": {
          "description": "The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.",
          "type": "string"
        }
      },
      "required": [
        "fieldRef",
        "warning"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.MatchCondition": {
      "description": "MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook.",
      "properties": {
        "expression": {
          "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
          "type": "string"
        },
        "name": {
          "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.MatchResources": {
      "description": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
      "properties": {
        "excludeResourceRules": {
          "description": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "matchPolicy": {
          "description": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything."
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "ObjectSelector decides whether to run the validation based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything."
        },
        "resourceRules": {
          "description": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches _any_ Rule.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations": {
      "description": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersions": {
          "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "operations": {
          "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "scope": {
          "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1beta1.ParamKind": {
      "description": "ParamKind is a tuple of Group Kind and Version.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion is the API group version the resources belong to. In format of \"group/version\". Required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the API kind the resources belong to. Required.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1beta1.ParamRef": {
      "description": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.",
      "properties": {
        "name": {
          "description": "name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured by setting the `name` field, leaving `selector` blank, and setting namespace if `paramKind` is namespace-scoped.",
          "type": "string"
        },
        "namespace": {
          "description": "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
          "type": "string"
        },
        "parameterNotFoundAction": {
          "description": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired",
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.admissionregistration.v1beta1.TypeChecking": {
      "description": "TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy",
      "properties": {
        "expressionWarnings": {
          "description": "The type checking warnings for each expression.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ExpressionWarning"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy": {
      "description": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec",
          "description": "Specification of the desired behavior of the ValidatingAdmissionPolicy."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus",
          "description": "The status of the ValidatingAdmissionPolicy, including warnings that are useful to determine if the policy behaves in the expected way. Populated by the system. Read-only."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicy",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding": {
      "description": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec",
          "description": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyBinding",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList": {
      "description": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of PolicyBinding.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyBindingList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec": {
      "description": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.",
      "properties": {
        "matchResources": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchResources",
          "description": "MatchResources declares what resources match this binding and will be validated by it. Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required."
        },
        "paramRef": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ParamRef",
          "description": "paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param."
        },
        "policyName": {
          "description": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
          "type": "string"
        },
        "validationActions": {
          "description": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList": {
      "description": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ValidatingAdmissionPolicy.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingAdmissionPolicyList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec": {
      "description": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.",
      "properties": {
        "auditAnnotations": {
          "description": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.AuditAnnotation"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "failurePolicy": {
          "description": "failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
          "type": "string"
        },
        "matchConditions": {
          "description": "MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the policy is skipped",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchConstraints": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchResources",
          "description": "MatchConstraints specifies what resources this policy is designed to validate. The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required."
        },
        "paramKind": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ParamKind",
          "description": "ParamKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null."
        },
        "validations": {
          "description": "Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.Validation"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "variables": {
          "description": "Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.Variable"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus": {
      "description": "ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.",
      "properties": {
        "conditions": {
          "description": "The conditions represent the latest available observations of a policy's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "The generation observed by the controller.",
          "format": "int64",
          "type": "integer"
        },
        "typeChecking": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.TypeChecking",
          "description": "The results of type checking for each expression. Presence of this field indicates the completion of the type checking."
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.Validation": {
      "description": "Validation specifies the CEL expression which is used to apply the validation.",
      "properties": {
        "expression": {
          "description": "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.",
          "type": "string"
        },
        "message": {
          "description": "Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
          "type": "string"
        },
        "messageExpression": {
          "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
          "type": "string"
        },
        "reason": {
          "description": "Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
          "type": "string"
        }
      },
      "required": [
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1beta1.Variable": {
      "description": "Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.",
      "properties": {
        "expression": {
          "description": "Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion": {
      "description": "An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.",
      "properties": {
        "apiServerID": {
          "description": "The ID of the reporting API server.",
          "type": "string"
        },
        "decodableVersions": {
          "description": "The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "encodingVersion": {
          "description": "The API server encodes the object to this version when persisting it in the backend (e.g., etcd).",
          "type": "string"
        },
        "servedVersions": {
          "description": "The API server can serve these versions. DecodableVersions must include all ServedVersions.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion": {
      "description": "Storage version of a specific resource.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "The name is <group>.<resource>."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec",
          "description": "Spec is an empty spec. It is here to comply with Kubernetes API style."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus",
          "description": "API server instances report the version they can decode and the version they encode objects to when persisting objects in the backend."
        }
      },
      "required": [
        "spec",
        "status"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "StorageVersion",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition": {
      "description": "Describes the state of the storageVersion at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "If set, this represents the .metadata.generation that the condition was set based upon.",
          "format": "int64",
          "type": "integer"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of the condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status",
        "reason"
      ],
      "type": "object"
    },
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList": {
      "description": "A list of StorageVersions.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items holds a list of StorageVersion",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "StorageVersionList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec": {
      "description": "StorageVersionSpec is an empty spec.",
      "type": "object"
    },
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus": {
      "description": "API server instances report the versions they can decode and the version they encode objects to when persisting objects in the backend.",
      "properties": {
        "commonEncodingVersion": {
          "description": "If all API server instances agree on the same encoding storage version, then this field is set to that version. Otherwise this field is left empty. API servers should finish updating its storageVersionStatus entry before serving write operations, so that this field will be in sync with the reality.",
          "type": "string"
        },
        "conditions": {
          "description": "The latest available observations of the storageVersion's state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "storageVersions": {
          "description": "The reported versions per API server instance.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "apiServerID"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.ControllerRevision": {
      "description": "ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension",
          "description": "Data is the serialized representation of the state."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "revision": {
          "description": "Revision indicates the revision of the state represented by Data.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "revision"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ControllerRevision",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ControllerRevisionList": {
      "description": "ControllerRevisionList is a resource containing a list of ControllerRevision objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of ControllerRevisions",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ControllerRevision"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ControllerRevisionList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSet": {
      "description": "DaemonSet represents the configuration of a daemon set.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetSpec",
          "description": "The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetStatus",
          "description": "The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DaemonSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSetCondition": {
      "description": "DaemonSetCondition describes the state of a DaemonSet at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of DaemonSet condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.DaemonSetList": {
      "description": "DaemonSetList is a collection of daemon sets.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "A list of daemon sets.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSet"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DaemonSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSetSpec": {
      "description": "DaemonSetSpec is the specification of a daemon set.",
      "properties": {
        "minReadySeconds": {
          "description": "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).",
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "description": "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy",
          "description": "An update strategy to replace existing DaemonSet pods with new pods."
        }
      },
      "required": [
        "selector",
        "template"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.DaemonSetStatus": {
      "description": "DaemonSetStatus represents the current status of a daemon set.",
      "properties": {
        "collisionCount": {
          "description": "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Represents the latest available observations of a DaemonSet's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentNumberScheduled": {
          "description": "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
          "format": "int32",
          "type": "integer"
        },
        "desiredNumberScheduled": {
          "description": "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
          "format": "int32",
          "type": "integer"
        },
        "numberAvailable": {
          "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)",
          "format": "int32",
          "type": "integer"
        },
        "numberMisscheduled": {
          "description": "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
          "format": "int32",
          "type": "integer"
        },
        "numberReady": {
          "description": "numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.",
          "format": "int32",
          "type": "integer"
        },
        "numberUnavailable": {
          "description": "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)",
          "format": "int32",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "The most recent generation observed by the daemon set controller.",
          "format": "int64",
          "type": "integer"
        },
        "updatedNumberScheduled": {
          "description": "The total number of nodes that are running updated daemon pod",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "currentNumberScheduled",
        "numberMisscheduled",
        "desiredNumberScheduled",
        "numberReady"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.DaemonSetUpdateStrategy": {
      "description": "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet",
          "description": "Rolling update config params. Present only if type = \"RollingUpdate\"."
        },
        "type": {
          "description": "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.Deployment": {
      "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentSpec",
          "description": "Specification of the desired behavior of the Deployment."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStatus",
          "description": "Most recently observed status of the Deployment."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "Deployment",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DeploymentCondition": {
      "description": "DeploymentCondition describes the state of a deployment at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The last time this condition was updated."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of deployment condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.DeploymentList": {
      "description": "DeploymentList is a list of Deployments.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of Deployments.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.Deployment"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DeploymentList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DeploymentSpec": {
      "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
      "properties": {
        "minReadySeconds": {
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32",
          "type": "integer"
        },
        "paused": {
          "description": "Indicates that the deployment is paused.",
          "type": "boolean"
        },
        "progressDeadlineSeconds": {
          "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels."
        },
        "strategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStrategy",
          "description": "The deployment strategy to use to replace existing pods with new ones.",
          "x-kubernetes-patch-strategy": "retainKeys"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "Template describes the pods that will be created. The only allowed template.spec.restartPolicy value is \"Always\"."
        }
      },
      "required": [
        "selector",
        "template"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.DeploymentStatus": {
      "description": "DeploymentStatus is the most recently observed status of the Deployment.",
      "properties": {
        "availableReplicas": {
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
          "format": "int32",
          "type": "integer"
        },
        "collisionCount": {
          "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Represents the latest available observations of a deployment's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "observedGeneration": {
          "description": "The generation observed by the deployment controller.",
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "description": "readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
          "format": "int32",
          "type": "integer"
        },
        "unavailableReplicas": {
          "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
          "format": "int32",
          "type": "integer"
        },
        "updatedReplicas": {
          "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.DeploymentStrategy": {
      "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment",
          "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate."
        },
        "type": {
          "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.ReplicaSet": {
      "description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec",
          "description": "Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetStatus",
          "description": "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ReplicaSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ReplicaSetCondition": {
      "description": "ReplicaSetCondition describes the state of a replica set at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of replica set condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.ReplicaSetList": {
      "description": "ReplicaSetList is a collection of ReplicaSets.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSet"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ReplicaSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ReplicaSetSpec": {
      "description": "ReplicaSetSpec is the specification of a ReplicaSet.",
      "properties": {
        "minReadySeconds": {
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        }
      },
      "required": [
        "selector"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.ReplicaSetStatus": {
      "description": "ReplicaSetStatus represents the current status of a ReplicaSet.",
      "properties": {
        "availableReplicas": {
          "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Represents the latest available observations of a replica set's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "fullyLabeledReplicas": {
          "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.",
          "format": "int32",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "description": "readyReplicas is the number of pods targeted by this ReplicaSet with a Ready Condition.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas is the most recently observed number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "replicas"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateDaemonSet": {
      "description": "Spec to control the desired behavior of daemon set rolling update.",
      "properties": {
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "The maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up to a minimum of 1. Default value is 0. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their a new pod created before the old pod is marked as deleted. The update starts by launching new pods on 30% of nodes. Once an updated pod is available (Ready for at least minReadySeconds) the old DaemonSet pod on that node is marked deleted. If the old pod becomes unavailable for any reason (Ready transitions to false, is evicted, or is drained) an updated pod is immediatedly created on that node without considering surge limits. Allowing surge implies the possibility that the resources consumed by the daemonset on any given node can double if the readiness check fails, and so resource intensive daemonsets should take into account that they may cause evictions during disruption."
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0 if MaxSurge is 0 Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update."
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateDeployment": {
      "description": "Spec to control the desired behavior of rolling update.",
      "properties": {
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods."
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods."
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy": {
      "description": "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.",
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0. Defaults to 1. This field is alpha-level and is only honored by servers that enable the MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it will be counted towards MaxUnavailable."
        },
        "partition": {
          "description": "Partition indicates the ordinal at which the StatefulSet should be partitioned for updates. During a rolling update, all pods from ordinal Replicas-1 to Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched. This is helpful in being able to do a canary based deployment. The default value is 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSet": {
      "description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n  - Network: A single stable DNS and hostname.\n  - Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetSpec",
          "description": "Spec defines the desired identities of pods in this set."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetStatus",
          "description": "Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "StatefulSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.StatefulSetCondition": {
      "description": "StatefulSetCondition describes the state of a statefulset at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of statefulset condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetList": {
      "description": "StatefulSetList is a collection of StatefulSets.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of stateful sets.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSet"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "StatefulSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.StatefulSetOrdinals": {
      "description": "StatefulSetOrdinals describes the policy used for replica ordinal assignment in this StatefulSet.",
      "properties": {
        "start": {
          "description": "start is the number representing the first replica's index. It may be used to number replicas from an alternate index (eg: 1-indexed) over the default 0-indexed names, or to orchestrate progressive movement of replicas from one StatefulSet to another. If set, replica indices will be in the range:\n  [.spec.ordinals.start, .spec.ordinals.start + .spec.replicas).\nIf unset, defaults to 0. Replica indices will be in the range:\n  [0, .spec.replicas).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy": {
      "description": "StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.",
      "properties": {
        "whenDeleted": {
          "description": "WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.",
          "type": "string"
        },
        "whenScaled": {
          "description": "WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetSpec": {
      "description": "A StatefulSetSpec is the specification of a StatefulSet.",
      "properties": {
        "minReadySeconds": {
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32",
          "type": "integer"
        },
        "ordinals": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetOrdinals",
          "description": "ordinals controls the numbering of replica indices in a StatefulSet. The default ordinals behavior assigns a \"0\" index to the first replica and increments the index by one for each additional replica requested. Using the ordinals field requires the StatefulSetStartOrdinal feature gate to be enabled, which is beta."
        },
        "persistentVolumeClaimRetentionPolicy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy",
          "description": "persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent volume claims created from volumeClaimTemplates. By default, all persistent volume claims are created as needed and retained until manually deleted. This policy allows the lifecycle to be altered, for example by deleting persistent volume claims when their stateful set is deleted, or when their pod is scaled down. This requires the StatefulSetAutoDeletePVC feature gate to be enabled, which is alpha.  +optional"
        },
        "podManagementPolicy": {
          "description": "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.",
          "type": "string"
        },
        "replicas": {
          "description": "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "description": "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
        },
        "serviceName": {
          "description": "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.",
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet. Each pod will be named with the format <statefulsetname>-<podindex>. For example, a pod in a StatefulSet named \"web\" with index number \"3\" would be named \"web-3\". The only allowed template.spec.restartPolicy value is \"Always\"."
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy",
          "description": "updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template."
        },
        "volumeClaimTemplates": {
          "description": "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          },
          "type": "array"
        }
      },
      "required": [
        "selector",
        "template",
        "serviceName"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetStatus": {
      "description": "StatefulSetStatus represents the current state of a StatefulSet.",
      "properties": {
        "availableReplicas": {
          "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this statefulset.",
          "format": "int32",
          "type": "integer"
        },
        "collisionCount": {
          "description": "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Represents the latest available observations of a statefulset's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentReplicas": {
          "description": "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.",
          "format": "int32",
          "type": "integer"
        },
        "currentRevision": {
          "description": "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).",
          "type": "string"
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.",
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "description": "readyReplicas is the number of pods created for this StatefulSet with a Ready Condition.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "replicas is the number of Pods created by the StatefulSet controller.",
          "format": "int32",
          "type": "integer"
        },
        "updateRevision": {
          "description": "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)",
          "type": "string"
        },
        "updatedReplicas": {
          "description": "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "replicas"
      ],
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetUpdateStrategy": {
      "description": "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy",
          "description": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType."
        },
        "type": {
          "description": "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1.BoundObjectReference": {
      "description": "BoundObjectReference is a reference to an object that a token is bound to.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. Valid kinds are 'Pod' and 'Secret'.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent.",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1.SelfSubjectReview": {
      "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.SelfSubjectReviewStatus",
          "description": "Status is filled in by the server with the user attributes."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "SelfSubjectReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authentication.v1.SelfSubjectReviewStatus": {
      "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo",
          "description": "User attributes of the user making this request."
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1.TokenRequest": {
      "description": "TokenRequest requests a token for a given service account.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestSpec",
          "description": "Spec holds information about the request being evaluated"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestStatus",
          "description": "Status is filled in by the server and indicates whether the token can be authenticated."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "TokenRequest",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authentication.v1.TokenRequestSpec": {
      "description": "TokenRequestSpec contains client provided parameters of a token request.",
      "properties": {
        "audiences": {
          "description": "Audiences are the intendend audiences of the token. A recipient of a token must identify themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "boundObjectRef": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.BoundObjectReference",
          "description": "BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation."
        },
        "expirationSeconds": {
          "description": "ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "audiences"
      ],
      "type": "object"
    },
    "io.k8s.api.authentication.v1.TokenRequestStatus": {
      "description": "TokenRequestStatus is the result of a token request.",
      "properties": {
        "expirationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "ExpirationTimestamp is the time of expiration of the returned token."
        },
        "token": {
          "description": "Token is the opaque bearer token.",
          "type": "string"
        }
      },
      "required": [
        "token",
        "expirationTimestamp"
      ],
      "type": "object"
    },
    "io.k8s.api.authentication.v1.TokenReview": {
      "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewSpec",
          "description": "Spec holds information about the request being evaluated"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewStatus",
          "description": "Status is filled in by the server and indicates whether the request can be authenticated."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "TokenReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authentication.v1.TokenReviewSpec": {
      "description": "TokenReviewSpec is a description of the token authentication request.",
      "properties": {
        "audiences": {
          "description": "Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "token": {
          "description": "Token is the opaque bearer token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1.TokenReviewStatus": {
      "description": "TokenReviewStatus is the result of the token authentication request.",
      "properties": {
        "audiences": {
          "description": "Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is \"true\", the token is valid against the audience of the Kubernetes API server.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authenticated": {
          "description": "Authenticated indicates that the token was associated with a known user.",
          "type": "boolean"
        },
        "error": {
          "description": "Error indicates that the token couldn't be checked",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo",
          "description": "User is the UserInfo associated with the provided token."
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1.UserInfo": {
      "description": "UserInfo holds the information about the user needed to implement the user.Info interface.",
      "properties": {
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "Any additional information provided by the authenticator.",
          "type": "object"
        },
        "groups": {
          "description": "The names of groups this user is a part of.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "uid": {
          "description": "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.",
          "type": "string"
        },
        "username": {
          "description": "The name that uniquely identifies this user among all active users.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1alpha1.SelfSubjectReview": {
      "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus",
          "description": "Status is filled in by the server with the user attributes."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "SelfSubjectReview",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus": {
      "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo",
          "description": "User attributes of the user making this request."
        }
      },
      "type": "object"
    },
    "io.k8s.api.authentication.v1beta1.SelfSubjectReview": {
      "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus",
          "description": "Status is filled in by the server with the user attributes."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "SelfSubjectReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus": {
      "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
      "properties": {
        "userInfo": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo",
          "description": "User attributes of the user making this request."
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.LocalSubjectAccessReview": {
      "description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec",
          "description": "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus",
          "description": "Status is filled in by the server and indicates whether the request is allowed or not"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "LocalSubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.NonResourceAttributes": {
      "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
      "properties": {
        "path": {
          "description": "Path is the URL path of the request",
          "type": "string"
        },
        "verb": {
          "description": "Verb is the standard HTTP verb",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.NonResourceRule": {
      "description": "NonResourceRule holds information that describes a rule for the non-resource",
      "properties": {
        "nonResourceURLs": {
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "verbs": {
          "description": "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.api.authorization.v1.ResourceAttributes": {
      "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
      "properties": {
        "group": {
          "description": "Group is the API Group of the Resource.  \"*\" means all.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
          "type": "string"
        },
        "resource": {
          "description": "Resource is one of the existing resource types.  \"*\" means all.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is one of the existing resource types.  \"\" means none.",
          "type": "string"
        },
        "verb": {
          "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
          "type": "string"
        },
        "version": {
          "description": "Version is the API Version of the Resource.  \"*\" means all.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.ResourceRule": {
      "description": "ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups.\n \"*/foo\" represents the subresource 'foo' for all resources in the specified apiGroups.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "verbs": {
          "description": "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.api.authorization.v1.SelfSubjectAccessReview": {
      "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec",
          "description": "Spec holds information about the request being evaluated.  user and groups must be empty"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus",
          "description": "Status is filled in by the server and indicates whether the request is allowed or not"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec": {
      "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes",
          "description": "NonResourceAttributes describes information for a non-resource access request"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes",
          "description": "ResourceAuthorizationAttributes describes information for a resource access request"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.SelfSubjectRulesReview": {
      "description": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec",
          "description": "Spec holds information about the request being evaluated."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectRulesReviewStatus",
          "description": "Status is filled in by the server and indicates the set of actions a user can perform."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectRulesReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec": {
      "description": "SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.",
      "properties": {
        "namespace": {
          "description": "Namespace to evaluate rules for. Required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.SubjectAccessReview": {
      "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec",
          "description": "Spec holds information about the request being evaluated"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus",
          "description": "Status is filled in by the server and indicates whether the request is allowed or not"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SubjectAccessReviewSpec": {
      "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
      "properties": {
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
          "type": "object"
        },
        "groups": {
          "description": "Groups is the groups you're testing for.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes",
          "description": "NonResourceAttributes describes information for a non-resource access request"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes",
          "description": "ResourceAuthorizationAttributes describes information for a resource access request"
        },
        "uid": {
          "description": "UID information about the requesting user.",
          "type": "string"
        },
        "user": {
          "description": "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.authorization.v1.SubjectAccessReviewStatus": {
      "description": "SubjectAccessReviewStatus",
      "properties": {
        "allowed": {
          "description": "Allowed is required. True if the action would be allowed, false otherwise.",
          "type": "boolean"
        },
        "denied": {
          "description": "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.",
          "type": "boolean"
        },
        "evaluationError": {
          "description": "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.",
          "type": "string"
        },
        "reason": {
          "description": "Reason is optional.  It indicates why a request was allowed or denied.",
          "type": "string"
        }
      },
      "required": [
        "allowed"
      ],
      "type": "object"
    },
    "io.k8s.api.authorization.v1.SubjectRulesReviewStatus": {
      "description": "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.",
      "properties": {
        "evaluationError": {
          "description": "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.",
          "type": "string"
        },
        "incomplete": {
          "description": "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.",
          "type": "boolean"
        },
        "nonResourceRules": {
          "description": "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceRule"
          },
          "type": "array"
        },
        "resourceRules": {
          "description": "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceRule"
          },
          "type": "array"
        }
      },
      "required": [
        "resourceRules",
        "nonResourceRules",
        "incomplete"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v1.CrossVersionObjectReference": {
      "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
      "properties": {
        "apiVersion": {
          "description": "apiVersion is the API version of the referent",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler": {
      "description": "configuration of a horizontal pod autoscaler.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec",
          "description": "spec defines the behaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus",
          "description": "status is the current information about the autoscaler."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList": {
      "description": "list of horizontal pod autoscaler objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of horizontal pod autoscaler objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscalerList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec": {
      "description": "specification of a horizontal pod autoscaler.",
      "properties": {
        "maxReplicas": {
          "description": "maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
          "format": "int32",
          "type": "integer"
        },
        "minReplicas": {
          "description": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
          "format": "int32",
          "type": "integer"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.CrossVersionObjectReference",
          "description": "reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource."
        },
        "targetCPUUtilizationPercentage": {
          "description": "targetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus": {
      "description": "current status of a horizontal pod autoscaler",
      "properties": {
        "currentCPUUtilizationPercentage": {
          "description": "currentCPUUtilizationPercentage is the current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
          "format": "int32",
          "type": "integer"
        },
        "currentReplicas": {
          "description": "currentReplicas is the current number of replicas of pods managed by this autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "desiredReplicas": {
          "description": "desiredReplicas is the  desired number of replicas of pods managed by this autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "lastScaleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed."
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed by this autoscaler.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "currentReplicas",
        "desiredReplicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v1.Scale": {
      "description": "Scale represents a scaling request for a resource.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec",
          "description": "spec defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus",
          "description": "status is the current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "Scale",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.ScaleSpec": {
      "description": "ScaleSpec describes the attributes of a scale subresource.",
      "properties": {
        "replicas": {
          "description": "replicas is the desired number of instances for the scaled object.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v1.ScaleStatus": {
      "description": "ScaleStatus represents the current status of a scale subresource.",
      "properties": {
        "replicas": {
          "description": "replicas is the actual number of observed instances of the scaled object.",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "description": "selector is the label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "type": "string"
        }
      },
      "required": [
        "replicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource": {
      "description": "ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.",
      "properties": {
        "container": {
          "description": "container is the name of the container in the pods of the scaling target",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the resource in question.",
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget",
          "description": "target specifies the target value for the given metric"
        }
      },
      "required": [
        "name",
        "target",
        "container"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus": {
      "description": "ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
      "properties": {
        "container": {
          "description": "container is the name of the container in the pods of the scaling target",
          "type": "string"
        },
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus",
          "description": "current contains the current value for the given metric"
        },
        "name": {
          "description": "name is the name of the resource in question.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "current",
        "container"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.CrossVersionObjectReference": {
      "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
      "properties": {
        "apiVersion": {
          "description": "apiVersion is the API version of the referent",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ExternalMetricSource": {
      "description": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget",
          "description": "target specifies the target value for the given metric"
        }
      },
      "required": [
        "metric",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ExternalMetricStatus": {
      "description": "ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.",
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus",
          "description": "current contains the current value for the given metric"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        }
      },
      "required": [
        "metric",
        "current"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HPAScalingPolicy": {
      "description": "HPAScalingPolicy is a single policy which must hold true for a specified past interval.",
      "properties": {
        "periodSeconds": {
          "description": "periodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "type is used to specify the scaling policy.",
          "type": "string"
        },
        "value": {
          "description": "value contains the amount of change which is permitted by the policy. It must be greater than zero",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "type",
        "value",
        "periodSeconds"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HPAScalingRules": {
      "description": "HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.",
      "properties": {
        "policies": {
          "description": "policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingPolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "selectPolicy": {
          "description": "selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.",
          "type": "string"
        },
        "stabilizationWindowSeconds": {
          "description": "stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler": {
      "description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec",
          "description": "spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus",
          "description": "status is the current information about the autoscaler."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v2"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior": {
      "description": "HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).",
      "properties": {
        "scaleDown": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules",
          "description": "scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used)."
        },
        "scaleUp": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules",
          "description": "scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used."
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition": {
      "description": "HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastTransitionTime is the last time the condition transitioned from one status to another"
        },
        "message": {
          "description": "message is a human-readable explanation containing details about the transition",
          "type": "string"
        },
        "reason": {
          "description": "reason is the reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "status is the status of the condition (True, False, Unknown)",
          "type": "string"
        },
        "type": {
          "description": "type describes the current condition",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList": {
      "description": "HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of horizontal pod autoscaler objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "metadata is the standard list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscalerList",
          "version": "v2"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec": {
      "description": "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.",
      "properties": {
        "behavior": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior",
          "description": "behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively). If not set, the default HPAScalingRules for scale up and scale down are used."
        },
        "maxReplicas": {
          "description": "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.",
          "format": "int32",
          "type": "integer"
        },
        "metrics": {
          "description": "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricSpec"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "minReplicas": {
          "description": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
          "format": "int32",
          "type": "integer"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference",
          "description": "scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count."
        }
      },
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus": {
      "description": "HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.",
      "properties": {
        "conditions": {
          "description": "conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentMetrics": {
          "description": "currentMetrics is the last read state of the metrics used by this autoscaler.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricStatus"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "currentReplicas": {
          "description": "currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "desiredReplicas": {
          "description": "desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.",
          "format": "int32",
          "type": "integer"
        },
        "lastScaleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed."
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed by this autoscaler.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "desiredReplicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricIdentifier": {
      "description": "MetricIdentifier defines the name and optionally selector for a metric",
      "properties": {
        "name": {
          "description": "name is the name of the given metric",
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricSpec": {
      "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource",
          "description": "containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag."
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricSource",
          "description": "external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster)."
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricSource",
          "description": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object)."
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricSource",
          "description": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value."
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricSource",
          "description": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
        },
        "type": {
          "description": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object. Note: \"ContainerResource\" type is available on when the feature-gate HPAContainerMetrics is enabled",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricStatus": {
      "description": "MetricStatus describes the last-read state of a single metric.",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus",
          "description": "container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricStatus",
          "description": "external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster)."
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricStatus",
          "description": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object)."
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricStatus",
          "description": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value."
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricStatus",
          "description": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source."
        },
        "type": {
          "description": "type is the type of metric source.  It will be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object. Note: \"ContainerResource\" type is available on when the feature-gate HPAContainerMetrics is enabled",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricTarget": {
      "description": "MetricTarget defines the target value, average value, or average utilization of a specific metric",
      "properties": {
        "averageUtilization": {
          "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
          "format": "int32",
          "type": "integer"
        },
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)"
        },
        "type": {
          "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "value is the target value of the metric (as a quantity)."
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricValueStatus": {
      "description": "MetricValueStatus holds the current value for a metric",
      "properties": {
        "averageUtilization": {
          "description": "currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.",
          "format": "int32",
          "type": "integer"
        },
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "averageValue is the current value of the average of the metric across all relevant pods (as a quantity)"
        },
        "value": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "value is the current value of the metric (as a quantity)."
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ObjectMetricSource": {
      "description": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).",
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference",
          "description": "describedObject specifies the HTable of a object,such as kind,name apiVersion"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget",
          "description": "target specifies the target value for the given metric"
        }
      },
      "required": [
        "describedObject",
        "target",
        "metric"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ObjectMetricStatus": {
      "description": "ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).",
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus",
          "description": "current contains the current value for the given metric"
        },
        "describedObject": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference",
          "description": "DescribedObject specifies the HTable of a object,such as kind,name apiVersion"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        }
      },
      "required": [
        "metric",
        "current",
        "describedObject"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.PodsMetricSource": {
      "description": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.",
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget",
          "description": "target specifies the target value for the given metric"
        }
      },
      "required": [
        "metric",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.PodsMetricStatus": {
      "description": "PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).",
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus",
          "description": "current contains the current value for the given metric"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier",
          "description": "metric identifies the target metric by name and selector"
        }
      },
      "required": [
        "metric",
        "current"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ResourceMetricSource": {
      "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.",
      "properties": {
        "name": {
          "description": "name is the name of the resource in question.",
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget",
          "description": "target specifies the target value for the given metric"
        }
      },
      "required": [
        "name",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ResourceMetricStatus": {
      "description": "ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus",
          "description": "current contains the current value for the given metric"
        },
        "name": {
          "description": "name is the name of the resource in question.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "current"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.CronJob": {
      "description": "CronJob represents the configuration of a single cron job.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.CronJobSpec",
          "description": "Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.CronJobStatus",
          "description": "Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "CronJob",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.CronJobList": {
      "description": "CronJobList is a collection of cron jobs.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of CronJobs.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.CronJob"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "CronJobList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.CronJobSpec": {
      "description": "CronJobSpec describes how the job execution will look like and when it will actually run.",
      "properties": {
        "concurrencyPolicy": {
          "description": "Specifies how to treat concurrent executions of a Job. Valid values are:\n\n- \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one",
          "type": "string"
        },
        "failedJobsHistoryLimit": {
          "description": "The number of failed finished jobs to retain. Value must be non-negative integer. Defaults to 1.",
          "format": "int32",
          "type": "integer"
        },
        "jobTemplate": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobTemplateSpec",
          "description": "Specifies the job that will be created when executing a CronJob."
        },
        "schedule": {
          "description": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
          "type": "string"
        },
        "startingDeadlineSeconds": {
          "description": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.",
          "format": "int64",
          "type": "integer"
        },
        "successfulJobsHistoryLimit": {
          "description": "The number of successful finished jobs to retain. Value must be non-negative integer. Defaults to 3.",
          "format": "int32",
          "type": "integer"
        },
        "suspend": {
          "description": "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.",
          "type": "boolean"
        },
        "timeZone": {
          "description": "The time zone name for the given schedule, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. If not specified, this will default to the time zone of the kube-controller-manager process. The set of valid time zone names and the time zone offset is loaded from the system-wide time zone database by the API server during CronJob validation and the controller manager during execution. If no system-wide time zone database can be found a bundled version of the database is used instead. If the time zone name becomes invalid during the lifetime of a CronJob or due to a change in host configuration, the controller will stop creating new new Jobs and will create a system event with the reason UnknownTimeZone. More information can be found in https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones",
          "type": "string"
        }
      },
      "required": [
        "schedule",
        "jobTemplate"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.CronJobStatus": {
      "description": "CronJobStatus represents the current state of a cron job.",
      "properties": {
        "active": {
          "description": "A list of pointers to currently running jobs.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "lastScheduleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Information when was the last time the job was successfully scheduled."
        },
        "lastSuccessfulTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Information when was the last time the job successfully completed."
        }
      },
      "type": "object"
    },
    "io.k8s.api.batch.v1.Job": {
      "description": "Job represents the configuration of a single job.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec",
          "description": "Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobStatus",
          "description": "Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "Job",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.JobCondition": {
      "description": "JobCondition describes current state of a job.",
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition was checked."
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transit from one status to another."
        },
        "message": {
          "description": "Human readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of job condition, Complete or Failed.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.JobList": {
      "description": "JobList is a collection of jobs.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of Jobs.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.Job"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "JobList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.JobSpec": {
      "description": "JobSpec describes how the job execution will look like.",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it; value must be positive integer. If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again.",
          "format": "int64",
          "type": "integer"
        },
        "backoffLimit": {
          "description": "Specifies the number of retries before marking this job failed. Defaults to 6",
          "format": "int32",
          "type": "integer"
        },
        "backoffLimitPerIndex": {
          "description": "Specifies the limit for the number of retries within an index before marking this index as failed. When enabled the number of failures per index is kept in the pod's batch.kubernetes.io/job-index-failure-count annotation. It can only be set when Job's completionMode=Indexed, and the Pod's restart policy is Never. The field is immutable. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
          "format": "int32",
          "type": "integer"
        },
        "completionMode": {
          "description": "completionMode specifies how Pod completions are tracked. It can be `NonIndexed` (default) or `Indexed`.\n\n`NonIndexed` means that the Job is considered complete when there have been .spec.completions successfully completed Pods. Each Pod completion is homologous to each other.\n\n`Indexed` means that the Pods of a Job get an associated completion index from 0 to (.spec.completions - 1), available in the annotation batch.kubernetes.io/job-completion-index. The Job is considered complete when there is one successfully completed Pod for each index. When value is `Indexed`, .spec.completions must be specified and `.spec.parallelism` must be less than or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`.\n\nMore completion modes can be added in the future. If the Job controller observes a mode that it doesn't recognize, which is possible during upgrades due to version skew, the controller skips updates for the Job.",
          "type": "string"
        },
        "completions": {
          "description": "Specifies the desired number of successfully finished pods the job should be run with.  Setting to null means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
          "format": "int32",
          "type": "integer"
        },
        "manualSelector": {
          "description": "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
          "type": "boolean"
        },
        "maxFailedIndexes": {
          "description": "Specifies the maximal number of failed indexes before marking the Job as failed, when backoffLimitPerIndex is set. Once the number of failed indexes exceeds this number the entire Job is marked as Failed and its execution is terminated. When left as null the job continues execution of all of its indexes and is marked with the `Complete` Job condition. It can only be specified when backoffLimitPerIndex is set. It can be null or up to completions. It is required and must be less than or equal to 10^4 when is completions greater than 10^5. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
          "format": "int32",
          "type": "integer"
        },
        "parallelism": {
          "description": "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
          "format": "int32",
          "type": "integer"
        },
        "podFailurePolicy": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicy",
          "description": "Specifies the policy of handling failed pods. In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action. If empty, the default behaviour applies - the counter of failed pods, represented by the jobs's .status.failed field, is incremented and it is checked against the backoffLimit. This field cannot be used in combination with restartPolicy=OnFailure.\n\nThis field is beta-level. It can be used when the `JobPodFailurePolicy` feature gate is enabled (enabled by default)."
        },
        "podReplacementPolicy": {
          "description": "podReplacementPolicy specifies when to create replacement Pods. Possible values are: - TerminatingOrFailed means that we recreate pods\n  when they are terminating (has a metadata.deletionTimestamp) or failed.\n- Failed means to wait until a previously created Pod is fully terminated (has phase\n  Failed or Succeeded) before creating a replacement Pod.\n\nWhen using podFailurePolicy, Failed is the the only allowed value. TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use. This is an beta field. To use this, enable the JobPodReplacementPolicy feature toggle. This is on by default.",
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
        },
        "suspend": {
          "description": "suspend specifies whether the Job controller should create Pods or not. If a Job is created with suspend set to true, no Pods are created by the Job controller. If a Job is suspended after creation (i.e. the flag goes from false to true), the Job controller will delete all active Pods associated with this Job. Users must design their workload to gracefully handle this. Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too. Defaults to false.",
          "type": "boolean"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "Describes the pod that will be created when executing a job. The only allowed template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/"
        },
        "ttlSecondsAfterFinished": {
          "description": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "template"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.JobStatus": {
      "description": "JobStatus represents the current state of a Job.",
      "properties": {
        "active": {
          "description": "The number of pending and running pods.",
          "format": "int32",
          "type": "integer"
        },
        "completedIndexes": {
          "description": "completedIndexes holds the completed indexes when .spec.completionMode = \"Indexed\" in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\".",
          "type": "string"
        },
        "completionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is only set when the job finishes successfully."
        },
        "conditions": {
          "description": "The latest available observations of an object's current state. When a Job fails, one of the conditions will have type \"Failed\" and status true. When a Job is suspended, one of the conditions will have type \"Suspended\" and status true; when the Job is resumed, the status of this condition will become false. When a Job is completed, one of the conditions will have type \"Complete\" and status true. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.JobCondition"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "failed": {
          "description": "The number of pods which reached phase Failed.",
          "format": "int32",
          "type": "integer"
        },
        "failedIndexes": {
          "description": "FailedIndexes holds the failed indexes when backoffLimitPerIndex=true. The indexes are represented in the text format analogous as for the `completedIndexes` field, ie. they are kept as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\". This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
          "type": "string"
        },
        "ready": {
          "description": "The number of pods which have a Ready condition.",
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Represents time when the job controller started processing a job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC."
        },
        "succeeded": {
          "description": "The number of pods which reached phase Succeeded.",
          "format": "int32",
          "type": "integer"
        },
        "terminating": {
          "description": "The number of pods which are terminating (in phase Pending or Running and have a deletionTimestamp).\n\nThis field is beta-level. The job controller populates the field when the feature gate JobPodReplacementPolicy is enabled (enabled by default).",
          "format": "int32",
          "type": "integer"
        },
        "uncountedTerminatedPods": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.UncountedTerminatedPods",
          "description": "uncountedTerminatedPods holds the UIDs of Pods that have terminated but the job controller hasn't yet accounted for in the status counters.\n\nThe job controller creates pods with a finalizer. When a pod terminates (succeeded or failed), the controller does three steps to account for it in the job status:\n\n1. Add the pod UID to the arrays in this field. 2. Remove the pod finalizer. 3. Remove the pod UID from the arrays while increasing the corresponding\n    counter.\n\nOld jobs might not be tracked using this field, in which case the field remains null."
        }
      },
      "type": "object"
    },
    "io.k8s.api.batch.v1.JobTemplateSpec": {
      "description": "JobTemplateSpec describes the data a Job should have when created from a template",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec",
          "description": "Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicy": {
      "description": "PodFailurePolicy describes how failed pods influence the backoffLimit.",
      "properties": {
        "rules": {
          "description": "A list of pod failure policy rules. The rules are evaluated in order. Once a rule matches a Pod failure, the remaining of the rules are ignored. When no rule matches the Pod failure, the default handling applies - the counter of pod failures is incremented and it is checked against the backoffLimit. At most 20 elements are allowed.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "rules"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement": {
      "description": "PodFailurePolicyOnExitCodesRequirement describes the requirement for handling a failed pod based on its container exit codes. In particular, it lookups the .state.terminated.exitCode for each app container and init container status, represented by the .status.containerStatuses and .status.initContainerStatuses fields in the Pod status, respectively. Containers completed with success (exit code 0) are excluded from the requirement check.",
      "properties": {
        "containerName": {
          "description": "Restricts the check for exit codes to the container with the specified name. When null, the rule applies to all containers. When specified, it should match one the container or initContainer names in the pod template.",
          "type": "string"
        },
        "operator": {
          "description": "Represents the relationship between the container exit code(s) and the specified values. Containers completed with success (exit code 0) are excluded from the requirement check. Possible values are:\n\n- In: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is in the set of specified values.\n- NotIn: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is not in the set of specified values.\nAdditional values are considered to be added in the future. Clients should react to an unknown operator by assuming the requirement is not satisfied.",
          "type": "string"
        },
        "values": {
          "description": "Specifies the set of values. Each returned container exit code (might be multiple in case of multiple containers) is checked against this set of values with respect to the operator. The list of values must be ordered and must not contain duplicates. Value '0' cannot be used for the In operator. At least one element is required. At most 255 elements are allowed.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "operator",
        "values"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern": {
      "description": "PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type.",
      "properties": {
        "status": {
          "description": "Specifies the required Pod condition status. To match a pod condition it is required that the specified status equals the pod condition status. Defaults to True.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the required Pod condition type. To match a pod condition it is required that specified type equals the pod condition type.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyRule": {
      "description": "PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.",
      "properties": {
        "action": {
          "description": "Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:\n\n- FailJob: indicates that the pod's job is marked as Failed and all\n  running pods are terminated.\n- FailIndex: indicates that the pod's index is marked as Failed and will\n  not be restarted.\n  This value is beta-level. It can be used when the\n  `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).\n- Ignore: indicates that the counter towards the .backoffLimit is not\n  incremented and a replacement pod is created.\n- Count: indicates that the pod is handled in the default way - the\n  counter towards the .backoffLimit is incremented.\nAdditional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.",
          "type": "string"
        },
        "onExitCodes": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement",
          "description": "Represents the requirement on the container exit codes."
        },
        "onPodConditions": {
          "description": "Represents the requirement on the pod conditions. The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "action"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.UncountedTerminatedPods": {
      "description": "UncountedTerminatedPods holds UIDs of Pods that have terminated but haven't been accounted in Job status counters.",
      "properties": {
        "failed": {
          "description": "failed holds UIDs of failed Pods.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "succeeded": {
          "description": "succeeded holds UIDs of succeeded Pods.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequest": {
      "description": "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.\n\nKubelets use this API to obtain:\n 1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).\n 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestSpec",
          "description": "spec contains the certificate request, and is immutable after creation. Only the request, signerName, expirationSeconds, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestStatus",
          "description": "status contains information about whether the request is approved or denied, and the certificate issued by the signer, or the failure condition indicating signer failure."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequest",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestCondition": {
      "description": "CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastTransitionTime is the time the condition last transitioned from one status to another. If unset, when a new condition type is added or an existing condition's status is changed, the server defaults this to the current time."
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastUpdateTime is the time of the last update to this condition"
        },
        "message": {
          "description": "message contains a human readable message with details about the request state",
          "type": "string"
        },
        "reason": {
          "description": "reason indicates a brief reason for the request state",
          "type": "string"
        },
        "status": {
          "description": "status of the condition, one of True, False, Unknown. Approved, Denied, and Failed conditions may not be \"False\" or \"Unknown\".",
          "type": "string"
        },
        "type": {
          "description": "type of the condition. Known conditions are \"Approved\", \"Denied\", and \"Failed\".\n\nAn \"Approved\" condition is added via the /approval subresource, indicating the request was approved and should be issued by the signer.\n\nA \"Denied\" condition is added via the /approval subresource, indicating the request was denied and should not be issued by the signer.\n\nA \"Failed\" condition is added via the /status subresource, indicating the signer failed to issue the certificate.\n\nApproved and Denied conditions are mutually exclusive. Approved, Denied, and Failed conditions cannot be removed once added.\n\nOnly one condition of a given type is allowed.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestList": {
      "description": "CertificateSigningRequestList is a collection of CertificateSigningRequest objects",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a collection of CertificateSigningRequest objects",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequest"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequestList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestSpec": {
      "description": "CertificateSigningRequestSpec contains the certificate request.",
      "properties": {
        "expirationSeconds": {
          "description": "expirationSeconds is the requested duration of validity of the issued certificate. The certificate signer may issue a certificate with a different validity duration so a client must check the delta between the notBefore and and notAfter fields in the issued certificate to determine the actual duration.\n\nThe v1.22+ in-tree implementations of the well-known Kubernetes signers will honor this field as long as the requested duration is not greater than the maximum duration they will honor per the --cluster-signing-duration CLI flag to the Kubernetes controller manager.\n\nCertificate signers may not honor this field for various reasons:\n\n  1. Old signer that is unaware of the field (such as the in-tree\n     implementations prior to v1.22)\n  2. Signer whose configured maximum is shorter than the requested duration\n  3. Signer whose configured minimum is longer than the requested duration\n\nThe minimum valid value for expirationSeconds is 600, i.e. 10 minutes.",
          "format": "int32",
          "type": "integer"
        },
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "extra contains extra attributes of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
          "type": "object"
        },
        "groups": {
          "description": "groups contains group membership of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "request": {
          "description": "request contains an x509 certificate signing request encoded in a \"CERTIFICATE REQUEST\" PEM block. When serialized as JSON or YAML, the data is additionally base64-encoded.",
          "format": "byte",
          "type": "string",
          "x-kubernetes-list-type": "atomic"
        },
        "signerName": {
          "description": "signerName indicates the requested signer, and is a qualified name.\n\nList/watch requests for CertificateSigningRequests can filter on this field using a \"spec.signerName=NAME\" fieldSelector.\n\nWell-known Kubernetes signers are:\n 1. \"kubernetes.io/kube-apiserver-client\": issues client certificates that can be used to authenticate to kube-apiserver.\n  Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the \"csrsigning\" controller in kube-controller-manager.\n 2. \"kubernetes.io/kube-apiserver-client-kubelet\": issues client certificates that kubelets use to authenticate to kube-apiserver.\n  Requests for this signer can be auto-approved by the \"csrapproving\" controller in kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n 3. \"kubernetes.io/kubelet-serving\" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.\n  Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n\nMore details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers\n\nCustom signerNames can also be specified. The signer defines:\n 1. Trust distribution: how trust (CA bundles) are distributed.\n 2. Permitted subjects: and behavior when a disallowed subject is requested.\n 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.\n 4. Required, permitted, or forbidden key usages / extended key usages.\n 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.\n 6. Whether or not requests for CA certificates are allowed.",
          "type": "string"
        },
        "uid": {
          "description": "uid contains the uid of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
          "type": "string"
        },
        "usages": {
          "description": "usages specifies a set of key usages requested in the issued certificate.\n\nRequests for TLS client certificates typically request: \"digital signature\", \"key encipherment\", \"client auth\".\n\nRequests for TLS serving certificates typically request: \"key encipherment\", \"digital signature\", \"server auth\".\n\nValid values are:\n \"signing\", \"digital signature\", \"content commitment\",\n \"key encipherment\", \"key agreement\", \"data encipherment\",\n \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\",\n \"server auth\", \"client auth\",\n \"code signing\", \"email protection\", \"s/mime\",\n \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\",\n \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "username": {
          "description": "username contains the name of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
          "type": "string"
        }
      },
      "required": [
        "request",
        "signerName"
      ],
      "type": "object"
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestStatus": {
      "description": "CertificateSigningRequestStatus contains conditions used to indicate approved/denied/failed status of the request, and the issued certificate.",
      "properties": {
        "certificate": {
          "description": "certificate is populated with an issued certificate by the signer after an Approved condition is present. This field is set via the /status subresource. Once populated, this field is immutable.\n\nIf the certificate signing request is denied, a condition of type \"Denied\" is added and this field remains empty. If the signer cannot issue the certificate, a condition of type \"Failed\" is added and this field remains empty.\n\nValidation requirements:\n 1. certificate must contain one or more PEM blocks.\n 2. All PEM blocks must have the \"CERTIFICATE\" label, contain no headers, and the encoded data\n  must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.\n 3. Non-PEM content may appear before or after the \"CERTIFICATE\" PEM blocks and is unvalidated,\n  to allow for explanatory text as described in section 5.2 of RFC7468.\n\nIf more than one PEM block is present, and the definition of the requested spec.signerName does not indicate otherwise, the first block is the issued certificate, and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.\n\nThe certificate is encoded in PEM format.\n\nWhen serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:\n\n    base64(\n    -----BEGIN CERTIFICATE-----\n    ...\n    -----END CERTIFICATE-----\n    )",
          "format": "byte",
          "type": "string",
          "x-kubernetes-list-type": "atomic"
        },
        "conditions": {
          "description": "conditions applied to the request. Known conditions are \"Approved\", \"Denied\", and \"Failed\".",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    },
    "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle": {
      "description": "ClusterTrustBundle is a cluster-scoped container for X.509 trust anchors (root certificates).\n\nClusterTrustBundle objects are considered to be readable by any authenticated user in the cluster, because they can be mounted by pods using the `clusterTrustBundle` projection.  All service accounts have read access to ClusterTrustBundles by default.  Users who only have namespace-level access to a cluster can read ClusterTrustBundles by impersonating a serviceaccount that they have access to.\n\nIt can be optionally associated with a particular assigner, in which case it contains one valid set of trust anchors for that signer. Signers may have multiple associated ClusterTrustBundles; each is an independent set of trust anchors for that signer. Admission control is used to enforce that only users with permissions on the signer can create or modify the corresponding bundle.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "metadata contains the object metadata."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec",
          "description": "spec contains the signer (if any) and trust anchors."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "ClusterTrustBundle",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList": {
      "description": "ClusterTrustBundleList is a collection of ClusterTrustBundle objects",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a collection of ClusterTrustBundle objects",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "metadata contains the list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "ClusterTrustBundleList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec": {
      "description": "ClusterTrustBundleSpec contains the signer and trust anchors.",
      "properties": {
        "signerName": {
          "description": "signerName indicates the associated signer, if any.\n\nIn order to create or update a ClusterTrustBundle that sets signerName, you must have the following cluster-scoped permission: group=certificates.k8s.io resource=signers resourceName=<the signer name> verb=attest.\n\nIf signerName is not empty, then the ClusterTrustBundle object must be named with the signer name as a prefix (translating slashes to colons). For example, for the signer name `example.com/foo`, valid ClusterTrustBundle object names include `example.com:foo:abc` and `example.com:foo:v1`.\n\nIf signerName is empty, then the ClusterTrustBundle object's name must not have such a prefix.\n\nList/watch requests for ClusterTrustBundles can filter on this field using a `spec.signerName=NAME` field selector.",
          "type": "string"
        },
        "trustBundle": {
          "description": "trustBundle contains the individual X.509 trust anchors for this bundle, as PEM bundle of PEM-wrapped, DER-formatted X.509 certificates.\n\nThe data must consist only of PEM certificate blocks that parse as valid X.509 certificates.  Each certificate must include a basic constraints extension with the CA bit set.  The API server will reject objects that contain duplicate certificates, or that use PEM block headers.\n\nUsers of ClusterTrustBundles, including Kubelet, are free to reorder and deduplicate certificate blocks in this file according to their own logic, as well as to drop PEM block headers and inter-block data.",
          "type": "string"
        }
      },
      "required": [
        "trustBundle"
      ],
      "type": "object"
    },
    "io.k8s.api.coordination.v1.Lease": {
      "description": "Lease defines a lease concept.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.coordination.v1.LeaseSpec",
          "description": "spec contains the specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "Lease",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.coordination.v1.LeaseList": {
      "description": "LeaseList is a list of Lease objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of schema objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.coordination.v1.Lease"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "LeaseList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.coordination.v1.LeaseSpec": {
      "description": "LeaseSpec is a specification of a Lease.",
      "properties": {
        "acquireTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "acquireTime is a time when the current lease was acquired."
        },
        "holderIdentity": {
          "description": "holderIdentity contains the identity of the holder of a current lease.",
          "type": "string"
        },
        "leaseDurationSeconds": {
          "description": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed renewTime.",
          "format": "int32",
          "type": "integer"
        },
        "leaseTransitions": {
          "description": "leaseTransitions is the number of transitions of a lease between holders.",
          "format": "int32",
          "type": "integer"
        },
        "renewTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "renewTime is a time when the current holder of a lease has last updated the lease."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        },
        "partition": {
          "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "description": "readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "boolean"
        },
        "volumeID": {
          "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity",
          "description": "Describes node affinity scheduling rules for the pod."
        },
        "podAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity",
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s))."
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity",
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s))."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.AttachedVolume": {
      "description": "AttachedVolume describes a volume attached to a node",
      "properties": {
        "devicePath": {
          "description": "DevicePath represents the device path where the volume should be available",
          "type": "string"
        },
        "name": {
          "description": "Name of the attached volume",
          "type": "string"
        }
      },
      "required": [
        "name",
        "devicePath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "properties": {
        "cachingMode": {
          "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
          "type": "string"
        },
        "diskName": {
          "description": "diskName is the Name of the data disk in the blob storage",
          "type": "string"
        },
        "diskURI": {
          "description": "diskURI is the URI of data disk in the blob storage",
          "type": "string"
        },
        "fsType": {
          "description": "fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "kind": {
          "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        }
      },
      "required": [
        "diskName",
        "diskURI"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureFilePersistentVolumeSource": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "properties": {
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretName": {
          "description": "secretName is the name of secret that contains Azure Storage Account Name and Key",
          "type": "string"
        },
        "secretNamespace": {
          "description": "secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod",
          "type": "string"
        },
        "shareName": {
          "description": "shareName is the azure Share Name",
          "type": "string"
        }
      },
      "required": [
        "secretName",
        "shareName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "properties": {
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretName": {
          "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
          "type": "string"
        },
        "shareName": {
          "description": "shareName is the azure share Name",
          "type": "string"
        }
      },
      "required": [
        "secretName",
        "shareName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Binding": {
      "description": "Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "The target object that you want to bind to the standard object."
        }
      },
      "required": [
        "target"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Binding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.CSIPersistentVolumeSource": {
      "description": "Represents storage that is managed by an external CSI volume driver (Beta feature)",
      "properties": {
        "controllerExpandSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "controllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
        },
        "controllerPublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "controllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
        },
        "driver": {
          "description": "driver is the name of the driver to use for this volume. Required.",
          "type": "string"
        },
        "fsType": {
          "description": "fsType to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\".",
          "type": "string"
        },
        "nodeExpandSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "nodeExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeExpandVolume call. This field is optional, may be omitted if no secret is required. If the secret object contains more than one secret, all secrets are passed."
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
        },
        "nodeStageSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "nodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed."
        },
        "readOnly": {
          "description": "readOnly value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).",
          "type": "boolean"
        },
        "volumeAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "volumeAttributes of the volume to publish.",
          "type": "object"
        },
        "volumeHandle": {
          "description": "volumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.",
          "type": "string"
        }
      },
      "required": [
        "driver",
        "volumeHandle"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
      "properties": {
        "driver": {
          "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
          "type": "string"
        },
        "fsType": {
          "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed."
        },
        "readOnly": {
          "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
          "type": "boolean"
        },
        "volumeAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
          "type": "object"
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "drop": {
          "description": "Removed capabilities",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.CephFSPersistentVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "monitors": {
          "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretFile": {
          "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        },
        "user": {
          "description": "user is Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "monitors": {
          "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretFile": {
          "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        },
        "user": {
          "description": "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CinderPersistentVolumeSource": {
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef is Optional: points to a secret object containing parameters used to connect to OpenStack."
        },
        "volumeID": {
          "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef is optional: points to a secret object containing parameters used to connect to OpenStack."
        },
        "volumeID": {
          "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ClaimSource": {
      "description": "ClaimSource describes a reference to a ResourceClaim.\n\nExactly one of these fields should be set.  Consumers of this type must treat an empty object as if it has an unknown value.",
      "properties": {
        "resourceClaimName": {
          "description": "ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.",
          "type": "string"
        },
        "resourceClaimTemplateName": {
          "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ClientIPConfig": {
      "description": "ClientIPConfig represents the configurations of Client IP based session affinity.",
      "properties": {
        "timeoutSeconds": {
          "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ClusterTrustBundleProjection": {
      "description": "ClusterTrustBundleProjection describes how to select a set of ClusterTrustBundle objects and project their contents into the pod filesystem.",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\"."
        },
        "name": {
          "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector.",
          "type": "string"
        },
        "optional": {
          "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.",
          "type": "boolean"
        },
        "path": {
          "description": "Relative path from the volume root to write the bundle.",
          "type": "string"
        },
        "signerName": {
          "description": "Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated.",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ComponentCondition": {
      "description": "Information about the condition of a component.",
      "properties": {
        "error": {
          "description": "Condition error code for a component. For example, a health check error code.",
          "type": "string"
        },
        "message": {
          "description": "Message about the condition for a component. For example, information about a health check.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".",
          "type": "string"
        },
        "type": {
          "description": "Type of condition for a component. Valid value: \"Healthy\"",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ComponentStatus": {
      "description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info. Deprecated: This API is deprecated in v1.19+",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "conditions": {
          "description": "List of component conditions observed",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ComponentCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ComponentStatus",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ComponentStatusList": {
      "description": "Status of all the conditions for the component as a list of ComponentStatus objects. Deprecated: This API is deprecated in v1.19+",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ComponentStatus objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ComponentStatus"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ComponentStatusList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMap": {
      "description": "ConfigMap holds configuration data for pods to consume.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "binaryData": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "description": "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.",
          "type": "object"
        },
        "data": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
          "type": "object"
        },
        "immutable": {
          "description": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMap",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap must be defined",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ConfigMapList": {
      "description": "ConfigMapList is a resource containing a list of ConfigMap objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of ConfigMaps.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMap"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMapList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMapNodeConfigSource": {
      "description": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration",
      "properties": {
        "kubeletConfigKey": {
          "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.",
          "type": "string"
        },
        "name": {
          "description": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.",
          "type": "string"
        },
        "resourceVersion": {
          "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "name",
        "kubeletConfigKey"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
      "properties": {
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Container": {
      "description": "A single application container that you want to run within a pod.",
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array"
        },
        "image": {
          "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle",
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated."
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "resizePolicy": {
          "description": "Resources resize policy for the container.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
        },
        "restartPolicy": {
          "description": "RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.",
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext",
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerImage": {
      "description": "Describe a container image",
      "properties": {
        "names": {
          "description": "Names by which this image is known. e.g. [\"kubernetes.example/hyperkube:v1.0.7\", \"cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7\"]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sizeBytes": {
          "description": "The size of the image in bytes.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "description": "ContainerPort represents a network port in a single container.",
      "properties": {
        "containerPort": {
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
          "format": "int32",
          "type": "integer"
        },
        "hostIP": {
          "description": "What host IP to bind the external port to.",
          "type": "string"
        },
        "hostPort": {
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
          "type": "string"
        }
      },
      "required": [
        "containerPort"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerResizePolicy": {
      "description": "ContainerResizePolicy represents resource resize policy for the container.",
      "properties": {
        "resourceName": {
          "description": "Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.",
          "type": "string"
        },
        "restartPolicy": {
          "description": "Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.",
          "type": "string"
        }
      },
      "required": [
        "resourceName",
        "restartPolicy"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerState": {
      "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
      "properties": {
        "running": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateRunning",
          "description": "Details about a running container"
        },
        "terminated": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateTerminated",
          "description": "Details about a terminated container"
        },
        "waiting": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateWaiting",
          "description": "Details about a waiting container"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerStateRunning": {
      "description": "ContainerStateRunning is a running state of a container.",
      "properties": {
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Time at which the container was last (re-)started"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerStateTerminated": {
      "description": "ContainerStateTerminated is a terminated state of a container.",
      "properties": {
        "containerID": {
          "description": "Container's ID in the format '<type>://<container_id>'",
          "type": "string"
        },
        "exitCode": {
          "description": "Exit status from the last termination of the container",
          "format": "int32",
          "type": "integer"
        },
        "finishedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Time at which the container last terminated"
        },
        "message": {
          "description": "Message regarding the last termination of the container",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason from the last termination of the container",
          "type": "string"
        },
        "signal": {
          "description": "Signal from the last termination of the container",
          "format": "int32",
          "type": "integer"
        },
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Time at which previous execution of the container started"
        }
      },
      "required": [
        "exitCode"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerStateWaiting": {
      "description": "ContainerStateWaiting is a waiting state of a container.",
      "properties": {
        "message": {
          "description": "Message regarding why the container is not yet running.",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason the container is not yet running.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerStatus": {
      "description": "ContainerStatus contains details for the current status of this container.",
      "properties": {
        "allocatedResources": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "AllocatedResources represents the compute resources allocated for this container by the node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission and after successfully admitting desired pod resize.",
          "type": "object"
        },
        "containerID": {
          "description": "ContainerID is the ID of the container in the format '<type>://<container_id>'. Where type is a container runtime identifier, returned from Version call of CRI API (for example \"containerd\").",
          "type": "string"
        },
        "image": {
          "description": "Image is the name of container image that the container is running. The container image may not match the image used in the PodSpec, as it may have been resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.",
          "type": "string"
        },
        "imageID": {
          "description": "ImageID is the image ID of the container's image. The image ID may not match the image ID of the image used in the PodSpec, as it may have been resolved by the runtime.",
          "type": "string"
        },
        "lastState": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState",
          "description": "LastTerminationState holds the last termination state of the container to help debug container crashes and restarts. This field is not populated if the container is still running and RestartCount is 0."
        },
        "name": {
          "description": "Name is a DNS_LABEL representing the unique name of the container. Each container in a pod must have a unique name across all container types. Cannot be updated.",
          "type": "string"
        },
        "ready": {
          "description": "Ready specifies whether the container is currently passing its readiness check. The value will change as readiness probes keep executing. If no readiness probes are specified, this field defaults to true once the container is fully started (see Started field).\n\nThe value is typically used to determine whether a container is ready to accept traffic.",
          "type": "boolean"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
          "description": "Resources represents the compute resource requests and limits that have been successfully enacted on the running container after it has been started or has been successfully resized."
        },
        "restartCount": {
          "description": "RestartCount holds the number of times the container has been restarted. Kubelet makes an effort to always increment the value, but there are cases when the state may be lost due to node restarts and then the value may be reset to 0. The value is never negative.",
          "format": "int32",
          "type": "integer"
        },
        "started": {
          "description": "Started indicates whether the container has finished its postStart lifecycle hook and passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. In both cases, startup probes will run again. Is always true when no startupProbe is defined and container is running and has passed the postStart lifecycle hook. The null value must be treated the same as false.",
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState",
          "description": "State holds details about the container's current condition."
        }
      },
      "required": [
        "name",
        "ready",
        "restartCount",
        "image",
        "imageID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.DaemonEndpoint": {
      "description": "DaemonEndpoint contains information about a single Daemon endpoint.",
      "properties": {
        "Port": {
          "description": "Port number of the given endpoint.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
      "properties": {
        "items": {
          "description": "Items is a list of DownwardAPIVolume file",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector",
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported."
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector",
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported."
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "Items is a list of downward API volume file",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "properties": {
        "medium": {
          "description": "medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EndpointAddress": {
      "description": "EndpointAddress is a tuple that describes single IP address.",
      "properties": {
        "hostname": {
          "description": "The Hostname of this endpoint",
          "type": "string"
        },
        "ip": {
          "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10), or link-local multicast (224.0.0.0/24 or ff02::/16).",
          "type": "string"
        },
        "nodeName": {
          "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.",
          "type": "string"
        },
        "targetRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "Reference to object providing the endpoint."
        }
      },
      "required": [
        "ip"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.EndpointPort": {
      "description": "EndpointPort is a tuple that describes a single port.",
      "properties": {
        "appProtocol": {
          "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
          "type": "string"
        },
        "name": {
          "description": "The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.",
          "type": "string"
        },
        "port": {
          "description": "The port number of the endpoint.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.EndpointSubset": {
      "description": "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n\n\t{\n\t  Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t  Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t}\n\nThe resulting set of endpoints can be viewed as:\n\n\ta: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n\tb: [ 10.10.1.1:309, 10.10.2.2:309 ]",
      "properties": {
        "addresses": {
          "description": "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
          },
          "type": "array"
        },
        "notReadyAddresses": {
          "description": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
          },
          "type": "array"
        },
        "ports": {
          "description": "Port numbers available on the related IP addresses.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointPort"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Endpoints": {
      "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n\n\t Name: \"mysvc\",\n\t Subsets: [\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t   },\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.3.3\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n\t   },\n\t]",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "subsets": {
          "description": "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointSubset"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Endpoints",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EndpointsList": {
      "description": "EndpointsList is a list of endpoints.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of endpoints.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Endpoints"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "EndpointsList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource",
          "description": "The ConfigMap to select from"
        },
        "prefix": {
          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource",
          "description": "The Secret to select from"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource",
          "description": "Source for the environment variable's value. Cannot be used if value is not empty."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector",
          "description": "Selects a key of a ConfigMap."
        },
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector",
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs."
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector",
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
        },
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector",
          "description": "Selects a key of a secret in the pod's namespace"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralContainer": {
      "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.",
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array"
        },
        "image": {
          "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle",
          "description": "Lifecycle is not allowed for ephemeral containers."
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Probes are not allowed for ephemeral containers."
        },
        "name": {
          "description": "Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.",
          "type": "string"
        },
        "ports": {
          "description": "Ports are not allowed for ephemeral containers.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Probes are not allowed for ephemeral containers."
        },
        "resizePolicy": {
          "description": "Resources resize policy for the container.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements",
          "description": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod."
        },
        "restartPolicy": {
          "description": "Restart policy for the container to manage the restart behavior of each container within a pod. This may only be set for init containers. You cannot set this field on ephemeral containers.",
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext",
          "description": "Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext."
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe",
          "description": "Probes are not allowed for ephemeral containers."
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "targetContainerName": {
          "description": "If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.",
          "type": "string"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate",
          "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Event": {
      "description": "Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
      "properties": {
        "action": {
          "description": "What action was taken/failed regarding to the Regarding object.",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "count": {
          "description": "The number of times this event has occurred.",
          "format": "int32",
          "type": "integer"
        },
        "eventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time when this Event was first observed."
        },
        "firstTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)"
        },
        "involvedObject": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "The object that this event is about."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "lastTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The time at which the most recent occurrence of this event was recorded."
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "reason": {
          "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
          "type": "string"
        },
        "related": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "Optional secondary object for more complex actions."
        },
        "reportingComponent": {
          "description": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.",
          "type": "string"
        },
        "reportingInstance": {
          "description": "ID of the controller instance, e.g. `kubelet-xyzf`.",
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSeries",
          "description": "Data about the Event series this event represents or nil if it's a singleton Event."
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource",
          "description": "The component reporting this event. Should be a short machine understandable string."
        },
        "type": {
          "description": "Type of this event (Normal, Warning), new types could be added in the future",
          "type": "string"
        }
      },
      "required": [
        "metadata",
        "involvedObject"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Event",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EventList": {
      "description": "EventList is a list of events.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of events",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Event"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "EventList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EventSeries": {
      "description": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.",
      "properties": {
        "count": {
          "description": "Number of occurrences in this series up to the last heartbeat time",
          "format": "int32",
          "type": "integer"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "Time of the last occurrence observed"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EventSource": {
      "description": "EventSource contains information for an event.",
      "properties": {
        "component": {
          "description": "Component from which the event is generated.",
          "type": "string"
        },
        "host": {
          "description": "Node name on which the event is generated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "lun": {
          "description": "lun is Optional: FC target lun number",
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "targetWWNs": {
          "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "wwids": {
          "description": "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FlexPersistentVolumeSource": {
      "description": "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.",
      "properties": {
        "driver": {
          "description": "driver is the name of the driver to use for this volume.",
          "type": "string"
        },
        "fsType": {
          "description": "fsType is the Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "options is Optional: this field holds extra command options if any.",
          "type": "object"
        },
        "readOnly": {
          "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef is Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      "properties": {
        "driver": {
          "description": "driver is the name of the driver to use for this volume.",
          "type": "string"
        },
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "options is Optional: this field holds extra command options if any.",
          "type": "object"
        },
        "readOnly": {
          "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts."
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "datasetName": {
          "description": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
          "type": "string"
        },
        "datasetUUID": {
          "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "partition": {
          "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "format": "int32",
          "type": "integer"
        },
        "pdName": {
          "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "boolean"
        }
      },
      "required": [
        "pdName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GRPCAction": {
      "properties": {
        "port": {
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
          "format": "int32",
          "type": "integer"
        },
        "service": {
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
      "properties": {
        "directory": {
          "description": "directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string"
        },
        "repository": {
          "description": "repository is the URL",
          "type": "string"
        },
        "revision": {
          "description": "revision is the commit hash for the specified revision.",
          "type": "string"
        }
      },
      "required": [
        "repository"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource": {
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "endpoints": {
          "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "endpointsNamespace": {
          "description": "endpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "path": {
          "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "boolean"
        }
      },
      "required": [
        "endpoints",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "endpoints": {
          "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "path": {
          "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "boolean"
        }
      },
      "required": [
        "endpoints",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
          },
          "type": "array"
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "description": "The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HostAlias": {
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
      "properties": {
        "hostnames": {
          "description": "Hostnames for the above IP address.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ip": {
          "description": "IP address of the host file entry.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.HostIP": {
      "description": "HostIP represents a single IP address allocated to the host.",
      "properties": {
        "ip": {
          "description": "IP is the IP address assigned to the host",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "description": "path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        },
        "type": {
          "description": "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ISCSIPersistentVolumeSource": {
      "description": "ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "properties": {
        "chapAuthDiscovery": {
          "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
          "type": "boolean"
        },
        "chapAuthSession": {
          "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
          "type": "boolean"
        },
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
          "type": "string"
        },
        "initiatorName": {
          "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
          "type": "string"
        },
        "iqn": {
          "description": "iqn is Target iSCSI Qualified Name.",
          "type": "string"
        },
        "iscsiInterface": {
          "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
          "type": "string"
        },
        "lun": {
          "description": "lun is iSCSI Target Lun number.",
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "description": "portals is the iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
        },
        "targetPortal": {
          "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "string"
        }
      },
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "properties": {
        "chapAuthDiscovery": {
          "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
          "type": "boolean"
        },
        "chapAuthSession": {
          "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
          "type": "boolean"
        },
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
          "type": "string"
        },
        "initiatorName": {
          "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
          "type": "string"
        },
        "iqn": {
          "description": "iqn is the target iSCSI Qualified Name.",
          "type": "string"
        },
        "iscsiInterface": {
          "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
          "type": "string"
        },
        "lun": {
          "description": "lun represents iSCSI Target Lun number.",
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication"
        },
        "targetPortal": {
          "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "string"
        }
      },
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "description": "Maps a string key to a path within a volume.",
      "properties": {
        "key": {
          "description": "key is the key to project.",
          "type": "string"
        },
        "mode": {
          "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler",
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
        },
        "preStop": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler",
          "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LifecycleHandler": {
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction",
          "description": "Exec specifies the action to take."
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform."
        },
        "sleep": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SleepAction",
          "description": "Sleep represents the duration that the container should sleep before being terminated."
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction",
          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LimitRange": {
      "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeSpec",
          "description": "Spec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LimitRange",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.LimitRangeItem": {
      "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
      "properties": {
        "default": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
          "type": "object"
        },
        "defaultRequest": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
          "type": "object"
        },
        "max": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Max usage constraints on this kind by resource name.",
          "type": "object"
        },
        "maxLimitRequestRatio": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
          "type": "object"
        },
        "min": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Min usage constraints on this kind by resource name.",
          "type": "object"
        },
        "type": {
          "description": "Type of resource that this limit applies to.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.LimitRangeList": {
      "description": "LimitRangeList is a list of LimitRange items.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LimitRange"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LimitRangeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.LimitRangeSpec": {
      "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
      "properties": {
        "limits": {
          "description": "Limits is the list of LimitRangeItem objects that are enforced.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeItem"
          },
          "type": "array"
        }
      },
      "required": [
        "limits"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.LoadBalancerIngress": {
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
      "properties": {
        "hostname": {
          "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
          "type": "string"
        },
        "ip": {
          "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
          "type": "string"
        },
        "ipMode": {
          "description": "IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to \"VIP\" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to \"Proxy\" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.",
          "type": "string"
        },
        "ports": {
          "description": "Ports is a list of records of service ports If used, every port defined in the service should have an entry in it",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PortStatus"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LoadBalancerStatus": {
      "description": "LoadBalancerStatus represents the status of a load-balancer.",
      "properties": {
        "ingress": {
          "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerIngress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.LocalVolumeSource": {
      "description": "Local represents directly-attached storage with node affinity (Beta feature)",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a filesystem if unspecified.",
          "type": "string"
        },
        "path": {
          "description": "path of the full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ModifyVolumeStatus": {
      "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation",
      "properties": {
        "status": {
          "description": "status is the status of the ControllerModifyVolume operation. It can be in any of following states:\n - Pending\n   Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as\n   the specified VolumeAttributesClass not existing.\n - InProgress\n   InProgress indicates that the volume is being modified.\n - Infeasible\n  Infeasible indicates that the request has been rejected as invalid by the CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass needs to be specified.\nNote: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.",
          "type": "string"
        },
        "targetVolumeAttributesClassName": {
          "description": "targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "path": {
          "description": "path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "boolean"
        },
        "server": {
          "description": "server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        }
      },
      "required": [
        "server",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Namespace": {
      "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceSpec",
          "description": "Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceStatus",
          "description": "Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Namespace",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NamespaceCondition": {
      "description": "NamespaceCondition contains details about state of namespace.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of namespace controller condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NamespaceList": {
      "description": "NamespaceList is a list of Namespaces.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Namespace"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "NamespaceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NamespaceSpec": {
      "description": "NamespaceSpec describes the attributes on a Namespace.",
      "properties": {
        "finalizers": {
          "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NamespaceStatus": {
      "description": "NamespaceStatus is information about the current status of a Namespace.",
      "properties": {
        "conditions": {
          "description": "Represents the latest available observations of a namespace's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "description": "Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Node": {
      "description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSpec",
          "description": "Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeStatus",
          "description": "Most recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Node",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NodeAddress": {
      "description": "NodeAddress contains information for the node's address.",
      "properties": {
        "address": {
          "description": "The node address.",
          "type": "string"
        },
        "type": {
          "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "address"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector",
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeCondition": {
      "description": "NodeCondition contains condition information for a node.",
      "properties": {
        "lastHeartbeatTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time we got an update on a given condition."
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transit from one status to another."
        },
        "message": {
          "description": "Human readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "(brief) reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of node condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeConfigSource": {
      "description": "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil. This API is deprecated since 1.22",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapNodeConfigSource",
          "description": "ConfigMap is a reference to a Node's ConfigMap"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeConfigStatus": {
      "description": "NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.",
      "properties": {
        "active": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource",
          "description": "Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error."
        },
        "assigned": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource",
          "description": "Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned."
        },
        "error": {
          "description": "Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.",
          "type": "string"
        },
        "lastKnownGood": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource",
          "description": "LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeDaemonEndpoints": {
      "description": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
      "properties": {
        "kubeletEndpoint": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DaemonEndpoint",
          "description": "Endpoint on which Kubelet is listening."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeList": {
      "description": "NodeList is the whole list of all Nodes which have been registered with master.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of nodes",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Node"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "NodeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          },
          "type": "array"
        }
      },
      "required": [
        "nodeSelectorTerms"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
          "type": "string"
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
      "properties": {
        "matchExpressions": {
          "description": "A list of node selector requirements by node's labels.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array"
        },
        "matchFields": {
          "description": "A list of node selector requirements by node's fields.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSpec": {
      "description": "NodeSpec describes the attributes that a node is created with.",
      "properties": {
        "configSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource",
          "description": "Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature. This feature is removed."
        },
        "externalID": {
          "description": "Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966",
          "type": "string"
        },
        "podCIDR": {
          "description": "PodCIDR represents the pod IP range assigned to the node.",
          "type": "string"
        },
        "podCIDRs": {
          "description": "podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "providerID": {
          "description": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>",
          "type": "string"
        },
        "taints": {
          "description": "If specified, the node's taints.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Taint"
          },
          "type": "array"
        },
        "unschedulable": {
          "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeStatus": {
      "description": "NodeStatus is information about the current status of a node.",
      "properties": {
        "addresses": {
          "description": "List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See https://pr.k8s.io/79391 for an example. Consumers should assume that addresses can change during the lifetime of a Node. However, there are some exceptions where this may not be possible, such as Pods that inherit a Node's address in its own status or consumers of the downward API (status.hostIP).",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeAddress"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "allocatable": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.",
          "type": "object"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
          "type": "object"
        },
        "conditions": {
          "description": "Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "config": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigStatus",
          "description": "Status of the config assigned to the node via the dynamic Kubelet config feature."
        },
        "daemonEndpoints": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeDaemonEndpoints",
          "description": "Endpoints of daemons running on the Node."
        },
        "images": {
          "description": "List of container images on this node",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerImage"
          },
          "type": "array"
        },
        "nodeInfo": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSystemInfo",
          "description": "Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info"
        },
        "phase": {
          "description": "NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.",
          "type": "string"
        },
        "volumesAttached": {
          "description": "List of volumes that are attached to the node.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.AttachedVolume"
          },
          "type": "array"
        },
        "volumesInUse": {
          "description": "List of attachable volumes in use (mounted) by the node.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSystemInfo": {
      "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
      "properties": {
        "architecture": {
          "description": "The Architecture reported by the node",
          "type": "string"
        },
        "bootID": {
          "description": "Boot ID reported by the node.",
          "type": "string"
        },
        "containerRuntimeVersion": {
          "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).",
          "type": "string"
        },
        "kernelVersion": {
          "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
          "type": "string"
        },
        "kubeProxyVersion": {
          "description": "KubeProxy Version reported by the node.",
          "type": "string"
        },
        "kubeletVersion": {
          "description": "Kubelet Version reported by the node.",
          "type": "string"
        },
        "machineID": {
          "description": "MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
          "type": "string"
        },
        "operatingSystem": {
          "description": "The Operating System reported by the node",
          "type": "string"
        },
        "osImage": {
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
          "type": "string"
        },
        "systemUUID": {
          "description": "SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
          "type": "string"
        }
      },
      "required": [
        "machineID",
        "systemUUID",
        "bootID",
        "kernelVersion",
        "osImage",
        "containerRuntimeVersion",
        "kubeletVersion",
        "kubeProxyVersion",
        "operatingSystem",
        "architecture"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string"
        }
      },
      "required": [
        "fieldPath"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.PersistentVolume": {
      "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec",
          "description": "spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeStatus",
          "description": "status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolume",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec",
          "description": "spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus",
          "description": "status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimCondition": {
      "description": "PersistentVolumeClaimCondition contains details about state of pvc",
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastProbeTime is the time we probed the condition."
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastTransitionTime is the time the condition transitioned from one status to another."
        },
        "message": {
          "description": "message is the human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimList": {
      "description": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaimList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "properties": {
        "accessModes": {
          "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference",
          "description": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource."
        },
        "dataSourceRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedObjectReference",
          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled."
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeResourceRequirements",
          "description": "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "selector is a label query over volumes to consider for binding."
        },
        "storageClassName": {
          "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeAttributesClassName": {
          "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
          "type": "string"
        },
        "volumeName": {
          "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
      "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
      "properties": {
        "accessModes": {
          "description": "accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allocatedResourceStatuses": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "object",
          "x-kubernetes-map-type": "granular"
        },
        "allocatedResources": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "object"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "capacity represents the actual resources of the underlying volume.",
          "type": "object"
        },
        "conditions": {
          "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentVolumeAttributesClassName": {
          "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha field and requires enabling VolumeAttributesClass feature.",
          "type": "string"
        },
        "modifyVolumeStatus": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ModifyVolumeStatus",
          "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature."
        },
        "phase": {
          "description": "phase represents the current phase of PersistentVolumeClaim.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec",
          "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "properties": {
        "claimName": {
          "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
          "type": "boolean"
        }
      },
      "required": [
        "claimName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeList": {
      "description": "PersistentVolumeList is a list of PersistentVolume items.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolume"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeSpec": {
      "description": "PersistentVolumeSpec is the specification of a persistent volume.",
      "properties": {
        "accessModes": {
          "description": "accessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource",
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource",
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "capacity is the description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
          "type": "object"
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource",
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource",
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        },
        "claimRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "claimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
          "x-kubernetes-map-type": "granular"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource",
          "description": "csi represents storage that is handled by an external CSI driver (Beta feature)."
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource",
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource",
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource",
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource",
          "description": "glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource",
          "description": "hostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource",
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin."
        },
        "local": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalVolumeSource",
          "description": "local represents directly-attached storage with node affinity"
        },
        "mountOptions": {
          "description": "mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource",
          "description": "nfs represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeNodeAffinity",
          "description": "nodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume."
        },
        "persistentVolumeReclaimPolicy": {
          "description": "persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
          "type": "string"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource",
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource",
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource",
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource",
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
        },
        "storageClassName": {
          "description": "storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.",
          "type": "string"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource",
          "description": "storageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md"
        },
        "volumeAttributesClassName": {
          "description": "Name of VolumeAttributesClass to which this persistent volume belongs. Empty value is not allowed. When this field is not set, it indicates that this volume does not belong to any VolumeAttributesClass. This field is mutable and can be changed by the CSI driver after a volume has been updated successfully to a new class. For an unbound PersistentVolume, the volumeAttributesClassName will be matched with unbound PersistentVolumeClaims during the binding process. This is an alpha field and requires enabling VolumeAttributesClass feature.",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.",
          "type": "string"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeStatus": {
      "description": "PersistentVolumeStatus is the current status of a persistent volume.",
      "properties": {
        "lastPhaseTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastPhaseTransitionTime is the time the phase transitioned from one to another and automatically resets to current time everytime a volume phase transitions. This is an alpha field and requires enabling PersistentVolumeLastPhaseTransitionTime feature."
        },
        "message": {
          "description": "message is a human-readable message indicating details about why the volume is in this state.",
          "type": "string"
        },
        "phase": {
          "description": "phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase",
          "type": "string"
        },
        "reason": {
          "description": "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "description": "Represents a Photon Controller persistent disk resource.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "pdID": {
          "description": "pdID is the ID that identifies Photon Controller persistent disk",
          "type": "string"
        }
      },
      "required": [
        "pdID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Pod": {
      "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec",
          "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus",
          "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Pod",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods."
        },
        "matchLabelKeys": {
          "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "mismatchLabelKeys": {
          "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces."
        },
        "namespaces": {
          "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topologyKey": {
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
          "type": "string"
        }
      },
      "required": [
        "topologyKey"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodCondition": {
      "description": "PodCondition contains details for the current condition of this pod.",
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time we probed the condition."
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "options": {
          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          },
          "type": "array"
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
      "properties": {
        "name": {
          "description": "Required.",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodIP": {
      "description": "PodIP represents a single IP address allocated to the pod.",
      "properties": {
        "ip": {
          "description": "IP is the IP address assigned to the pod",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodList": {
      "description": "PodList is a list of Pods.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodOS": {
      "description": "PodOS defines the OS parameters of a pod.",
      "properties": {
        "name": {
          "description": "Name is the name of the operating system. The currently supported values are linux and windows. Additional value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration Clients should expect to handle additional values and treat unrecognized values in this field as os: null",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodReadinessGate": {
      "description": "PodReadinessGate contains the reference to a pod condition",
      "properties": {
        "conditionType": {
          "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
          "type": "string"
        }
      },
      "required": [
        "conditionType"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodResourceClaim": {
      "description": "PodResourceClaim references exactly one ResourceClaim through a ClaimSource. It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.",
      "properties": {
        "name": {
          "description": "Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClaimSource",
          "description": "Source describes where to find the ResourceClaim."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodResourceClaimStatus": {
      "description": "PodResourceClaimStatus is stored in the PodStatus for each PodResourceClaim which references a ResourceClaimTemplate. It stores the generated name for the corresponding ResourceClaim.",
      "properties": {
        "name": {
          "description": "Name uniquely identifies this resource claim inside the pod. This must match the name of an entry in pod.spec.resourceClaims, which implies that the string must be a DNS_LABEL.",
          "type": "string"
        },
        "resourceClaimName": {
          "description": "ResourceClaimName is the name of the ResourceClaim that was generated for the Pod in the namespace of the Pod. It this is unset, then generating a ResourceClaim was not necessary. The pod.spec.resourceClaims entry can be ignored in this case.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSchedulingGate": {
      "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
      "properties": {
        "name": {
          "description": "Name of the scheduling gate. Each scheduling gate must have a unique name field.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "properties": {
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
          "format": "int64",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows."
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile",
          "description": "The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows."
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          },
          "type": "array"
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions",
          "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSpec": {
      "description": "PodSpec is a description of a pod.",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
          "format": "int64",
          "type": "integer"
        },
        "affinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity",
          "description": "If specified, the pod's scheduling constraints"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
          "type": "boolean"
        },
        "containers": {
          "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "dnsConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig",
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy."
        },
        "dnsPolicy": {
          "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
          "type": "string"
        },
        "enableServiceLinks": {
          "description": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.",
          "type": "boolean"
        },
        "ephemeralContainers": {
          "description": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralContainer"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostAliases": {
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostIPC": {
          "description": "Use the host's ipc namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "hostNetwork": {
          "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
          "type": "boolean"
        },
        "hostPID": {
          "description": "Use the host's pid namespace. Optional: Default to false.",
          "type": "boolean"
        },
        "hostUsers": {
          "description": "Use the host's user namespace. Optional: Default to true. If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns is created for the pod. Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host. This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.",
          "type": "boolean"
        },
        "hostname": {
          "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "nodeName": {
          "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "os": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodOS",
          "description": "Specifies the OS of the containers in the pod. Some pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup"
        },
        "overhead": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md",
          "type": "object"
        },
        "preemptionPolicy": {
          "description": "PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
          "type": "string"
        },
        "priority": {
          "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
          "format": "int32",
          "type": "integer"
        },
        "priorityClassName": {
          "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
          "type": "string"
        },
        "readinessGates": {
          "description": "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          },
          "type": "array"
        },
        "resourceClaims": {
          "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start. The resources will be made available to those containers which consume them by name.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        },
        "restartPolicy": {
          "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
          "type": "string"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
          "type": "string"
        },
        "schedulerName": {
          "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
          "type": "string"
        },
        "schedulingGates": {
          "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod. If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the scheduler will not attempt to schedule the pod.\n\nSchedulingGates can only be set at pod creation time, and be removed only afterwards.\n\nThis is a beta feature enabled by the PodSchedulingReadiness feature gate.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodSchedulingGate"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext",
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field."
        },
        "serviceAccount": {
          "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
          "type": "string"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "description": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.",
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.",
          "type": "boolean"
        },
        "subdomain": {
          "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all.",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "description": "If specified, the pod's tolerations.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "topologyKey",
            "whenUnsatisfiable"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      },
      "required": [
        "containers"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodStatus": {
      "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
      "properties": {
        "conditions": {
          "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "containerStatuses": {
          "description": "The list has one entry per container in the manifest. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          },
          "type": "array"
        },
        "ephemeralContainerStatuses": {
          "description": "Status for any ephemeral containers that have run in this pod.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          },
          "type": "array"
        },
        "hostIP": {
          "description": "hostIP holds the IP address of the host to which the pod is assigned. Empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns mean that HostIP will not be updated even if there is a node is assigned to pod",
          "type": "string"
        },
        "hostIPs": {
          "description": "hostIPs holds the IP addresses allocated to the host. If this field is specified, the first entry must match the hostIP field. This list is empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns means that HostIPs will not be updated even if there is a node is assigned to this pod.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostIP"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainerStatuses": {
          "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          },
          "type": "array"
        },
        "message": {
          "description": "A human readable message indicating details about why the pod is in this condition.",
          "type": "string"
        },
        "nominatedNodeName": {
          "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
          "type": "string"
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
          "type": "string"
        },
        "podIP": {
          "description": "podIP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
          "type": "string"
        },
        "podIPs": {
          "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodIP"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "qosClass": {
          "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/#quality-of-service-classes",
          "type": "string"
        },
        "reason": {
          "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
          "type": "string"
        },
        "resize": {
          "description": "Status of resources resize desired for pod's containers. It is empty if no resources resize is pending. Any changes to container resources will automatically set this to \"Proposed\"",
          "type": "string"
        },
        "resourceClaimStatuses": {
          "description": "Status of resource claims.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaimStatus"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodTemplate": {
      "description": "PodTemplate describes a template for creating copies of a predefined pod.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodTemplate",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodTemplateList": {
      "description": "PodTemplateList is a list of PodTemplates.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of pod templates",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplate"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodTemplateList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodTemplateSpec": {
      "description": "PodTemplateSpec describes the data a pod should have when created from a template",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec",
          "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PortStatus": {
      "properties": {
        "error": {
          "description": "Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.",
          "type": "string"
        },
        "port": {
          "description": "Port is the port number of the service port of which status is recorded here",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "Protocol is the protocol of the service port of which status is recorded here The supported values are: \"TCP\", \"UDP\", \"SCTP\"",
          "type": "string"
        }
      },
      "required": [
        "port",
        "protocol"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "description": "PortworxVolumeSource represents a Portworx volume resource.",
      "properties": {
        "fsType": {
          "description": "fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "volumeID": {
          "description": "volumeID uniquely identifies a Portworx volume",
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "properties": {
        "preference": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm",
          "description": "A node selector term, associated with the corresponding weight."
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "preference"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction",
          "description": "Exec specifies the action to take."
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "grpc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction",
          "description": "GRPC specifies an action involving a GRPC port."
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform."
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction",
          "description": "TCPSocket specifies an action involving a TCP port."
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
          "format": "int64",
          "type": "integer"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "description": "Represents a projected volume source",
      "properties": {
        "defaultMode": {
          "description": "defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "description": "sources is the list of volume projections",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
      "properties": {
        "group": {
          "description": "group to map volume access to Default is no group",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
          "type": "boolean"
        },
        "registry": {
          "description": "registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
          "type": "string"
        },
        "tenant": {
          "description": "tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
          "type": "string"
        },
        "user": {
          "description": "user to map volume access to Defaults to serivceaccount user",
          "type": "string"
        },
        "volume": {
          "description": "volume is a string that references an already created Quobyte volume by name.",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "volume"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.RBDPersistentVolumeSource": {
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
          "type": "string"
        },
        "image": {
          "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "keyring": {
          "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "monitors": {
          "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "user": {
          "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors",
        "image"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
          "type": "string"
        },
        "image": {
          "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "keyring": {
          "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "monitors": {
          "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        },
        "user": {
          "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        }
      },
      "required": [
        "monitors",
        "image"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ReplicationController": {
      "description": "ReplicationController represents the configuration of a replication controller.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerSpec",
          "description": "Spec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerStatus",
          "description": "Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ReplicationController",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ReplicationControllerCondition": {
      "description": "ReplicationControllerCondition describes the state of a replication controller at a certain point.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "A human readable message indicating details about the transition.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type of replication controller condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ReplicationControllerList": {
      "description": "ReplicationControllerList is a collection of replication controllers.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationController"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ReplicationControllerList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ReplicationControllerSpec": {
      "description": "ReplicationControllerSpec is the specification of a replication controller.",
      "properties": {
        "minReadySeconds": {
          "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
          "format": "int32",
          "type": "integer"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec",
          "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ReplicationControllerStatus": {
      "description": "ReplicationControllerStatus represents the current status of a replication controller.",
      "properties": {
        "availableReplicas": {
          "description": "The number of available replicas (ready for at least minReadySeconds) for this replication controller.",
          "format": "int32",
          "type": "integer"
        },
        "conditions": {
          "description": "Represents the latest available observations of a replication controller's current state.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "fullyLabeledReplicas": {
          "description": "The number of pods that have labels matching the labels of the pod template of the replication controller.",
          "format": "int32",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "ObservedGeneration reflects the generation of the most recently observed replication controller.",
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "description": "The number of ready replicas for this replication controller.",
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "description": "Replicas is the most recently observed number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "replicas"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceClaim": {
      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
      "properties": {
        "name": {
          "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "Specifies the output format of the exposed resources, defaults to \"1\""
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string"
        }
      },
      "required": [
        "resource"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceQuota": {
      "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec",
          "description": "Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus",
          "description": "Status defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceQuota",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ResourceQuotaList": {
      "description": "ResourceQuotaList is a list of ResourceQuota items.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuota"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceQuotaList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ResourceQuotaSpec": {
      "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
      "properties": {
        "hard": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
          "type": "object"
        },
        "scopeSelector": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScopeSelector",
          "description": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched."
        },
        "scopes": {
          "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceQuotaStatus": {
      "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
      "properties": {
        "hard": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
          "type": "object"
        },
        "used": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Used is the current observed total usage of the resource in the namespace.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "properties": {
        "claims": {
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "limits": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource": {
      "description": "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"",
          "type": "string"
        },
        "gateway": {
          "description": "gateway is the host address of the ScaleIO API Gateway.",
          "type": "string"
        },
        "protectionDomain": {
          "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference",
          "description": "secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "description": "sslEnabled is the flag to enable/disable SSL communication with Gateway, default false",
          "type": "boolean"
        },
        "storageMode": {
          "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
          "type": "string"
        },
        "storagePool": {
          "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
          "type": "string"
        },
        "system": {
          "description": "system is the name of the storage system as configured in ScaleIO.",
          "type": "string"
        },
        "volumeName": {
          "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
          "type": "string"
        }
      },
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
          "type": "string"
        },
        "gateway": {
          "description": "gateway is the host address of the ScaleIO API Gateway.",
          "type": "string"
        },
        "protectionDomain": {
          "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
        },
        "sslEnabled": {
          "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
          "type": "boolean"
        },
        "storageMode": {
          "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
          "type": "string"
        },
        "storagePool": {
          "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
          "type": "string"
        },
        "system": {
          "description": "system is the name of the storage system as configured in ScaleIO.",
          "type": "string"
        },
        "volumeName": {
          "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
          "type": "string"
        }
      },
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ScopeSelector": {
      "description": "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.",
      "properties": {
        "matchExpressions": {
          "description": "A list of scope selector requirements by scope of the resources.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ScopedResourceSelectorRequirement": {
      "description": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
      "properties": {
        "operator": {
          "description": "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
          "type": "string"
        },
        "scopeName": {
          "description": "The name of the scope that the selector applies to.",
          "type": "string"
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "scopeName",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
      "properties": {
        "localhostProfile": {
          "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.",
          "type": "string"
        },
        "type": {
          "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.Secret": {
      "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "description": "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
          "type": "object"
        },
        "immutable": {
          "description": "Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "stringData": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.",
          "type": "object"
        },
        "type": {
          "description": "Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Secret",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret must be defined",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretList": {
      "description": "SecretList is a list of Secret.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Secret"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "SecretList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
      "properties": {
        "items": {
          "description": "items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "optional field specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretReference": {
      "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace",
      "properties": {
        "name": {
          "description": "name is unique within a namespace to reference a secret resource.",
          "type": "string"
        },
        "namespace": {
          "description": "namespace defines the space within which the secret name must be unique.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
      "properties": {
        "defaultMode": {
          "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "optional": {
          "description": "optional field specify whether the Secret or its keys must be defined",
          "type": "boolean"
        },
        "secretName": {
          "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities",
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows."
        },
        "privileged": {
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions",
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows."
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile",
          "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows."
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions",
          "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Service": {
      "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec",
          "description": "Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceStatus",
          "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Service",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccount": {
      "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "secrets": {
          "description": "Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use. Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token secrets for use outside of pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccount",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccountList": {
      "description": "ServiceAccountList is a list of ServiceAccount objects",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccount"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccountList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
      "properties": {
        "audience": {
          "description": "audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
          "type": "string"
        },
        "expirationSeconds": {
          "description": "expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
          "format": "int64",
          "type": "integer"
        },
        "path": {
          "description": "path is the path relative to the mount point of the file to project the token into.",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ServiceList": {
      "description": "ServiceList holds a list of services.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of services",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Service"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServicePort": {
      "description": "ServicePort contains information on service's port.",
      "properties": {
        "appProtocol": {
          "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
          "type": "string"
        },
        "name": {
          "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
          "type": "string"
        },
        "nodePort": {
          "description": "The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "description": "The port that will be exposed by this service.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
          "type": "string"
        },
        "targetPort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ServiceSpec": {
      "description": "ServiceSpec describes the attributes that a user creates on a service.",
      "properties": {
        "allocateLoadBalancerNodePorts": {
          "description": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
          "type": "boolean"
        },
        "clusterIP": {
          "description": "clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address. Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "clusterIPs": {
          "description": "ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "externalIPs": {
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "externalName": {
          "description": "externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".",
          "type": "string"
        },
        "externalTrafficPolicy": {
          "description": "externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.",
          "type": "string"
        },
        "healthCheckNodePort": {
          "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.",
          "format": "int32",
          "type": "integer"
        },
        "internalTrafficPolicy": {
          "description": "InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).",
          "type": "string"
        },
        "ipFamilies": {
          "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "ipFamilyPolicy": {
          "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.",
          "type": "string"
        },
        "loadBalancerClass": {
          "description": "loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.",
          "type": "string"
        },
        "loadBalancerIP": {
          "description": "Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations. Using it is non-portable and it may not support dual-stack. Users are encouraged to use implementation-specific annotations when available.",
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ports": {
          "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "port",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        },
        "publishNotReadyAddresses": {
          "description": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
          "type": "boolean"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "sessionAffinity": {
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig",
          "description": "sessionAffinityConfig contains the configurations of session affinity."
        },
        "type": {
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ServiceStatus": {
      "description": "ServiceStatus represents the current status of a service.",
      "properties": {
        "conditions": {
          "description": "Current service state",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus",
          "description": "LoadBalancer contains the current status of the load-balancer, if one is present."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SessionAffinityConfig": {
      "description": "SessionAffinityConfig represents the configurations of session affinity.",
      "properties": {
        "clientIP": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClientIPConfig",
          "description": "clientIP contains the configurations of Client IP based session affinity."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SleepAction": {
      "description": "SleepAction describes a \"sleep\" action.",
      "properties": {
        "seconds": {
          "description": "Seconds is the number of seconds to sleep.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "seconds"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.StorageOSPersistentVolumeSource": {
      "description": "Represents a StorageOS persistent volume resource.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted."
        },
        "volumeName": {
          "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
          "type": "string"
        },
        "volumeNamespace": {
          "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "description": "Represents a StorageOS persistent volume resource.",
      "properties": {
        "fsType": {
          "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference",
          "description": "secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted."
        },
        "volumeName": {
          "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
          "type": "string"
        },
        "volumeNamespace": {
          "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Sysctl": {
      "description": "Sysctl defines a kernel parameter to be set",
      "properties": {
        "name": {
          "description": "Name of a property to set",
          "type": "string"
        },
        "value": {
          "description": "Value of a property to set",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Taint": {
      "description": "The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.",
      "properties": {
        "effect": {
          "description": "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.",
          "type": "string"
        },
        "key": {
          "description": "Required. The taint key to be applied to a node.",
          "type": "string"
        },
        "timeAdded": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints."
        },
        "value": {
          "description": "The taint value corresponding to the taint key.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "effect"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
          "type": "string"
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
          "type": "string"
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.TopologySelectorLabelRequirement": {
      "description": "A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.",
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string"
        },
        "values": {
          "description": "An array of string values. One value must match the label to be selected. Each entry in Values is ORed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "values"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TopologySelectorTerm": {
      "description": "A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
      "properties": {
        "matchLabelExpressions": {
          "description": "A list of topology selector requirements by labels.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain."
        },
        "matchLabelKeys": {
          "description": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "maxSkew": {
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
          "format": "int32",
          "type": "integer"
        },
        "minDomains": {
          "description": "MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
          "format": "int32",
          "type": "integer"
        },
        "nodeAffinityPolicy": {
          "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
          "type": "string"
        },
        "topologyKey": {
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
          "type": "string"
        },
        "whenUnsatisfiable": {
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
          "type": "string"
        }
      },
      "required": [
        "maxSkew",
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.TypedObjectReference": {
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Volume": {
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource",
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource",
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod."
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource",
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource",
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        },
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource",
          "description": "configMap represents a configMap that should populate this volume"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource",
          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature)."
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource",
          "description": "downwardAPI represents downward API about the pod that should populate this volume"
        },
        "emptyDir": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource",
          "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
        },
        "ephemeral": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource",
          "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time."
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource",
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod."
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource",
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin."
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource",
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        },
        "gitRepo": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource",
          "description": "gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container."
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource",
          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource",
          "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource",
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md"
        },
        "name": {
          "description": "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource",
          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource",
          "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource",
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine"
        },
        "projected": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource",
          "description": "projected items for all in one resources secrets, configmaps, and downward API"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource",
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource",
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource",
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes."
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource",
          "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource",
          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes."
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "description": "volumeDevice describes a mapping of a raw block device within a container.",
      "properties": {
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be mapped to.",
          "type": "string"
        },
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string"
        }
      },
      "required": [
        "name",
        "devicePath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
          "type": "string"
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
          "type": "string"
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
          "type": "boolean"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "subPathExpr": {
          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "mountPath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeNodeAffinity": {
      "description": "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.",
      "properties": {
        "required": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector",
          "description": "required specifies hard node constraints that must be met."
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "properties": {
        "clusterTrustBundle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClusterTrustBundleProjection",
          "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time."
        },
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection",
          "description": "configMap information about the configMap data to project"
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection",
          "description": "downwardAPI information about the downwardAPI data to project"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection",
          "description": "secret information about the secret data to project"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection",
          "description": "serviceAccountToken is information about the serviceAccountToken data to project"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeResourceRequirements": {
      "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
      "properties": {
        "limits": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "description": "Represents a vSphere volume resource.",
      "properties": {
        "fsType": {
          "description": "fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "storagePolicyID": {
          "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          "type": "string"
        },
        "storagePolicyName": {
          "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
          "type": "string"
        },
        "volumePath": {
          "description": "volumePath is the path that identifies vSphere volume vmdk",
          "type": "string"
        }
      },
      "required": [
        "volumePath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm",
          "description": "Required. A pod affinity term, associated with the corresponding weight."
        },
        "weight": {
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
      "properties": {
        "gmsaCredentialSpec": {
          "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          "type": "string"
        },
        "hostProcess": {
          "description": "HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.",
          "type": "boolean"
        },
        "runAsUserName": {
          "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.discovery.v1.Endpoint": {
      "description": "Endpoint represents a single logical \"backend\" implementing a service.",
      "properties": {
        "addresses": {
          "description": "addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100. These are all assumed to be fungible and clients may choose to only use the first element. Refer to: https://issue.k8s.io/106267",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "conditions": {
          "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointConditions",
          "description": "conditions contains information about the current status of the endpoint."
        },
        "deprecatedTopology": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.",
          "type": "object"
        },
        "hints": {
          "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointHints",
          "description": "hints contains information associated with how an endpoint should be consumed."
        },
        "hostname": {
          "description": "hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.",
          "type": "string"
        },
        "nodeName": {
          "description": "nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node.",
          "type": "string"
        },
        "targetRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "targetRef is a reference to a Kubernetes object that represents this endpoint."
        },
        "zone": {
          "description": "zone is the name of the Zone this endpoint exists in.",
          "type": "string"
        }
      },
      "required": [
        "addresses"
      ],
      "type": "object"
    },
    "io.k8s.api.discovery.v1.EndpointConditions": {
      "description": "EndpointConditions represents the current condition of an endpoint.",
      "properties": {
        "ready": {
          "description": "ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be \"true\" for terminating endpoints, except when the normal readiness behavior is being explicitly overridden, for example when the associated Service has set the publishNotReadyAddresses flag.",
          "type": "boolean"
        },
        "serving": {
          "description": "serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition.",
          "type": "boolean"
        },
        "terminating": {
          "description": "terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.discovery.v1.EndpointHints": {
      "description": "EndpointHints provides hints describing how an endpoint should be consumed.",
      "properties": {
        "forZones": {
          "description": "forZones indicates the zone(s) this endpoint should be consumed by to enable topology aware routing.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1.ForZone"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.discovery.v1.EndpointPort": {
      "description": "EndpointPort represents a Port used by an EndpointSlice",
      "properties": {
        "appProtocol": {
          "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
          "type": "string"
        },
        "name": {
          "description": "name represents the name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is derived from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.",
          "type": "string"
        },
        "port": {
          "description": "port represents the port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "protocol represents the IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.discovery.v1.EndpointSlice": {
      "description": "EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.",
      "properties": {
        "addressType": {
          "description": "addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "endpoints": {
          "description": "endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1.Endpoint"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "ports": {
          "description": "ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointPort"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "addressType",
        "endpoints"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "discovery.k8s.io",
          "kind": "EndpointSlice",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.discovery.v1.EndpointSliceList": {
      "description": "EndpointSliceList represents a list of endpoint slices",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of endpoint slices",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointSlice"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "discovery.k8s.io",
          "kind": "EndpointSliceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.discovery.v1.ForZone": {
      "description": "ForZone provides information about which zones should consume this endpoint.",
      "properties": {
        "name": {
          "description": "name represents the name of the zone.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.events.v1.Event": {
      "description": "Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
      "properties": {
        "action": {
          "description": "action is what action was taken/failed regarding to the regarding object. It is machine-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "deprecatedCount": {
          "description": "deprecatedCount is the deprecated field assuring backward compatibility with core.v1 Event type.",
          "format": "int32",
          "type": "integer"
        },
        "deprecatedFirstTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "deprecatedFirstTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type."
        },
        "deprecatedLastTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "deprecatedLastTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type."
        },
        "deprecatedSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource",
          "description": "deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type."
        },
        "eventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "eventTime is the time when this Event was first observed. It is required."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "note": {
          "description": "note is a human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.",
          "type": "string"
        },
        "reason": {
          "description": "reason is why the action was taken. It is human-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
          "type": "string"
        },
        "regarding": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "regarding contains the object this Event is about. In most cases it's an Object reporting controller implements, e.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object."
        },
        "related": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "description": "related is the optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object."
        },
        "reportingController": {
          "description": "reportingController is the name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for new Events.",
          "type": "string"
        },
        "reportingInstance": {
          "description": "reportingInstance is the ID of the controller instance, e.g. `kubelet-xyzf`. This field cannot be empty for new Events and it can have at most 128 characters.",
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/io.k8s.api.events.v1.EventSeries",
          "description": "series is data about the Event series this event represents or nil if it's a singleton Event."
        },
        "type": {
          "description": "type is the type of this event (Normal, Warning), new types could be added in the future. It is machine-readable. This field cannot be empty for new Events.",
          "type": "string"
        }
      },
      "required": [
        "eventTime"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "Event",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.events.v1.EventList": {
      "description": "EventList is a list of Event objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of schema objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.events.v1.Event"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "EventList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.events.v1.EventSeries": {
      "description": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in \"k8s.io/client-go/tools/events/event_broadcaster.go\" shows how this struct is updated on heartbeats and can guide customized reporter implementations.",
      "properties": {
        "count": {
          "description": "count is the number of occurrences in this series up to the last heartbeat time.",
          "format": "int32",
          "type": "integer"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime",
          "description": "lastObservedTime is the time when last Event from the series was seen before last heartbeat."
        }
      },
      "required": [
        "count",
        "lastObservedTime"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration": {
      "description": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
      "properties": {
        "lendablePercent": {
          "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels.  This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
          "format": "int32",
          "type": "integer"
        },
        "nominalConcurrencyShares": {
          "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod": {
      "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher.",
      "properties": {
        "type": {
          "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.FlowSchema": {
      "description": "FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaSpec",
          "description": "`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaStatus",
          "description": "`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchema",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.FlowSchemaCondition": {
      "description": "FlowSchemaCondition describes conditions for a FlowSchema.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "`message` is a human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
          "type": "string"
        },
        "type": {
          "description": "`type` is the type of the condition. Required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.FlowSchemaList": {
      "description": "FlowSchemaList is a list of FlowSchema objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "`items` is a list of FlowSchemas.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchema"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchemaList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.FlowSchemaSpec": {
      "description": "FlowSchemaSpec describes how the FlowSchema's specification looks like.",
      "properties": {
        "distinguisherMethod": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod",
          "description": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string."
        },
        "matchingPrecedence": {
          "description": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
          "format": "int32",
          "type": "integer"
        },
        "priorityLevelConfiguration": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference",
          "description": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required."
        },
        "rules": {
          "description": "`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "priorityLevelConfiguration"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.FlowSchemaStatus": {
      "description": "FlowSchemaStatus represents the current state of a FlowSchema.",
      "properties": {
        "conditions": {
          "description": "`conditions` is a list of the current states of FlowSchema.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.GroupSubject": {
      "description": "GroupSubject holds detailed information for group-kind subject.",
      "properties": {
        "name": {
          "description": "name is the user group that matches, or \"*\" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.LimitResponse": {
      "description": "LimitResponse defines how to handle requests that can not be executed right now.",
      "properties": {
        "queuing": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.QueuingConfiguration",
          "description": "`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `\"Queue\"`."
        },
        "type": {
          "description": "`type` is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "queuing": "Queuing"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration": {
      "description": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n  - How are requests for this priority level limited?\n  - What should be done with requests that exceed the limit?",
      "properties": {
        "borrowingLimitPercent": {
          "description": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels. The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
          "format": "int32",
          "type": "integer"
        },
        "lendablePercent": {
          "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels. The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
          "format": "int32",
          "type": "integer"
        },
        "limitResponse": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.LimitResponse",
          "description": "`limitResponse` indicates what to do with requests that can not be executed right now"
        },
        "nominalConcurrencyShares": {
          "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats available at this priority level. This is used both for requests dispatched from this priority level as well as requests dispatched from other priority levels borrowing seats from this level. The server's concurrency limit (ServerCL) is divided among the Limited priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level.\n\nIf not specified, this field defaults to a value of 30.\n\nSetting this field to zero supports the construction of a \"jail\" for this priority level that is used to hold some request(s)",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.NonResourcePolicyRule": {
      "description": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
      "properties": {
        "nonResourceURLs": {
          "description": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - \"/healthz\" is legal\n  - \"/hea*\" is illegal\n  - \"/hea\" is legal but matches nothing\n  - \"/hea/*\" also matches nothing\n  - \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "nonResourceURLs"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects": {
      "description": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
      "properties": {
        "nonResourceRules": {
          "description": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceRules": {
          "description": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "subjects": {
          "description": "subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.Subject"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "subjects"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration": {
      "description": "PriorityLevelConfiguration represents the configuration of a priority level.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec",
          "description": "`spec` is the specification of the desired behavior of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus",
          "description": "`status` is the current status of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfiguration",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition": {
      "description": "PriorityLevelConfigurationCondition defines the condition of priority level.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "`message` is a human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
          "type": "string"
        },
        "type": {
          "description": "`type` is the type of the condition. Required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList": {
      "description": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "`items` is a list of request-priorities.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfigurationList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference": {
      "description": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.",
      "properties": {
        "name": {
          "description": "`name` is the name of the priority level configuration being referenced Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec": {
      "description": "PriorityLevelConfigurationSpec specifies the configuration of a priority level.",
      "properties": {
        "exempt": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration",
          "description": "`exempt` specifies how requests are handled for an exempt priority level. This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply."
        },
        "limited": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration",
          "description": "`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `\"Limited\"`."
        },
        "type": {
          "description": "`type` indicates whether this priority level is subject to limitation on request execution.  A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "exempt": "Exempt",
            "limited": "Limited"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus": {
      "description": "PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".",
      "properties": {
        "conditions": {
          "description": "`conditions` is the current state of \"request-priority\".",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.QueuingConfiguration": {
      "description": "QueuingConfiguration holds the configuration parameters for queuing",
      "properties": {
        "handSize": {
          "description": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
          "format": "int32",
          "type": "integer"
        },
        "queueLengthLimit": {
          "description": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
          "format": "int32",
          "type": "integer"
        },
        "queues": {
          "description": "`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.ResourcePolicyRule": {
      "description": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
      "properties": {
        "apiGroups": {
          "description": "`apiGroups` is a list of matching API groups and may not be empty. \"*\" matches all API groups and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "clusterScope": {
          "description": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
          "type": "boolean"
        },
        "namespaces": {
          "description": "`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "resources": {
          "description": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.ServiceAccountSubject": {
      "description": "ServiceAccountSubject holds detailed information for service-account-kind subject.",
      "properties": {
        "name": {
          "description": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name. Required.",
          "type": "string"
        },
        "namespace": {
          "description": "`namespace` is the namespace of matching ServiceAccount objects. Required.",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1.Subject": {
      "description": "Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.",
      "properties": {
        "group": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.GroupSubject",
          "description": "`group` matches based on user group name."
        },
        "kind": {
          "description": "`kind` indicates which one of the other fields is non-empty. Required",
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ServiceAccountSubject",
          "description": "`serviceAccount` matches ServiceAccounts."
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.UserSubject",
          "description": "`user` matches based on username."
        }
      },
      "required": [
        "kind"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "kind",
          "fields-to-discriminateBy": {
            "group": "Group",
            "serviceAccount": "ServiceAccount",
            "user": "User"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1.UserSubject": {
      "description": "UserSubject holds detailed information for user-kind subject.",
      "properties": {
        "name": {
          "description": "`name` is the username that matches, or \"*\" to match all usernames. Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration": {
      "description": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
      "properties": {
        "lendablePercent": {
          "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels.  This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
          "format": "int32",
          "type": "integer"
        },
        "nominalConcurrencyShares": {
          "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod": {
      "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher.",
      "properties": {
        "type": {
          "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchema": {
      "description": "FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec",
          "description": "`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus",
          "description": "`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchema",
          "version": "v1beta3"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition": {
      "description": "FlowSchemaCondition describes conditions for a FlowSchema.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "`message` is a human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
          "type": "string"
        },
        "type": {
          "description": "`type` is the type of the condition. Required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList": {
      "description": "FlowSchemaList is a list of FlowSchema objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "`items` is a list of FlowSchemas.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchema"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchemaList",
          "version": "v1beta3"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec": {
      "description": "FlowSchemaSpec describes how the FlowSchema's specification looks like.",
      "properties": {
        "distinguisherMethod": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod",
          "description": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string."
        },
        "matchingPrecedence": {
          "description": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
          "format": "int32",
          "type": "integer"
        },
        "priorityLevelConfiguration": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference",
          "description": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required."
        },
        "rules": {
          "description": "`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "priorityLevelConfiguration"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus": {
      "description": "FlowSchemaStatus represents the current state of a FlowSchema.",
      "properties": {
        "conditions": {
          "description": "`conditions` is a list of the current states of FlowSchema.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.GroupSubject": {
      "description": "GroupSubject holds detailed information for group-kind subject.",
      "properties": {
        "name": {
          "description": "name is the user group that matches, or \"*\" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.LimitResponse": {
      "description": "LimitResponse defines how to handle requests that can not be executed right now.",
      "properties": {
        "queuing": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration",
          "description": "`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `\"Queue\"`."
        },
        "type": {
          "description": "`type` is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "queuing": "Queuing"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration": {
      "description": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n  - How are requests for this priority level limited?\n  - What should be done with requests that exceed the limit?",
      "properties": {
        "borrowingLimitPercent": {
          "description": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels. The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
          "format": "int32",
          "type": "integer"
        },
        "lendablePercent": {
          "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels. The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
          "format": "int32",
          "type": "integer"
        },
        "limitResponse": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitResponse",
          "description": "`limitResponse` indicates what to do with requests that can not be executed right now"
        },
        "nominalConcurrencyShares": {
          "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats available at this priority level. This is used both for requests dispatched from this priority level as well as requests dispatched from other priority levels borrowing seats from this level. The server's concurrency limit (ServerCL) is divided among the Limited priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of 30.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule": {
      "description": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
      "properties": {
        "nonResourceURLs": {
          "description": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - \"/healthz\" is legal\n  - \"/hea*\" is illegal\n  - \"/hea\" is legal but matches nothing\n  - \"/hea/*\" also matches nothing\n  - \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "nonResourceURLs"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects": {
      "description": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
      "properties": {
        "nonResourceRules": {
          "description": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceRules": {
          "description": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "subjects": {
          "description": "subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.Subject"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "subjects"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration": {
      "description": "PriorityLevelConfiguration represents the configuration of a priority level.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec",
          "description": "`spec` is the specification of the desired behavior of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus",
          "description": "`status` is the current status of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfiguration",
          "version": "v1beta3"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition": {
      "description": "PriorityLevelConfigurationCondition defines the condition of priority level.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "`message` is a human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
          "type": "string"
        },
        "type": {
          "description": "`type` is the type of the condition. Required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList": {
      "description": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "`items` is a list of request-priorities.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfigurationList",
          "version": "v1beta3"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference": {
      "description": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.",
      "properties": {
        "name": {
          "description": "`name` is the name of the priority level configuration being referenced Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec": {
      "description": "PriorityLevelConfigurationSpec specifies the configuration of a priority level.",
      "properties": {
        "exempt": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration",
          "description": "`exempt` specifies how requests are handled for an exempt priority level. This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply."
        },
        "limited": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration",
          "description": "`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `\"Limited\"`."
        },
        "type": {
          "description": "`type` indicates whether this priority level is subject to limitation on request execution.  A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "exempt": "Exempt",
            "limited": "Limited"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus": {
      "description": "PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".",
      "properties": {
        "conditions": {
          "description": "`conditions` is the current state of \"request-priority\".",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration": {
      "description": "QueuingConfiguration holds the configuration parameters for queuing",
      "properties": {
        "handSize": {
          "description": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
          "format": "int32",
          "type": "integer"
        },
        "queueLengthLimit": {
          "description": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
          "format": "int32",
          "type": "integer"
        },
        "queues": {
          "description": "`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule": {
      "description": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
      "properties": {
        "apiGroups": {
          "description": "`apiGroups` is a list of matching API groups and may not be empty. \"*\" matches all API groups and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "clusterScope": {
          "description": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
          "type": "boolean"
        },
        "namespaces": {
          "description": "`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "resources": {
          "description": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs and, if present, must be the only entry. Required.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject": {
      "description": "ServiceAccountSubject holds detailed information for service-account-kind subject.",
      "properties": {
        "name": {
          "description": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name. Required.",
          "type": "string"
        },
        "namespace": {
          "description": "`namespace` is the namespace of matching ServiceAccount objects. Required.",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.Subject": {
      "description": "Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.",
      "properties": {
        "group": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.GroupSubject",
          "description": "`group` matches based on user group name."
        },
        "kind": {
          "description": "`kind` indicates which one of the other fields is non-empty. Required",
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject",
          "description": "`serviceAccount` matches ServiceAccounts."
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.UserSubject",
          "description": "`user` matches based on username."
        }
      },
      "required": [
        "kind"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "kind",
          "fields-to-discriminateBy": {
            "group": "Group",
            "serviceAccount": "ServiceAccount",
            "user": "User"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.UserSubject": {
      "description": "UserSubject holds detailed information for user-kind subject.",
      "properties": {
        "name": {
          "description": "`name` is the username that matches, or \"*\" to match all usernames. Required.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.HTTPIngressPath": {
      "description": "HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.",
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend",
          "description": "backend defines the referenced service endpoint to which the traffic will be forwarded to."
        },
        "path": {
          "description": "path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/' and must be present when using PathType with value \"Exact\" or \"Prefix\".",
          "type": "string"
        },
        "pathType": {
          "description": "pathType determines the interpretation of the path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is\n  done on a path element by element basis. A path element refers is the\n  list of labels in the path split by the '/' separator. A request is a\n  match for path p if every p is an element-wise prefix of p of the\n  request path. Note that if the last element of the path is a substring\n  of the last element in request path, it is not a match (e.g. /foo/bar\n  matches /foo/bar/baz, but does not match /foo/barbaz).\n* ImplementationSpecific: Interpretation of the Path matching is up to\n  the IngressClass. Implementations can treat this as a separate PathType\n  or treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types.",
          "type": "string"
        }
      },
      "required": [
        "pathType",
        "backend"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.HTTPIngressRuleValue": {
      "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
      "properties": {
        "paths": {
          "description": "paths is a collection of paths that map requests to backends.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "paths"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IPBlock": {
      "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.0/24\",\"2001:db8::/64\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
      "properties": {
        "cidr": {
          "description": "cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"",
          "type": "string"
        },
        "except": {
          "description": "except is a slice of CIDRs that should not be included within an IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\" Except values will be rejected if they are outside the cidr range",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "cidr"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.Ingress": {
      "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressSpec",
          "description": "spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressStatus",
          "description": "status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "Ingress",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressBackend": {
      "description": "IngressBackend describes all endpoints for a given service and port.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference",
          "description": "resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with \"Service\"."
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressServiceBackend",
          "description": "service references a service as a backend. This is a mutually exclusive setting with \"Resource\"."
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressClass": {
      "description": "IngressClass represents the class of the Ingress, referenced by the Ingress Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassSpec",
          "description": "spec is the desired state of the IngressClass. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressClassList": {
      "description": "IngressClassList is a collection of IngressClasses.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of IngressClasses.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressClassParametersReference": {
      "description": "IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.",
      "properties": {
        "apiGroup": {
          "description": "apiGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "kind is the type of resource being referenced.",
          "type": "string"
        },
        "name": {
          "description": "name is the name of resource being referenced.",
          "type": "string"
        },
        "namespace": {
          "description": "namespace is the namespace of the resource being referenced. This field is required when scope is set to \"Namespace\" and must be unset when scope is set to \"Cluster\".",
          "type": "string"
        },
        "scope": {
          "description": "scope represents if this refers to a cluster or namespace scoped resource. This may be set to \"Cluster\" (default) or \"Namespace\".",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressClassSpec": {
      "description": "IngressClassSpec provides information about the class of an Ingress.",
      "properties": {
        "controller": {
          "description": "controller refers to the name of the controller that should handle this class. This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable.",
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassParametersReference",
          "description": "parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters."
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressList": {
      "description": "IngressList is a collection of Ingress.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of Ingress.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.Ingress"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressLoadBalancerIngress": {
      "description": "IngressLoadBalancerIngress represents the status of a load-balancer ingress point.",
      "properties": {
        "hostname": {
          "description": "hostname is set for load-balancer ingress points that are DNS based.",
          "type": "string"
        },
        "ip": {
          "description": "ip is set for load-balancer ingress points that are IP based.",
          "type": "string"
        },
        "ports": {
          "description": "ports provides information about the ports exposed by this LoadBalancer.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressPortStatus"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressLoadBalancerStatus": {
      "description": "IngressLoadBalancerStatus represents the status of a load-balancer.",
      "properties": {
        "ingress": {
          "description": "ingress is a list containing ingress points for the load-balancer.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressLoadBalancerIngress"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressPortStatus": {
      "description": "IngressPortStatus represents the error condition of a service port",
      "properties": {
        "error": {
          "description": "error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.",
          "type": "string"
        },
        "port": {
          "description": "port is the port number of the ingress port.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "protocol is the protocol of the ingress port. The supported values are: \"TCP\", \"UDP\", \"SCTP\"",
          "type": "string"
        }
      },
      "required": [
        "port",
        "protocol"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressRule": {
      "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
      "properties": {
        "host": {
          "description": "host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nhost can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.",
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressServiceBackend": {
      "description": "IngressServiceBackend references a Kubernetes Service as a Backend.",
      "properties": {
        "name": {
          "description": "name is the referenced service. The service must exist in the same namespace as the Ingress object.",
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.ServiceBackendPort",
          "description": "port of the referenced service. A port name or port number is required for a IngressServiceBackend."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressSpec": {
      "description": "IngressSpec describes the Ingress the user wishes to exist.",
      "properties": {
        "defaultBackend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend",
          "description": "defaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller."
        },
        "ingressClassName": {
          "description": "ingressClassName is the name of an IngressClass cluster resource. Ingress controller implementations use this field to know whether they should be serving this Ingress resource, by a transitive connection (controller -> IngressClass -> Ingress resource). Although the `kubernetes.io/ingress.class` annotation (simple constant name) was never formally defined, it was widely supported by Ingress controllers to create a direct binding between Ingress controller and Ingress resources. Newly created Ingress resources should prefer using the field. However, even though the annotation is officially deprecated, for backwards compatibility reasons, ingress controllers should still honor that annotation if present.",
          "type": "string"
        },
        "rules": {
          "description": "rules is a list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "tls": {
          "description": "tls represents the TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressTLS"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressStatus": {
      "description": "IngressStatus describe the current state of the Ingress.",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressLoadBalancerStatus",
          "description": "loadBalancer contains the current status of the load-balancer."
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressTLS": {
      "description": "IngressTLS describes the transport layer security associated with an ingress.",
      "properties": {
        "hosts": {
          "description": "hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "secretName": {
          "description": "secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the \"Host\" header is used for routing.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicy": {
      "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec",
          "description": "spec represents the specification of the desired behavior for this NetworkPolicy."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "NetworkPolicy",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
      "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
      "properties": {
        "ports": {
          "description": "ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          },
          "type": "array"
        },
        "to": {
          "description": "to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
      "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.",
      "properties": {
        "from": {
          "description": "from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          },
          "type": "array"
        },
        "ports": {
          "description": "ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyList": {
      "description": "NetworkPolicyList is a list of NetworkPolicy objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of schema objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicy"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "NetworkPolicyList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.NetworkPolicyPeer": {
      "description": "NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed",
      "properties": {
        "ipBlock": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock",
          "description": "ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be."
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector."
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace."
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyPort": {
      "description": "NetworkPolicyPort describes a port to allow traffic on",
      "properties": {
        "endPort": {
          "description": "endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.",
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched."
        },
        "protocol": {
          "description": "protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicySpec": {
      "description": "NetworkPolicySpec provides the specification of a NetworkPolicy",
      "properties": {
        "egress": {
          "description": "egress is a list of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
          },
          "type": "array"
        },
        "ingress": {
          "description": "ingress is a list of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
          },
          "type": "array"
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "podSelector selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace."
        },
        "policyTypes": {
          "description": "policyTypes is a list of rule types that the NetworkPolicy relates to. Valid options are [\"Ingress\"], [\"Egress\"], or [\"Ingress\", \"Egress\"]. If this field is not specified, it will default based on the existence of ingress or egress rules; policies that contain an egress section are assumed to affect egress, and all policies (whether or not they contain an ingress section) are assumed to affect ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "podSelector"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.ServiceBackendPort": {
      "description": "ServiceBackendPort is the service port being referenced.",
      "properties": {
        "name": {
          "description": "name is the name of the port on the Service. This is a mutually exclusive setting with \"Number\".",
          "type": "string"
        },
        "number": {
          "description": "number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with \"Name\".",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1alpha1.IPAddress": {
      "description": "IPAddress represents a single IP of a single IP Family. The object is designed to be used by APIs that operate on IP addresses. The object is used by the Service core API for allocation of IP addresses. An IP address can be represented in different formats, to guarantee the uniqueness of the IP, the name of the object is the IP address in canonical format, four decimal digits separated by dots suppressing leading zeros for IPv4 and the representation defined by RFC 5952 for IPv6. Valid: 192.168.1.5 or 2001:db8::1 or 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1 Invalid: 10.01.2.3 or 2001:db8:0:0:0::1",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.IPAddressSpec",
          "description": "spec is the desired state of the IPAddress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IPAddress",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.networking.v1alpha1.IPAddressList": {
      "description": "IPAddressList contains a list of IPAddress.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of IPAddresses.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.IPAddress"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IPAddressList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.networking.v1alpha1.IPAddressSpec": {
      "description": "IPAddressSpec describe the attributes in an IP Address.",
      "properties": {
        "parentRef": {
          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ParentReference",
          "description": "ParentRef references the resource that an IPAddress is attached to. An IPAddress must reference a parent object."
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1alpha1.ParentReference": {
      "description": "ParentReference describes a reference to a parent object.",
      "properties": {
        "group": {
          "description": "Group is the group of the object being referenced.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the object being referenced.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the object being referenced.",
          "type": "string"
        },
        "resource": {
          "description": "Resource is the resource of the object being referenced.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1alpha1.ServiceCIDR": {
      "description": "ServiceCIDR defines a range of IP addresses using CIDR format (e.g. 192.168.0.0/24 or 2001:db2::/64). This range is used to allocate ClusterIPs to Service objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDRSpec",
          "description": "spec is the desired state of the ServiceCIDR. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDRStatus",
          "description": "status represents the current state of the ServiceCIDR. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "ServiceCIDR",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.networking.v1alpha1.ServiceCIDRList": {
      "description": "ServiceCIDRList contains a list of ServiceCIDR objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of ServiceCIDRs.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDR"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "ServiceCIDRList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.networking.v1alpha1.ServiceCIDRSpec": {
      "description": "ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.",
      "properties": {
        "cidrs": {
          "description": "CIDRs defines the IP blocks in CIDR notation (e.g. \"192.168.0.0/24\" or \"2001:db8::/64\") from which to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is immutable.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1alpha1.ServiceCIDRStatus": {
      "description": "ServiceCIDRStatus describes the current state of the ServiceCIDR.",
      "properties": {
        "conditions": {
          "description": "conditions holds an array of metav1.Condition that describe the state of the ServiceCIDR. Current service state",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.api.node.v1.Overhead": {
      "description": "Overhead structure represents the resource overhead associated with running a pod.",
      "properties": {
        "podFixed": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "description": "podFixed represents the fixed resource overhead associated with running a pod.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.node.v1.RuntimeClass": {
      "description": "RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "handler": {
          "description": "handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called \"runc\" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123) requirements, and is immutable.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "overhead": {
          "$ref": "#/definitions/io.k8s.api.node.v1.Overhead",
          "description": "overhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see\n https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/"
        },
        "scheduling": {
          "$ref": "#/definitions/io.k8s.api.node.v1.Scheduling",
          "description": "scheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it. If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes."
        }
      },
      "required": [
        "handler"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.node.v1.RuntimeClassList": {
      "description": "RuntimeClassList is a list of RuntimeClass objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is a list of schema objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.node.v1.RuntimeClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.node.v1.Scheduling": {
      "description": "Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.",
      "properties": {
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.",
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "tolerations": {
          "description": "tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.policy.v1.Eviction": {
      "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "deleteOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
          "description": "DeleteOptions may be provided"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "ObjectMeta describes the pod that is being evicted."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "Eviction",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.policy.v1.PodDisruptionBudget": {
      "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec",
          "description": "Specification of the desired behavior of the PodDisruptionBudget."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetStatus",
          "description": "Most recently observed status of the PodDisruptionBudget."
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudget",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.policy.v1.PodDisruptionBudgetList": {
      "description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of PodDisruptionBudgets",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudget"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudgetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.policy.v1.PodDisruptionBudgetSpec": {
      "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\"."
        },
        "minAvailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
          "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\"."
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "Label query over pods whose evictions are managed by the disruption budget. A null selector will match no pods, while an empty ({}) selector will select all pods within the namespace.",
          "x-kubernetes-patch-strategy": "replace"
        },
        "unhealthyPodEvictionPolicy": {
          "description": "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods should be considered for eviction. Current implementation considers healthy pods, as pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\nValid policies are IfHealthyBudget and AlwaysAllow. If no policy is specified, the default behavior will be used, which corresponds to the IfHealthyBudget policy.\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"), but not yet healthy can be evicted only if the guarded application is not disrupted (status.currentHealthy is at least equal to status.desiredHealthy). Healthy pods will be subject to the PDB for eviction.\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"), but not yet healthy are considered disrupted and can be evicted regardless of whether the criteria in a PDB is met. This means perspective running pods of a disrupted application might not get a chance to become healthy. Healthy pods will be subject to the PDB for eviction.\n\nAdditional policies may be added in the future. Clients making eviction decisions should disallow eviction of unhealthy pods if they encounter an unrecognized policy in this field.\n\nThis field is beta-level. The eviction API uses this field when the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.policy.v1.PodDisruptionBudgetStatus": {
      "description": "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
      "properties": {
        "conditions": {
          "description": "Conditions contain conditions for PDB. The disruption controller sets the DisruptionAllowed condition. The following are known values for the reason field (additional reasons could be added in the future): - SyncFailed: The controller encountered an error and wasn't able to compute\n              the number of allowed disruptions. Therefore no disruptions are\n              allowed and the status of the condition will be False.\n- InsufficientPods: The number of pods are either at or below the number\n                    required by the PodDisruptionBudget. No disruptions are\n                    allowed and the status of the condition will be False.\n- SufficientPods: There are more pods than required by the PodDisruptionBudget.\n                  The condition will be True, and the number of allowed\n                  disruptions are provided by the disruptionsAllowed property.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentHealthy": {
          "description": "current number of healthy pods",
          "format": "int32",
          "type": "integer"
        },
        "desiredHealthy": {
          "description": "minimum desired number of healthy pods",
          "format": "int32",
          "type": "integer"
        },
        "disruptedPods": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          },
          "description": "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.",
          "type": "object"
        },
        "disruptionsAllowed": {
          "description": "Number of pod disruptions that are currently allowed.",
          "format": "int32",
          "type": "integer"
        },
        "expectedPods": {
          "description": "total number of pods counted by this disruption budget",
          "format": "int32",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "Most recent generation observed when updating this PDB status. DisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "disruptionsAllowed",
        "currentHealthy",
        "desiredHealthy",
        "expectedPods"
      ],
      "type": "object"
    },
    "io.k8s.api.rbac.v1.AggregationRule": {
      "description": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole",
      "properties": {
        "clusterRoleSelectors": {
          "description": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.rbac.v1.ClusterRole": {
      "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
      "properties": {
        "aggregationRule": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.AggregationRule",
          "description": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller."
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this ClusterRole",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleBinding": {
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef",
          "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable."
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          },
          "type": "array"
        }
      },
      "required": [
        "roleRef"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleBindingList": {
      "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ClusterRoleBindings",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBindingList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleList": {
      "description": "ClusterRoleList is a collection of ClusterRoles",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of ClusterRoles",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRole"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.PolicyRule": {
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nonResourceURLs": {
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to. '*' represents all resources.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "verbs": {
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.api.rbac.v1.Role": {
      "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this Role",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "Role",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleBinding": {
      "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata."
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef",
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable."
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          },
          "type": "array"
        }
      },
      "required": [
        "roleRef"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleBindingList": {
      "description": "RoleBindingList is a collection of RoleBindings",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of RoleBindings",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleBinding"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBindingList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleList": {
      "description": "RoleList is a collection of Roles",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is a list of Roles",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Role"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata."
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleRef": {
      "description": "RoleRef contains information that points to the role being used",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      },
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.rbac.v1.Subject": {
      "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
          "type": "string"
        },
        "name": {
          "description": "Name of the object being referenced.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.resource.v1alpha2.AllocationResult": {
      "description": "AllocationResult contains attributes of an allocated resource.",
      "properties": {
        "availableOnNodes": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector",
          "description": "This field will get set by the resource driver after it has allocated the resource to inform the scheduler where it can schedule Pods using the ResourceClaim.\n\nSetting this field is optional. If null, the resource is available everywhere."
        },
        "resourceHandles": {
          "description": "ResourceHandles contain the state associated with an allocation that should be maintained throughout the lifetime of a claim. Each ResourceHandle contains data that should be passed to a specific kubelet plugin once it lands on a node. This data is returned by the driver after a successful allocation and is opaque to Kubernetes. Driver documentation may explain to users how to interpret this data if needed.\n\nSetting this field is optional. It has a maximum size of 32 entries. If null (or empty), it is assumed this allocation will be processed by a single kubelet plugin with no ResourceHandle data attached. The name of the kubelet plugin invoked will match the DriverName set in the ResourceClaimStatus this AllocationResult is embedded in.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceHandle"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "shareable": {
          "description": "Shareable determines whether the resource supports more than one consumer at a time.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.PodSchedulingContext": {
      "description": "PodSchedulingContext objects hold information that is needed to schedule a Pod with ResourceClaims that use \"WaitForFirstConsumer\" allocation mode.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec",
          "description": "Spec describes where resources for the Pod are needed."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus",
          "description": "Status describes where resources for the Pod can be allocated."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "PodSchedulingContext",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.PodSchedulingContextList": {
      "description": "PodSchedulingContextList is a collection of Pod scheduling objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of PodSchedulingContext objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContext"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "PodSchedulingContextList",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec": {
      "description": "PodSchedulingContextSpec describes where resources for the Pod are needed.",
      "properties": {
        "potentialNodes": {
          "description": "PotentialNodes lists nodes where the Pod might be able to run.\n\nThe size of this field is limited to 128. This is large enough for many clusters. Larger clusters may need more attempts to find a node that suits all pending resources. This may get increased in the future, but not reduced.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "selectedNode": {
          "description": "SelectedNode is the node for which allocation of ResourceClaims that are referenced by the Pod and that use \"WaitForFirstConsumer\" allocation is to be attempted.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus": {
      "description": "PodSchedulingContextStatus describes where resources for the Pod can be allocated.",
      "properties": {
        "resourceClaims": {
          "description": "ResourceClaims describes resource availability for each pod.spec.resourceClaim entry where the corresponding ResourceClaim uses \"WaitForFirstConsumer\" allocation mode.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaim": {
      "description": "ResourceClaim describes which resources are needed by a resource consumer. Its status tracks whether the resource has been allocated and what the resulting attributes are.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSpec",
          "description": "Spec describes the desired attributes of a resource that then needs to be allocated. It can only be set once when creating the ResourceClaim."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimStatus",
          "description": "Status describes whether the resource is available and with which attributes."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClaim",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference": {
      "description": "ResourceClaimConsumerReference contains enough information to let you locate the consumer of a ResourceClaim. The user must be a resource in the same namespace as the ResourceClaim.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced.",
          "type": "string"
        },
        "resource": {
          "description": "Resource is the type of resource being referenced, for example \"pods\".",
          "type": "string"
        },
        "uid": {
          "description": "UID identifies exactly one incarnation of the resource.",
          "type": "string"
        }
      },
      "required": [
        "resource",
        "name",
        "uid"
      ],
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimList": {
      "description": "ResourceClaimList is a collection of claims.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of resource claims.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaim"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClaimList",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference": {
      "description": "ResourceClaimParametersReference contains enough information to let you locate the parameters for a ResourceClaim. The object must be in the same namespace as the ResourceClaim.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced. This is the same value as in the parameter object's metadata, for example \"ConfigMap\".",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus": {
      "description": "ResourceClaimSchedulingStatus contains information about one particular ResourceClaim with \"WaitForFirstConsumer\" allocation mode.",
      "properties": {
        "name": {
          "description": "Name matches the pod.spec.resourceClaims[*].Name field.",
          "type": "string"
        },
        "unsuitableNodes": {
          "description": "UnsuitableNodes lists nodes that the ResourceClaim cannot be allocated for.\n\nThe size of this field is limited to 128, the same as for PodSchedulingSpec.PotentialNodes. This may get increased in the future, but not reduced.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimSpec": {
      "description": "ResourceClaimSpec defines how a resource is to be allocated.",
      "properties": {
        "allocationMode": {
          "description": "Allocation can start immediately or when a Pod wants to use the resource. \"WaitForFirstConsumer\" is the default.",
          "type": "string"
        },
        "parametersRef": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference",
          "description": "ParametersRef references a separate object with arbitrary parameters that will be used by the driver when allocating a resource for the claim.\n\nThe object must be in the same namespace as the ResourceClaim."
        },
        "resourceClassName": {
          "description": "ResourceClassName references the driver and additional parameters via the name of a ResourceClass that was created as part of the driver deployment.",
          "type": "string"
        }
      },
      "required": [
        "resourceClassName"
      ],
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimStatus": {
      "description": "ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are.",
      "properties": {
        "allocation": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.AllocationResult",
          "description": "Allocation is set by the resource driver once a resource or set of resources has been allocated successfully. If this is not specified, the resources have not been allocated yet."
        },
        "deallocationRequested": {
          "description": "DeallocationRequested indicates that a ResourceClaim is to be deallocated.\n\nThe driver then must deallocate this claim and reset the field together with clearing the Allocation field.\n\nWhile DeallocationRequested is set, no new consumers may be added to ReservedFor.",
          "type": "boolean"
        },
        "driverName": {
          "description": "DriverName is a copy of the driver name from the ResourceClass at the time when allocation started.",
          "type": "string"
        },
        "reservedFor": {
          "description": "ReservedFor indicates which entities are currently allowed to use the claim. A Pod which references a ResourceClaim which is not reserved for that Pod will not be started.\n\nThere can be at most 32 such reservations. This may get increased in the future, but not reduced.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate": {
      "description": "ResourceClaimTemplate is used to produce ResourceClaim objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec",
          "description": "Describes the ResourceClaim that is to be generated.\n\nThis field is immutable. A ResourceClaim will get created by the control plane for a Pod when needed and then not get updated anymore."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClaimTemplate",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList": {
      "description": "ResourceClaimTemplateList is a collection of claim templates.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of resource claim templates.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimTemplate"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClaimTemplateList",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec": {
      "description": "ResourceClaimTemplateSpec contains the metadata and fields for a ResourceClaim.",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSpec",
          "description": "Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceClass": {
      "description": "ResourceClass is used by administrators to influence how resources are allocated.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "driverName": {
          "description": "DriverName defines the name of the dynamic resource driver that is used for allocation of a ResourceClaim that uses this class.\n\nResource drivers have a unique name in forward domain order (acme.example.com).",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata"
        },
        "parametersRef": {
          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClassParametersReference",
          "description": "ParametersRef references an arbitrary separate object that may hold parameters that will be used by the driver when allocating a resource that uses this class. A dynamic resource driver can distinguish between parameters stored here and and those stored in ResourceClaimSpec."
        },
        "suitableNodes": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector",
          "description": "Only nodes matching the selector will be considered by the scheduler when trying to find a Node that fits a Pod when that Pod uses a ResourceClaim that has not been allocated yet.\n\nSetting this field is optional. If null, all nodes are candidates."
        }
      },
      "required": [
        "driverName"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClass",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClassList": {
      "description": "ResourceClassList is a collection of classes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of resource classes.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "resource.k8s.io",
          "kind": "ResourceClassList",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference": {
      "description": "ResourceClassParametersReference contains enough information to let you locate the parameters for a ResourceClass.",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced. This is the same value as in the parameter object's metadata.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace that contains the referenced resource. Must be empty for cluster-scoped resources and non-empty for namespaced resources.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.resource.v1alpha2.ResourceHandle": {
      "description": "ResourceHandle holds opaque resource data for processing by a specific kubelet plugin.",
      "properties": {
        "data": {
          "description": "Data contains the opaque data associated with this ResourceHandle. It is set by the controller component of the resource driver whose name matches the DriverName set in the ResourceClaimStatus this ResourceHandle is embedded in. It is set at allocation time and is intended for processing by the kubelet plugin whose name matches the DriverName set in this ResourceHandle.\n\nThe maximum size of this field is 16KiB. This may get increased in the future, but not reduced.",
          "type": "string"
        },
        "driverName": {
          "description": "DriverName specifies the name of the resource driver whose kubelet plugin should be invoked to process this ResourceHandle's data once it lands on a node. This may differ from the DriverName set in ResourceClaimStatus this ResourceHandle is embedded in.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.scheduling.v1.PriorityClass": {
      "description": "PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "description": {
          "description": "description is an arbitrary string that usually provides guidelines on when this priority class should be used.",
          "type": "string"
        },
        "globalDefault": {
          "description": "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "preemptionPolicy": {
          "description": "preemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
          "type": "string"
        },
        "value": {
          "description": "value represents the integer value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "value"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.scheduling.v1.PriorityClassList": {
      "description": "PriorityClassList is a collection of priority classes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of PriorityClasses",
          "items": {
            "$ref": "#/definitions/io.k8s.api.scheduling.v1.PriorityClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriver": {
      "description": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata. metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriverSpec",
          "description": "spec represents the specification of the CSI Driver."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriver",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriverList": {
      "description": "CSIDriverList is a collection of CSIDriver objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of CSIDriver",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriver"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriverList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriverSpec": {
      "description": "CSIDriverSpec is the specification of a CSIDriver.",
      "properties": {
        "attachRequired": {
          "description": "attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.\n\nThis field is immutable.",
          "type": "boolean"
        },
        "fsGroupPolicy": {
          "description": "fsGroupPolicy defines if the underlying volume supports changing ownership and permission of the volume before being mounted. Refer to the specific FSGroupPolicy values for additional details.\n\nThis field is immutable.\n\nDefaults to ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce.",
          "type": "string"
        },
        "podInfoOnMount": {
          "description": "podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations, if set to true. If set to false, pod information will not be passed on mount. Default is false.\n\nThe CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext.\n\nThe following VolumeContext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \"csi.storage.k8s.io/pod.name\": pod.Name \"csi.storage.k8s.io/pod.namespace\": pod.Namespace \"csi.storage.k8s.io/pod.uid\": string(pod.UID) \"csi.storage.k8s.io/ephemeral\": \"true\" if the volume is an ephemeral inline volume\n                                defined by a CSIVolumeSource, otherwise \"false\"\n\n\"csi.storage.k8s.io/ephemeral\" is a new feature in Kubernetes 1.16. It is only required for drivers which support both the \"Persistent\" and \"Ephemeral\" VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.\n\nThis field is immutable.",
          "type": "boolean"
        },
        "requiresRepublish": {
          "description": "requiresRepublish indicates the CSI driver wants `NodePublishVolume` being periodically called to reflect any possible change in the mounted volume. This field defaults to false.\n\nNote: After a successful initial NodePublishVolume call, subsequent calls to NodePublishVolume should only update the contents of the volume. New mount points will not be seen by a running container.",
          "type": "boolean"
        },
        "seLinuxMount": {
          "description": "seLinuxMount specifies if the CSI driver supports \"-o context\" mount option.\n\nWhen \"true\", the CSI driver must ensure that all volumes provided by this CSI driver can be mounted separately with different `-o context` options. This is typical for storage backends that provide volumes as filesystems on block devices or as independent shared volumes. Kubernetes will call NodeStage / NodePublish with \"-o context=xyz\" mount option when mounting a ReadWriteOncePod volume used in Pod that has explicitly set SELinux context. In the future, it may be expanded to other volume AccessModes. In any case, Kubernetes will ensure that the volume is mounted only with a single SELinux context.\n\nWhen \"false\", Kubernetes won't pass any special SELinux mount options to the driver. This is typical for volumes that represent subdirectories of a bigger shared filesystem.\n\nDefault is \"false\".",
          "type": "boolean"
        },
        "storageCapacity": {
          "description": "storageCapacity indicates that the CSI volume driver wants pod scheduling to consider the storage capacity that the driver deployment will report by creating CSIStorageCapacity objects with capacity information, if set to true.\n\nThe check can be enabled immediately when deploying a driver. In that case, provisioning new volumes with late binding will pause until the driver deployment has published some suitable CSIStorageCapacity object.\n\nAlternatively, the driver can be deployed with the field unset or false and it can be flipped later when storage capacity information has been published.\n\nThis field was immutable in Kubernetes <= 1.22 and now is mutable.",
          "type": "boolean"
        },
        "tokenRequests": {
          "description": "tokenRequests indicates the CSI driver needs pods' service account tokens it is mounting volume for to do necessary authentication. Kubelet will pass the tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver should parse and validate the following VolumeContext: \"csi.storage.k8s.io/serviceAccount.tokens\": {\n  \"<audience>\": {\n    \"token\": <token>,\n    \"expirationTimestamp\": <expiration timestamp in RFC3339>,\n  },\n  ...\n}\n\nNote: Audience in each TokenRequest should be different and at most one token is empty string. To receive a new token after expiry, RequiresRepublish can be used to trigger NodePublishVolume periodically.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.TokenRequest"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "volumeLifecycleModes": {
          "description": "volumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is \"Persistent\", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism.\n\nThe other mode is \"Ephemeral\". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume.\n\nFor more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.\n\nThis field is beta. This field is immutable.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.storage.v1.CSINode": {
      "description": "CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. metadata.name must be the Kubernetes node name."
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeSpec",
          "description": "spec is the specification of CSINode"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINode",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSINodeDriver": {
      "description": "CSINodeDriver holds information about the specification of one CSI driver installed on a node",
      "properties": {
        "allocatable": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeNodeResources",
          "description": "allocatable represents the volume resources of a node that are available for scheduling. This field is beta."
        },
        "name": {
          "description": "name represents the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.",
          "type": "string"
        },
        "nodeID": {
          "description": "nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as \"node1\", but the storage system may refer to the same node as \"nodeA\". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. \"nodeA\" instead of \"node1\". This field is required.",
          "type": "string"
        },
        "topologyKeys": {
          "description": "topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. \"company.com/zone\", \"company.com/region\"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "nodeID"
      ],
      "type": "object"
    },
    "io.k8s.api.storage.v1.CSINodeList": {
      "description": "CSINodeList is a collection of CSINode objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of CSINode",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSINode"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINodeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSINodeSpec": {
      "description": "CSINodeSpec holds information about the specification of all CSI drivers installed on a node",
      "properties": {
        "drivers": {
          "description": "drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeDriver"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "required": [
        "drivers"
      ],
      "type": "object"
    },
    "io.k8s.api.storage.v1.CSIStorageCapacity": {
      "description": "CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "capacity": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "capacity is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThe semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "maximumVolumeSize": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity",
          "description": "maximumVolumeSize is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThis is defined since CSI spec 1.4.0 as the largest size that may be used in a CreateVolumeRequest.capacity_range.required_bytes field to create a volume with the same parameters as those in GetCapacityRequest. The corresponding value in the Kubernetes API is ResourceRequirements.Requests in a volume claim."
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. The name has no particular meaning. It must be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use csisc-<uuid>, a generated name, or a reverse-domain name which ends with the unique CSI driver name.\n\nObjects are namespaced.\n\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "nodeTopology": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "nodeTopology defines which nodes have access to the storage for which capacity was reported. If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable."
        },
        "storageClassName": {
          "description": "storageClassName represents the name of the StorageClass that the reported capacity applies to. It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.",
          "type": "string"
        }
      },
      "required": [
        "storageClassName"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIStorageCapacity",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIStorageCapacityList": {
      "description": "CSIStorageCapacityList is a collection of CSIStorageCapacity objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of CSIStorageCapacity objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSIStorageCapacity"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIStorageCapacityList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.StorageClass": {
      "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
      "properties": {
        "allowVolumeExpansion": {
          "description": "allowVolumeExpansion shows whether the storage class allow volume expand.",
          "type": "boolean"
        },
        "allowedTopologies": {
          "description": "allowedTopologies restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "mountOptions": {
          "description": "mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class. e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "parameters holds the parameters for the provisioner that should create volumes of this storage class.",
          "type": "object"
        },
        "provisioner": {
          "description": "provisioner indicates the type of the provisioner.",
          "type": "string"
        },
        "reclaimPolicy": {
          "description": "reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class. Defaults to Delete.",
          "type": "string"
        },
        "volumeBindingMode": {
          "description": "volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.",
          "type": "string"
        }
      },
      "required": [
        "provisioner"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.StorageClassList": {
      "description": "StorageClassList is a collection of storage classes.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of StorageClasses",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.StorageClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.TokenRequest": {
      "description": "TokenRequest contains parameters of a service account token.",
      "properties": {
        "audience": {
          "description": "audience is the intended audience of the token in \"TokenRequestSpec\". It will default to the audiences of kube apiserver.",
          "type": "string"
        },
        "expirationSeconds": {
          "description": "expirationSeconds is the duration of validity of the token in \"TokenRequestSpec\". It has the same default value of \"ExpirationSeconds\" in \"TokenRequestSpec\".",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "audience"
      ],
      "type": "object"
    },
    "io.k8s.api.storage.v1.VolumeAttachment": {
      "description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSpec",
          "description": "spec represents specification of the desired attach/detach volume behavior. Populated by the Kubernetes system."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentStatus",
          "description": "status represents status of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher."
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachment",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.VolumeAttachmentList": {
      "description": "VolumeAttachmentList is a collection of VolumeAttachment objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of VolumeAttachments",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachment"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachmentList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.VolumeAttachmentSource": {
      "description": "VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.",
      "properties": {
        "inlineVolumeSpec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec",
          "description": "inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This field is beta-level and is only honored by servers that enabled the CSIMigration feature."
        },
        "persistentVolumeName": {
          "description": "persistentVolumeName represents the name of the persistent volume to attach.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.storage.v1.VolumeAttachmentSpec": {
      "description": "VolumeAttachmentSpec is the specification of a VolumeAttachment request.",
      "properties": {
        "attacher": {
          "description": "attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().",
          "type": "string"
        },
        "nodeName": {
          "description": "nodeName represents the node that the volume should be attached to.",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSource",
          "description": "source represents the volume that should be attached."
        }
      },
      "required": [
        "attacher",
        "source",
        "nodeName"
      ],
      "type": "object"
    },
    "io.k8s.api.storage.v1.VolumeAttachmentStatus": {
      "description": "VolumeAttachmentStatus is the status of a VolumeAttachment request.",
      "properties": {
        "attachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError",
          "description": "attachError represents the last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher."
        },
        "attached": {
          "description": "attached indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.",
          "type": "boolean"
        },
        "attachmentMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "attachmentMetadata is populated with any information returned by the attach operation, upon successful attach, that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.",
          "type": "object"
        },
        "detachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError",
          "description": "detachError represents the last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher."
        }
      },
      "required": [
        "attached"
      ],
      "type": "object"
    },
    "io.k8s.api.storage.v1.VolumeError": {
      "description": "VolumeError captures an error encountered during a volume operation.",
      "properties": {
        "message": {
          "description": "message represents the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.",
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "time represents the time the error was encountered."
        }
      },
      "type": "object"
    },
    "io.k8s.api.storage.v1.VolumeNodeResources": {
      "description": "VolumeNodeResources is a set of resource limits for scheduling of volumes.",
      "properties": {
        "count": {
          "description": "count indicates the maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.storage.v1alpha1.VolumeAttributesClass": {
      "description": "VolumeAttributesClass represents a specification of mutable volume attributes defined by the CSI driver. The class can be specified during dynamic provisioning of PersistentVolumeClaims, and changed in the PersistentVolumeClaim spec after provisioning.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "driverName": {
          "description": "Name of the CSI driver This field is immutable.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "parameters hold volume attributes defined by the CSI driver. These values are opaque to the Kubernetes and are passed directly to the CSI driver. The underlying storage provider supports changing these attributes on an existing volume, however the parameters field itself is immutable. To invoke a volume update, a new VolumeAttributesClass should be created with new parameters, and the PersistentVolumeClaim should be updated to reference the new VolumeAttributesClass.\n\nThis field is required and must contain at least one key/value pair. The keys cannot be empty, and the maximum number of parameters is 512, with a cumulative max size of 256K. If the CSI driver rejects invalid parameters, the target PersistentVolumeClaim will be set to an \"Infeasible\" state in the modifyVolumeStatus field.",
          "type": "object"
        }
      },
      "required": [
        "driverName"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttributesClass",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.storage.v1alpha1.VolumeAttributesClassList": {
      "description": "VolumeAttributesClassList is a collection of VolumeAttributesClass objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items is the list of VolumeAttributesClass objects.",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1alpha1.VolumeAttributesClass"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttributesClassList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition": {
      "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
      "properties": {
        "description": {
          "description": "description is a human readable description of this column.",
          "type": "string"
        },
        "format": {
          "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
          "type": "string"
        },
        "jsonPath": {
          "description": "jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.",
          "type": "string"
        },
        "name": {
          "description": "name is a human readable name for the column.",
          "type": "string"
        },
        "priority": {
          "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "jsonPath"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion": {
      "description": "CustomResourceConversion describes how to convert different versions of a CR.",
      "properties": {
        "strategy": {
          "description": "strategy specifies how custom resources are converted between versions. Allowed values are: - `\"None\"`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `\"Webhook\"`: API Server will call to an external webhook to do the conversion. Additional information\n  is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.",
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion",
          "description": "webhook describes how to call the conversion webhook. Required when `strategy` is set to `\"Webhook\"`."
        }
      },
      "required": [
        "strategy"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition": {
      "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec",
          "description": "spec describes how the user wants the resources to appear"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus",
          "description": "status indicates the actual state of the CustomResourceDefinition"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinition",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition": {
      "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastTransitionTime last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "message is a human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "reason is a unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "status is the status of the condition. Can be True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "type is the type of the condition. Types include Established, NamesAccepted and Terminating.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList": {
      "description": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "items list individual CustomResourceDefinition objects",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinitionList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames": {
      "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
      "properties": {
        "categories": {
          "description": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
          "type": "string"
        },
        "listKind": {
          "description": "listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
          "type": "string"
        },
        "plural": {
          "description": "plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
          "type": "string"
        },
        "shortNames": {
          "description": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "singular": {
          "description": "singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
          "type": "string"
        }
      },
      "required": [
        "plural",
        "kind"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec": {
      "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
      "properties": {
        "conversion": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion",
          "description": "conversion defines conversion settings for the CRD."
        },
        "group": {
          "description": "group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).",
          "type": "string"
        },
        "names": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames",
          "description": "names specify the resource and kind names for the custom resource."
        },
        "preserveUnknownFields": {
          "description": "preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.",
          "type": "boolean"
        },
        "scope": {
          "description": "scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.",
          "type": "string"
        },
        "versions": {
          "description": "versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"
          },
          "type": "array"
        }
      },
      "required": [
        "group",
        "names",
        "scope",
        "versions"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus": {
      "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
      "properties": {
        "acceptedNames": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames",
          "description": "acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec."
        },
        "conditions": {
          "description": "conditions indicate state for particular aspects of a CustomResourceDefinition",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "storedVersions": {
          "description": "storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion": {
      "description": "CustomResourceDefinitionVersion describes a version for CRD.",
      "properties": {
        "additionalPrinterColumns": {
          "description": "additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"
          },
          "type": "array"
        },
        "deprecated": {
          "description": "deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.",
          "type": "boolean"
        },
        "deprecationWarning": {
          "description": "deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.",
          "type": "string"
        },
        "name": {
          "description": "name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.",
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation",
          "description": "schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource."
        },
        "served": {
          "description": "served is a flag enabling/disabling this version from being served via REST APIs",
          "type": "boolean"
        },
        "storage": {
          "description": "storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.",
          "type": "boolean"
        },
        "subresources": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources",
          "description": "subresources specify what subresources this version of the defined custom resource have."
        }
      },
      "required": [
        "name",
        "served",
        "storage"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale": {
      "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
      "properties": {
        "labelSelectorPath": {
          "description": "labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.",
          "type": "string"
        },
        "specReplicasPath": {
          "description": "specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.",
          "type": "string"
        },
        "statusReplicasPath": {
          "description": "statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.",
          "type": "string"
        }
      },
      "required": [
        "specReplicasPath",
        "statusReplicasPath"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus": {
      "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza",
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources": {
      "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
      "properties": {
        "scale": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale",
          "description": "scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object."
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus",
          "description": "status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object."
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation": {
      "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
      "properties": {
        "openAPIV3Schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps",
          "description": "openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning."
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation": {
      "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {
      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps": {
      "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "$schema": {
          "type": "string"
        },
        "additionalItems": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "additionalProperties": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "allOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "anyOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "default": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON",
          "description": "default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false."
        },
        "definitions": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "dependencies": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray"
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          },
          "type": "array"
        },
        "example": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "externalDocs": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
        },
        "format": {
          "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:\n\n- bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"
        },
        "maxItems": {
          "format": "int64",
          "type": "integer"
        },
        "maxLength": {
          "format": "int64",
          "type": "integer"
        },
        "maxProperties": {
          "format": "int64",
          "type": "integer"
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minItems": {
          "format": "int64",
          "type": "integer"
        },
        "minLength": {
          "format": "int64",
          "type": "integer"
        },
        "minProperties": {
          "format": "int64",
          "type": "integer"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        },
        "multipleOf": {
          "format": "double",
          "type": "number"
        },
        "not": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        },
        "nullable": {
          "type": "boolean"
        },
        "oneOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "pattern": {
          "type": "string"
        },
        "patternProperties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "required": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "x-kubernetes-embedded-resource": {
          "description": "x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).",
          "type": "boolean"
        },
        "x-kubernetes-int-or-string": {
          "description": "x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more",
          "type": "boolean"
        },
        "x-kubernetes-list-map-keys": {
          "description": "x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.\n\nThis tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\n\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "x-kubernetes-list-type": {
          "description": "x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:\n\n1) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic lists will be entirely replaced when updated. This extension\n     may be used on any type of list (struct, scalar, ...).\n2) `set`:\n     Sets are lists that must not have multiple items with the same value. Each\n     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an\n     array with x-kubernetes-list-type `atomic`.\n3) `map`:\n     These lists are like maps in that their elements have a non-index key\n     used to identify them. Order is preserved upon merge. The map tag\n     must only be used on a list with elements of type object.\nDefaults to atomic for arrays.",
          "type": "string"
        },
        "x-kubernetes-map-type": {
          "description": "x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:\n\n1) `granular`:\n     These maps are actual maps (key-value pairs) and each fields are independent\n     from each other (they can each be manipulated by separate actors). This is\n     the default behaviour for all maps.\n2) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic maps will be entirely replaced when updated.",
          "type": "string"
        },
        "x-kubernetes-preserve-unknown-fields": {
          "description": "x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.",
          "type": "boolean"
        },
        "x-kubernetes-validations": {
          "description": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language. This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "rule"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "rule",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray": {
      "description": "JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool": {
      "description": "JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray": {
      "description": "JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference": {
      "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
      "properties": {
        "name": {
          "description": "name is the name of the service. Required",
          "type": "string"
        },
        "namespace": {
          "description": "namespace is the namespace of the service. Required",
          "type": "string"
        },
        "path": {
          "description": "path is an optional URL path at which the webhook will be contacted.",
          "type": "string"
        },
        "port": {
          "description": "port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule": {
      "description": "ValidationRule describes a validation rule written in the CEL expression language.",
      "properties": {
        "fieldPath": {
          "description": "fieldPath represents the field path returned when the validation fails. It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field. e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo` If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList` It does not support list numeric index. It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info. Numeric index of array is not supported. For field name which contains special characters, use `['specialName']` to refer the field name. e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`",
          "type": "string"
        },
        "message": {
          "description": "Message represents the message displayed when validation fails. The message is required if the Rule contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\"",
          "type": "string"
        },
        "messageExpression": {
          "description": "MessageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a rule, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the rule; the only difference is the return type. Example: \"x must be less than max (\"+string(self.max)+\")\"",
          "type": "string"
        },
        "optionalOldSelf": {
          "description": "optionalOldSelf is used to opt a transition rule into evaluation even when the object is first created, or if the old object is missing the value.\n\nWhen enabled `oldSelf` will be a CEL optional whose value will be `None` if there is no old value, or when the object is initially created.\n\nYou may check for presence of oldSelf using `oldSelf.hasValue()` and unwrap it after checking using `oldSelf.value()`. Check the CEL documentation for Optional types for more information: https://pkg.go.dev/github.com/google/cel-go/cel#OptionalTypes\n\nMay not be set unless `oldSelf` is used in `rule`.",
          "type": "boolean"
        },
        "reason": {
          "description": "reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule. The HTTP status code returned to the caller will match the reason of the reason of the first failed validation rule. The currently supported reasons are: \"FieldValueInvalid\", \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\". If not set, default to use \"FieldValueInvalid\". All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.",
          "type": "string"
        },
        "rule": {
          "description": "Rule represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The `self` variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {\"rule\": \"self.status.actual <= self.spec.maxDesired\"}\n\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map are accessible via CEL macros and functions such as `self.all(...)`. If the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and functions. If the Rule is scoped to a scalar, `self` is bound to the scalar value. Examples: - Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"} - Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions. This includes: - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nEquality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a `transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`. When `optionalOldSelf` is true, the `oldSelf` variable is a CEL optional\n variable whose value() is the same type as `self`.\nSee the documentation for the `optionalOldSelf` field for details.\n\nTransition rules by default are applied only on UPDATE requests and are skipped if an old value could not be found. You can opt a transition rule into unconditional evaluation by setting `optionalOldSelf` to true.",
          "type": "string"
        }
      },
      "required": [
        "rule"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig": {
      "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook.",
      "properties": {
        "caBundle": {
          "description": "caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
          "format": "byte",
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference",
          "description": "service is a reference to the service for this webhook. Either service or url must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`."
        },
        "url": {
          "description": "url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion": {
      "description": "WebhookConversion describes how to call a conversion webhook",
      "properties": {
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig",
          "description": "clientConfig is the instructions for how to call the webhook if strategy is `Webhook`."
        },
        "conversionReviewVersions": {
          "description": "conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "conversionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` <quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber> ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the group.",
          "type": "string"
        },
        "preferredVersion": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery",
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version."
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          },
          "type": "array"
        },
        "versions": {
          "description": "versions are the versions supported in this group.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "versions"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroup",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groups": {
          "description": "groups is a list of APIGroup.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        }
      },
      "required": [
        "groups"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroupList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string"
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string"
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean"
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string"
        },
        "storageVersionHash": {
          "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      },
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          },
          "type": "array"
        }
      },
      "required": [
        "groupVersion",
        "resources"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIResourceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions": {
      "description": "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          },
          "type": "array"
        },
        "versions": {
          "description": "versions are the api versions that are available.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "versions",
        "serverAddressByClientCIDRs"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIVersions",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Condition": {
      "description": "Condition contains details for one aspect of the current state of this API Resource.",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."
        },
        "message": {
          "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
          "format": "int64",
          "type": "integer"
        },
        "reason": {
          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
          "type": "string"
        },
        "status": {
          "description": "status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status",
        "lastTransitionTime",
        "reason",
        "message"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "dryRun": {
          "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "format": "int64",
          "type": "integer"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
        },
        "propagationPolicy": {
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta2"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta2"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta3"
        },
        {
          "group": "imagepolicy.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "policy",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha2"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "properties": {
        "groupVersion": {
          "description": "groupVersion specifies the API group and version in the form \"group/version\"",
          "type": "string"
        },
        "version": {
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
          "type": "string"
        }
      },
      "required": [
        "groupVersion",
        "version"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "type": "array"
        },
        "matchLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "format": "int64",
          "type": "integer"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1",
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over."
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime": {
      "description": "MicroTime is version of Time with microsecond level precision.",
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format": "int64",
          "type": "integer"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "type": "array"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "properties": {
        "resourceVersion": {
          "description": "Specifies the target ResourceVersion",
          "type": "string"
        },
        "uid": {
          "description": "Specifies the target UID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "properties": {
        "clientCIDR": {
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
          "type": "string"
        },
        "serverAddress": {
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
          "type": "string"
        }
      },
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Status",
          "version": "v1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "Status",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          },
          "type": "array"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "format": "int32",
          "type": "integer"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "description": "Event represents a single event to a watched resource.",
      "properties": {
        "object": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension",
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context."
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "object"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta2"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta2"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta3"
        },
        {
          "group": "imagepolicy.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "policy",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha2"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
      "format": "int-or-string",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.version.Info": {
      "description": "Info contains versioning information. how we'll want to distribute that information.",
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitTreeState": {
          "type": "string"
        },
        "gitVersion": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "gitVersion",
        "gitCommit",
        "gitTreeState",
        "buildDate",
        "goVersion",
        "compiler",
        "platform"
      ],
      "type": "object"
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService": {
      "description": "APIService represents a server for a particular GroupVersion. Name must be \"version.group\".",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec",
          "description": "Spec contains information for locating and communicating with a server"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus",
          "description": "Status contains derived information about an API server"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIService",
          "version": "v1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition": {
      "description": "APIServiceCondition describes the state of an APIService at a particular point",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time",
          "description": "Last time the condition transitioned from one status to another."
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status is the status of the condition. Can be True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of the condition.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList": {
      "description": "APIServiceList is a list of APIService objects.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "Items is the list of APIService",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
          },
          "type": "array"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        }
      },
      "required": [
        "items"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIServiceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec": {
      "description": "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.",
      "properties": {
        "caBundle": {
          "description": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.",
          "format": "byte",
          "type": "string",
          "x-kubernetes-list-type": "atomic"
        },
        "group": {
          "description": "Group is the API group name this server hosts",
          "type": "string"
        },
        "groupPriorityMinimum": {
          "description": "GroupPriorityMinimum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMinimum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s",
          "format": "int32",
          "type": "integer"
        },
        "insecureSkipTLSVerify": {
          "description": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.",
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference",
          "description": "Service is a reference to the service for this API server.  It must communicate on port 443. If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled."
        },
        "version": {
          "description": "Version is the API version this server hosts.  For example, \"v1\"",
          "type": "string"
        },
        "versionPriority": {
          "description": "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "groupPriorityMinimum",
        "versionPriority"
      ],
      "type": "object"
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus": {
      "description": "APIServiceStatus contains derived information about an API server",
      "properties": {
        "conditions": {
          "description": "Current service state of apiService.",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference": {
      "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
      "properties": {
        "name": {
          "description": "Name is the name of the service",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the service",
          "type": "string"
        },
        "port": {
          "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    }
  }
}
""";


    public static string KubeSwaggerDefinitionCN => """
                                                  {
                                                      "definitions": {
                                                          "io.k8s.api.admissionregistration.v1.MatchCondition": {
                                                              "description": "MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.",
                                                              "descriptionCN": "匹配条件代表一个必须满足的条件，以使请求发送到Webhook。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
                                                                      "descriptionCN": "表达式表示由CEL评估的表达式。必须评估为bool。Cel表达式可以访问 AdmissionRequest和Authorizer的内容，组织成Cel变量：\n\n'object' - 接收请求的对象。对于DELETE请求，值为null。'oldObject' - 存在的对象。对于CREATE请求，值为null。 'request' - Admission Request（/pkg/apis/admission/types.go#AdmissionRequest）。 'authorizer' - 客户端授权器。可能用于对请求主体（用户或服务帐户）进行权限检查。\n查看https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n 'authorizer.requestResource' - 从'authorizer'构建的Cel ResourceCheck，配置为request资源。\n\n要求",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
                                                                      "descriptionCN": "名字是这个条件的标识符，用于战略合并MatchConditions，并为日志目的提供标识。一个好名字应该是与其相关表达的相关描述性名称。名字必须由大小写字母、下划线、点或句点组成，且应以字母数字开头（例如：'MyName' 或 'my.name' 或 '123-abc', 验证规则使用的是'([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]'），并带有可选的DNS子域名前缀和路径分隔符（例如：'example.com/MyName'）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.MutatingWebhook": {
                                                              "description": "MutatingWebhook describes an admission webhook and the resources and operations it applies to.",
                                                              "descriptionCN": "MutatingWebhook是一种自动路由和更新的webhook，它描述了它是如何被接收的以及其应用于哪些资源和操作。",
                                                              "properties": {
                                                                  "admissionReviewVersions": {
                                                                      "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
                                                                      "descriptionCN": "访问审查版本是一个按顺序列出Webhook期望的首选`访问审查`版本列表。API服务器将尝试使用列表中的第一个版本，该版本支持它。如果这个列表中指定的所有版本都不由API服务器支持，则验证将失败。如果一个持久性Webhook配置指定了允许的版本，并且没有包含任何已知给API服务器的消息版本，通过Webhook的调用将失败，并可能受此失败策略的影响。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "clientConfig": {
                                                                      "description": "ClientConfig defines how to communicate with the hook. Required",
                                                                      "descriptionCN": "客户端配置定义了如何与钩子进行通信。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
                                                                  },
                                                                  "failurePolicy": {
                                                                      "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
                                                                      "descriptionCN": "失败策略定义了从接入端接受的未识别错误如何处理 - 允许值是忽略或失败。默认为失败。",
                                                                      "type": "string"
                                                                  },
                                                                  "matchConditions": {
                                                                      "description": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
                                                                      "descriptionCN": "匹配条件列表，是请求发送给这个webhook需要满足的条件。匹配条件过滤已经由规则、namespaceSelector和objectSelector匹配过的请求。一个空的匹配条件会匹配所有的请求。最多允许64个匹配条件。\n\n精确匹配逻辑如下：\n  1. 如果任何匹配条件的评估结果为假，则该webhook被跳过。\n  2. 如果所有匹配条件的评估结果都为真，则webhook被调用。\n  3. 如果有任何匹配条件的评估结果为错误（但没有一个是假），则:\n     - 如果失败策略设置为\"拒绝\"，拒绝请求\n     - 如果失败策略设置为\"忽略\"，则错误被忽略，webhook被跳过\n\n这是beta特性，并且是由AdmissionWebhookMatchConditions功能门管理的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "matchPolicy": {
                                                                      "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
                                                                      "descriptionCN": "入场 webhook 的名称。名称应完全匹配，例如 imagepolicy.kubernetes.io，其中 \"imagepolicy\" 是 webhook 的名称，kubernetes.io 是组织的名称。必填项",
                                                                      "type": "string"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "命名空间选择器决定根据对象的命名空间是否匹配选择器来运行webhook。如果对象本身是命名空间，那么比较将进行在对象.metadata.labels上。如果对象是其他类型的集群可访问资源，则永远不会跳过webhook。\n\n例如，如果你想运行任何具有\"runlevel\"属性不为0或1的对象的webhook；你将在以下选择器中设置它： \"namespaceSelector\": { \"matchExpressions\": [ { \"key\": \"runlevel\", \"operator\": \"NotIn\", \"values\": [ \"0\", \"1\" ] } ] }\n\n如果你只想运行适用于\"prod\"或\"staging\"环境的webhook；你将在以下选择器中设置它： \"namespaceSelector\": { \"matchExpressions\": [ { \"key\": \"environment\", \"operator\": \"In\", \"values\": [ \"prod\", \"staging\" ] } ] }\n\n请参阅 https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ 可以了解更多关于标签选择器的例子。默认情况下，选择器为空，匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "objectSelector": {
                                                                      "description": "ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "对象选择器根据对象是否有匹配的标签来决定是否运行webhook。对象选择器对oldObject和newObject进行评估，如果两者中任何一个匹配selector，则认为它们匹配。null或无法有标签的对象（如DeploymentRollback或PodProxyOptions）不被认为是匹配的。只有当webhook是可选的时，才使用对象选择器，因为最终用户可能会通过设置labels跳过 admission webhook。默认情况下，使用空的LabelSelector，它会匹配一切。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "reinvocationPolicy": {
                                                                      "description": "reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are \"Never\" and \"IfNeeded\".\n\nNever: the webhook will not be called more than once in a single admission evaluation.\n\nIfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.\n\nDefaults to \"Never\".",
                                                                      "descriptionCN": "重调策略指示，此Webhook是否应在一次Admission评估中被多次调用。允许的值是\"Never\"和\"必要\"。\n\n永不: 在单个Admission评估中，这个Webhook不会被再次调用。\n\n必要: 如果在最初Webhook调用后，对象被其他Admission插件修改，该Webhook将至少被调用一次作为Admission评估的一部分。指定这一选项的Webhooks必须具有可重复性，能够处理它们先前已承认的对象。请注意：额外的调用数量不是严格预测的。如果额外的调用导致对对象的进一步修改，Webhooks没有保证会被再次调用。使用此选项的Webhooks可能需要重新排序以减少额外的调用次数。为了确保所有mutations都被完全完成验证，使用一个验证的Admission webhook。默认设置为“永不”。",
                                                                      "type": "string"
                                                                  },
                                                                  "rules": {
                                                                      "description": "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
                                                                      "descriptionCN": "规则描述了对哪些资源/子资源的网络请求操作感兴趣。如果该操作与任何规则匹配，那么webhook就会关注这个操作。然而，为了防止ValidatingAdmissionWebhooks和MutatingAdmissionWebhooks将集群置于无法恢复的状态，只有完全禁用插件时，才会在验证webhook配置和修改webhook配置的对象上调用有效的webhook配置和修改webhook配置的操作。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
                                                                      }
                                                                  },
                                                                  "sideEffects": {
                                                                      "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
                                                                      "descriptionCN": "副作用声明这个Webhook是否有副作用。可接受的值是：None, NoneOnDryRun（v1beta1版本创建的webhooks也可能指定一些或未知）。带有副作用的Webhooks必须实现一个回滚系统，因为请求可能在Admission Chain的未来步骤中被拒绝，并因此需要被取消。如果有dryRun属性的请求如果匹配带副作用的webhook == Unknown 或者 Some，则将自动拒绝。",
                                                                      "type": "string"
                                                                  },
                                                                  "timeoutSeconds": {
                                                                      "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
                                                                      "descriptionCN": "TimeoutSeconds 设置了这个webhook的超时时间。如果超时时间过去，这个webhook调用将被忽略，或者基于失败策略API请求将失败。timeout值必须在1到30秒之间，默认为10秒。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration": {
                                                              "description": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.",
                                                              "descriptionCN": "mutatingWebhookConfiguration描述了接受或拒绝并可能改变对象的 webhook 的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是这个表示对象的可版本化模式的定义。服务器应该将识别的模式转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示这个对象所代表的REST资源的字符串值。服务器可以从客户端提交请求的端点推断出这个值。不能更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据; 更多信息: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "webhooks": {
                                                                      "description": "Webhooks is a list of webhooks and the affected resources and operations.",
                                                                      "descriptionCN": "Webhooks 是一个包含 webhooks 和受影响的资源和操作 的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList": {
                                                              "description": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.",
                                                              "descriptionCN": "MutatingWebhookConfigurationList是一个列表，其中包括MutatingWebhookConfiguration。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化表示形式。服务器应该将可识别的格式转换为内部值的最新版本，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of MutatingWebhookConfiguration.",
                                                                      "descriptionCN": "以上是“MutatingWebhookConfiguration”这个项目的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示此对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时从端点推断出这个值。不能被更新。以CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.RuleWithOperations": {
                                                              "description": "RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.",
                                                              "descriptionCN": "规则与操作是一个元组，包含操作和资源。建议确保所有元组扩展都是有效的。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "APIGroups 是资源所属的API组。* 代表所有组。如果* 存在， slice 的长度必须为1。必填。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "apiVersions": {
                                                                      "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "API版本是资源所属的API版本。星号表示所有版本。如果星号存在，slice的长度必须为1。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "operations": {
                                                                      "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "操作（operation）是入站钩关心的操作 - 创建、更新、删除或连接，以及任何未来添加的入站操作。如果'*'存在，则必须传入一个长度为1的切片。要求",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
                                                                      "descriptionCN": "资源是这个规则适用于的列表。\n\n例如：'pods'意味着Pods。'pods/log'意味着Pods的log子资源。'*'表示所有资源，但不包括子资源。'pods/*'表示Pods的所有子资源。'*/scale'表示所有的Scale子资源。'*/*'表示所有的资源及其子资源。\n\n如果存在星号，则验证规则将确保资源不会互相重叠。\n\n取决于enclosing对象，子资源可能不允许。可选",
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "scope": {
                                                                      "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
                                                                      "descriptionCN": "范围规定了这个规则的范围。有效的值是\"Cluster\", \"命名空间\"和\"*\"。\"Cluster\"意味着只有集群资源会匹配此规则。命名空间API对象是集群资源。\"Namespaced\"意味着只有命名空间资源会匹配此规则。 \"*\"意味着没有范围限制。子资源匹配其父资源的范围。默认设置为\"*\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.ServiceReference": {
                                                              "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
                                                              "descriptionCN": "ServiceReference 包含一个指向 Service 的引用。 legacy.k8s.io",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of the service. Required",
                                                                      "descriptionCN": "`name` 是服务的名称。必填",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "`namespace` is the namespace of the service. Required",
                                                                      "descriptionCN": "服务的命名空间是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "path": {
                                                                      "description": "`path` is an optional URL path which will be sent in any request to this service.",
                                                                      "descriptionCN": "路径是一个可选的URL路径，它将被发送到此服务中的任何请求。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
                                                                      "descriptionCN": "如果指定，服务中托管Webhook的端口。默认为443以保持兼容性。`port`应该是有效的端口号（1-65535，包括）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.ValidatingWebhook": {
                                                              "description": "ValidatingWebhook describes an admission webhook and the resources and operations it applies to.",
                                                              "descriptionCN": "验证Webhook定义了一个准入Webhook和它所适用的资源和操作。",
                                                              "properties": {
                                                                  "admissionReviewVersions": {
                                                                      "description": "AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.",
                                                                      "descriptionCN": "推荐的AdmissionReview版本列表是Webhook期望的首选`AdmissionReview`版本。API服务器将尝试使用这个列表中的第一个支持的版本。如果该列表中没有由API服务器支持的所有版本，验证将会失败。如果一个持久化的webhook配置指定允许的版本，并且不包含任何已知给API Server的版本，访问 webhook 的请求将失败，并可能受此失败策略的影响。",
                                                                      "type": "array"
                                                                  },
                                                                  "clientConfig": {
                                                                      "description": "ClientConfig defines how to communicate with the hook. Required",
                                                                      "descriptionCN": "客户端配置定义了如何与hook进行通信。必需",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
                                                                  },
                                                                  "failurePolicy": {
                                                                      "description": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.",
                                                                      "descriptionCN": "失败策略定义了从接入端处理未识别错误的方式 - 允许值为忽略或失败。默认为失败。",
                                                                      "type": "string"
                                                                  },
                                                                  "matchConditions": {
                                                                      "description": "MatchConditions is a list of conditions that must be met for a request to be sent to this webhook. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the webhook is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the webhook is called.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the error is ignored and the webhook is skipped\n\nThis is a beta feature and managed by the AdmissionWebhookMatchConditions feature gate.",
                                                                      "descriptionCN": "匹配条件是一个用于请求发送的列表。必须满足的匹配条件过滤已经被规则、namespaceSelector和objectSelector匹配过的请求。如果一个队列为空，它将匹配所有的请求。允许的最大匹配条件数量为64。\n\n精确匹配逻辑如下：\n  1. 如果有任何匹配条件评估为假，则该Webhook被跳过。\n  2. 如果所有匹配条件都评估为真，则Webhook被调用。\n  3. 如果有任何匹配条件评估为错误（但没有都是假），则\n     - 如果失败策略设置为失败，拒绝请求\n     - 如果失败策略设置为忽略，错误会被忽视并该Webhook被跳过。\n\n这是一个 beta 版本，并由 AdmissionWebhookMatchConditions 特征门进行管理。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "matchPolicy": {
                                                                      "description": "matchPolicy defines how the \"rules\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\nDefaults to \"Equivalent\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \"imagepolicy\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
                                                                      "descriptionCN": "录取接单接口名称。名称应为完全限定的，例如imagepolicy.kubernetes.io，其中“imagepolicy”是接单接口的名称，kubernetes.io是该组织的名字。要求。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the webhook on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "NamespaceSelector 决定是否运行Webhook，根据对象的命名空间与selector匹配。如果对象本身是命名空间，则进行对象.metadata.labels匹配；如果对象是其他集群资源，不会跳过Webhook。\n\n例如，如果你想在任何不关联于\"runlevel\"为0或1的命名空间中的任何对象上运行Webhook；你可以设置selector如下： \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\n如果相反，你只想在任何与\"environment\"为prod或staging的环境下的命名空间中的任何对象上运行Webhook；你可以设置selector如下： \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels 提供了更多的关于标签选择器的示例。默认情况下，它会匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "objectSelector": {
                                                                      "description": "ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "对象选择器决定是否运行webhook根据对象是否有匹配的标签。对象选择器被应用于旧Object和新Object，如果两者中有一个匹配了选择器，则被认为匹配。一个null对象（创建时的oldObject或删除时的newObject）或不能有标签的对象（如DeploymentRollback或PodProxyOptions对象）都不被认为是匹配。除非是预付费的 webhook，否则用户可能通过设置labels来跳过admission webhook。默认为空LabelSelector，这将匹配一切。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "rules": {
                                                                      "description": "Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
                                                                      "descriptionCN": "规则描述了webhook处理什么资源/子资源的操作。 webhook关心操作如果它匹配任何一个规则。然而，为了防止ValidatingAdmissionWebhooks和MutatingAdmissionWebhooks将集群置于无法恢复的状态，因此在没有完全禁用插件的情况下，ValidatingAdmissionWebhooks和MutatingAdmissionWebhooks永远不会对ValidatingWebhookConfiguration和MutatingWebhookConfiguration对象的认证请求进行调用。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
                                                                      }
                                                                  },
                                                                  "sideEffects": {
                                                                      "description": "SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission chain and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.",
                                                                      "descriptionCN": "副作用状态确认这个Webhook是否有副作用。可接受的值包括：None，NoneOnDryRun（通过v1beta1创建的webhooks也可能指定Some或Unknown）。带有副作用的webhooks必须实现一个回滚系统，因为请求可能会在admission chain中的后续步骤被拒绝，因此需要进行回滚。如果有dryRun属性的webhook，如果它们与带副作用的webhook匹配，则将自动拒绝。",
                                                                      "type": "string"
                                                                  },
                                                                  "timeoutSeconds": {
                                                                      "description": "TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.",
                                                                      "descriptionCN": "这个webhook的超时时间为该 webhook 设置的时间。超时时间过后，这个webhook调用会被忽略，或者基于失败策略API调用将失败。超时值必须在1到30秒之间。默认为10秒。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration": {
                                                              "description": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.",
                                                              "descriptionCN": "有效的Webhook配置描述了允许或拒绝和对象的配置，而无需对其进行更改。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化规范。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind”是表示此对象所代表的REST资源的一个字符串值。服务器可能根据客户端向其提交请求时提供的端点推断出这个值。无法被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据；更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "webhooks": {
                                                                      "description": "Webhooks is a list of webhooks and the affected resources and operations.",
                                                                      "descriptionCN": "webhooks 是一个包含 webhook 的列表以及受影响的资源和操作。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList": {
                                                              "description": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.",
                                                              "descriptionCN": "验证WebhookConfiguration列表是一个包含ValidatingWebhookConfiguration的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化结构。服务器应该将可识别的结构转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ValidatingWebhookConfiguration.",
                                                                      "descriptionCN": "有效的Webhook配置列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，表示这个对象所代表的 REST 资源。服务器可以根据客户端提交的请求来推测这一点。无法更新。使用 CamelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1.WebhookClientConfig": {
                                                              "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook",
                                                              "descriptionCN": "WebhookClientConfig 包含用于与 webhook 连接的TLS信息。",
                                                              "properties": {
                                                                  "caBundle": {
                                                                      "description": "`caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                                                                      "descriptionCN": "`caBundle`是一个PEM编码的CA证书包，将用于验证webhook服务器证书。如果没有指定，则使用apiserver上的系统信任根。",
                                                                      "type": "string",
                                                                      "format": "byte"
                                                                  },
                                                                  "service": {
                                                                      "description": "`service` is a reference to the service for this webhook. Either `service` or `url` must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.",
                                                                      "descriptionCN": "`service` 是此 Webhook 的参考。如果 webhook 指定在集群中运行，则应使用 `service`。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference"
                                                                  },
                                                                  "url": {
                                                                      "description": "`url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                                                                      "descriptionCN": "URL提供 webhook 的位置，以标准 URL 形式（scheme://host:port/path）。一个或一个 `url` 或 `service` 必须指定。\n\n主机不应该指向正在运行在集群中的服务；使用 `service` 部分。主机可能通过外部 DNS 在一些 API 服务器（例如，kube-apiserver 在内部 DNS 中无法解析）中进行解析。主机也可能是一个 IP 地址。\n\n请注意，在使用 `localhost` 或 `127.0.0.1` 作为主机时，这是有风险的，除非您非常小心地在这个 webhook 上运行所有运行了 ingress controller 的主机。这样的安装很可能是非可移植的，也就是说，很难在新的集群中将其打开。\n\n协议必须为 \"https\"；URL 应以 \"https://\" 开始。\n\n路径是可选的，并且如果存在，则可以是任何字符串在 URL 中的允许值。您可以将任意字符串传递给 webhook，例如，用于节点标识的集群标识符。\n\n尝试使用用户或基本认证等方法（例如，用户名：密码@）是不允许的。片段（#...）和查询参数（?...）都禁止使用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation": {
                                                              "description": "AuditAnnotation describes how to produce an audit annotation for an API request.",
                                                              "descriptionCN": "审计注释描述了如何为API请求生成审计注释。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
                                                                      "descriptionCN": "关键指定审计注解的键。验证入学政策的有效性审计注解的键必须唯一。该键的长度应不超过63字节。\n\n该键与验证入学政策的资源名称结合，构成审计注解键：\"{ValidatingAdmissionPolicy name}/{key}\"。\n\n如果访问网关使用了与此验证入学政策具有相同资源名称和相同审计注解键的情况，注解键将保持一致。在这种情况下，第一个标注带有此键的内容将在审计事件中被包含，并且后续具有相同键的标注都将被忽略。\n\n必填",
                                                                      "type": "string"
                                                                  },
                                                                  "valueExpression": {
                                                                      "description": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
                                                                      "descriptionCN": "评估表达式（valueExpression）的表达式，由CEL执行，产生审计注解值。表达式必须为字符串或null值。如果表达式为字符串，则审计注解包含该字符串值。如果表达式为null或空字符串，则审计注解将被忽略。valueExpression长度最多为5KB。如果valueExpression的结果超过10KB，则将被截断到10KB。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning": {
                                                              "description": "ExpressionWarning is a warning information that targets a specific expression.",
                                                              "descriptionCN": "表达警告是一个针对特定表达的警告信息。",
                                                              "properties": {
                                                                  "fieldRef": {
                                                                      "description": "The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "warning": {
                                                                      "description": "The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.",
                                                                      "descriptionCN": "在可读形式中对类型检查信息的内容。警告行中的每一行都包含表达式被检查的类型，然后是编译器的类型检查错误。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.MatchCondition": {
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
                                                                      "descriptionCN": "表达式表示由CEL评估的表达式。必须返回bool值。CEL表达式有权访问AdmissionRequest和Authorizer的内容，组织成CEL变量：\n\n'object' - 进入请求的对象。DELETE请求的值为null。 'oldObject' - 现有的对象。CREATE请求的值为null。 'request' - AdmissionRequest（pkg/apis/admission/types.go#AdmissionRequest）中的属性。 'authorizer' - 一个CEL Authorizer。可以用于执行主体（用户或服务帐户）请求的授权检查。\n  见 https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - 由'authorizer'构造的Cel ResourceCheck，配置了请求资源。\nCel文档：https://kubernetes.io/docs/reference/using-api/cel/",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
                                                                      "descriptionCN": "姓名是匹配条件的标识符，用于战略合并MatchConditions，以及提供日志记录的目的。一个好的名字应该描述与之关联的表达。名字必须由大小写字母、下划线、点或句点组成，并且必须以字母数字字符开头（例如：\"MyName\" 或 \"my.name\" 或 \"123-abc\"），验证使用的正则表达式为\"([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]\"，可选的DNS子域名前缀和路径（例如：\"example.com/MyName\"）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.MatchResources": {
                                                              "description": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
                                                              "descriptionCN": "MatchResources 考虑是否运行入学控制政策，这取决于它是否符合匹配标准。排除规则优先于包括规则（如果资源同时满足两个条件，则被排除）。",
                                                              "properties": {
                                                                  "excludeResourceRules": {
                                                                      "description": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
                                                                      "descriptionCN": "排除资源规则描述了 ValidatingAdmissionPolicy 对什么资源/子资源的操作不应该关心。排除规则优于包括规则（如果一个资源匹配两者，它将被排除）。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "matchPolicy": {
                                                                      "description": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "NamespaceSelector 决定是否在对象上运行Admission Control策。如果该对象本身是一个命名空间，则进行匹配的操作在对象.metadata.labels中进行。如果该对象是另一个集群 scoped 的资源，它将永不跳过策略。\n\n例如，要运行任何不在 \"runlevel\" 为 \"0\" 或 \"1\" 的命名空间中的对象的 Webhook；您需要设置以下 selector：`namespaceSelector`：\n```json\n{\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n```\n\n反之亦然，如果您只想运行与 \"production\" 或 \"staging\" 环境关联的策略，则应设置以下 selector：`namespaceSelector`：\n```json\n{\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n```\n\n查看 https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/以获取更多的标签选择器示例。\n\n默认情况下，该选择器匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "objectSelector": {
                                                                      "description": "ObjectSelector decides whether to run the validation based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "对象选择器根据是否匹配标签来决定是否运行验证。对象选择器在旧对象和新对象中被评估，如果任何对象都匹配选择器，则被认为匹配。如果null对象（对于创建或删除）或无法有标签的对象（如DeploymentRollback或PodProxyOptions对象），则不被认为是匹配的。只有当webhook是可选的时，才使用对象选择器，因为最终用户可能通过设置标签而跳过 admission webhook。默认情况下，使用空LabelSelector，这将匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "resourceRules": {
                                                                      "description": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches _any_ Rule.",
                                                                      "descriptionCN": "\"ResourceRules\"描述了 ValidatingAdmissionPolicy 对什么资源/子资源执行的操作。该策略关心执行此操作的任何规则。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations": {
                                                              "description": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.",
                                                              "descriptionCN": "名为\"规则操作集\"的元组由操作和资源组成，其中资源名分别为ResourceNames。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "APIGroups 是资源所属的API组。'*' 表示所有的组。如果'*'存在， slice 的长度必须为1。必填",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "apiVersions": {
                                                                      "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "API版本是资源所属的API版本。*表示所有版本。如果*存在，切片的长度必须为1。必填。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "operations": {
                                                                      "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "操作是您关心的入档钩 - 创建、更新、删除或* 所有这些操作以及未来添加的任何入档操作。如果星号(*)存在，行的长度必须为一。要求",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resourceNames": {
                                                                      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
                                                                      "descriptionCN": "\"ResourceNames\" 是一个可选的白名单，规则适用。空集表示一切皆可。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
                                                                      "descriptionCN": "资源是一个规则适用的资源列表。\n\n例如：'pods'意味着Pods。'pods/log'意味着Pods的日志子集。'*'意味着所有的资源，但不包括子资源。'pods/*'表示所有的Pod子资源。'*/scale'表示所有的 Scale子资源。'*/*'表示所有的资源及其子资源。\n\n如果星号存在，则验证规则将确保资源不会相互重叠。\n\n根据enclosing对象，子资源可能不允许。要求",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "scope": {
                                                                      "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
                                                                      "descriptionCN": "规则范围由scope指定。有效值为\"Cluster\"、\"命名空间\"和\"*\"，\"Cluster\"表示只有集群资源匹配此规则。命名空间API对象是集群级的。\"命名空间\"表示只有命名空间资源匹配此规则。\"*\"意味着没有范围限制。子资源根据其父资源的范围进行匹配。默认为\"*\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ParamKind": {
                                                              "description": "ParamKind is a tuple of Group Kind and Version.",
                                                              "descriptionCN": "参数Kind是一个由Group Kind和Version组成的元组。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion is the API group version the resources belong to. In format of \"group/version\". Required.",
                                                                      "descriptionCN": "API版本是资源所属的API组版本。格式为\"group/version\"，要求。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the API kind the resources belong to. Required.",
                                                                      "descriptionCN": "善良是一种API类型，其资源所属。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ParamRef": {
                                                              "description": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.",
                                                              "descriptionCN": "参数指针描述了如何使用参数作为表达式中应用政策绑定规则的输入。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of the resource being referenced.\n\n`name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
                                                                      "descriptionCN": "`name` 是被引用的资源的名字。`name` 和 `selector` 是互斥属性，如果设置其中一个，则必须设置另一个不为`.",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
                                                                      "descriptionCN": "资源命名空间是引用的资源的命名空间。允许限制搜索参数到特定的命名空间。适用于`name`和`selector`字段。\n\n使用该参数在策略中指定命名空间级的`paramKind`，并将其字段为空。\n\n如果`paramKind`是集群级的，此字段必须被设置为无。设置此字段会导致配置错误。\n\n如果`paramKind`是命名空间级别的，当这个字段未设置时，对于认证过程中的对象，其命名空间将被用于此字段设置为空。请注意，如果该字段为空，则绑定不应匹配任何集群级别资源，这将导致错误。",
                                                                      "type": "string"
                                                                  },
                                                                  "parameterNotFoundAction": {
                                                                      "description": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny` Default to `Deny`",
                                                                      "descriptionCN": "参数未找到行为控制绑定在资源存在，但名称或选择器有效，但没有匹配的参数。如果设置为允许，则不会对绑定中的任何匹配参数进行成功验证。如果设置为禁止，则不会受政策失败策略的影响。",
                                                                      "type": "string"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
                                                                      "descriptionCN": "选择器可以用于根据标签匹配多个参数对象。使用selector: {}来匹配所有的ParamKind资源。\n\n如果找到多个参数，它们都将用政策表达式进行评估，并将结果并联在一起。\n\nname或selector必须设置，但name和selector是相互排斥的属性。如果一个被设置，另一个必须被设为空值。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.TypeChecking": {
                                                              "description": "TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy",
                                                              "descriptionCN": "类型检查包含验证入学政策表达式的结果。",
                                                              "properties": {
                                                                  "expressionWarnings": {
                                                                      "description": "The type checking warnings for each expression.",
                                                                      "descriptionCN": "对每个表达式类型的检查警告。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ExpressionWarning"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy": {
                                                              "description": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.",
                                                              "descriptionCN": "有效的入学政策描述了一个接受或拒绝对象而不改变其定义的入学验证政策。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的版本化结构。服务器应该将识别的格式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求的端点来推测此字符串。不能被更新。在CamelCase命名法下，更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据；更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the ValidatingAdmissionPolicy.",
                                                                      "descriptionCN": "所期望的行为的验证入学政策规范",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "The status of the ValidatingAdmissionPolicy, including warnings that are useful to determine if the policy behaves in the expected way. Populated by the system. Read-only.",
                                                                      "descriptionCN": "有效入会政策的状态，包括有用的警告，以确定政策是否按预期的方式行事。仅由系统提供。只读。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding": {
                                                              "description": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
                                                              "descriptionCN": "验证准入政策绑定将验证准入策略与参数化资源进行绑定。验证准入策略和参数CRD一起定义了集群管理员如何配置集群的政策。\n\n对于给定的准入请求，每个绑定都将导致其政策被评估N次，其中N为不使用参数的政策绑定的CEL表达式计算成本小于最大CEL预算。对政策的每一轮评估都会为其分配一个独立的CEL成本预算。添加、删除或修改政策、绑定或参数不会影响给定（政策、绑定、参数）组合是否在自己的Cel预算内。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别的规范转换为内部的最新值，如果遇到未识别的值，则可能拒绝它们。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的一个字符串值。服务器可以从客户端提交请求的端点推断出此值。不能更新。在驼峰命名法中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据；更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding.",
                                                                      "descriptionCN": "目标行为的验证入学政策绑定的规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingList": {
                                                              "description": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.",
                                                              "descriptionCN": "验证入学政策绑定列表是一个包含验证入学政策绑定的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化结构。服务器应该将识别到的 schema 转换为内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of PolicyBinding.",
                                                                      "descriptionCN": "政策绑定列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBinding"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示该对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时提供的端点推断出这个值。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec": {
                                                              "description": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.",
                                                              "descriptionCN": "有效性校验入学政策绑定规范是资格校验入学政策绑定的规格。",
                                                              "properties": {
                                                                  "matchResources": {
                                                                      "description": "MatchResources declares what resources match this binding and will be validated by it. Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.",
                                                                      "descriptionCN": "MatchResources声明了匹配这个绑定的哪些资源将被验证。请注意，这与策略的matchConstraints有交集，所以只有符合策略的请求才能通过此绑定进行选择。如果未设置，则所有符合策略的资源都将由此绑定进行验证。如果一个资源由这个对象其他字段匹配，则会被验证。请注意，这与ValidatingAdmissionPolicy matchConstraints不同，其中resourceRules是必需的。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchResources"
                                                                  },
                                                                  "paramRef": {
                                                                      "description": "paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.",
                                                                      "descriptionCN": "参数Ref指定用于配置入站控制策略的参数资源。应指向绑定的验证合格申请政策中指定类型的参数资源。如果政策指定了ParamKind并所引用的参数资源不存在，此绑定被认为是不正确的，并且验证合格申请策略的FailurePolicy被应用。如果政策没有指定ParamKind，则此字段被忽略，而规则在不提供参数的情况下被评估。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ParamRef"
                                                                  },
                                                                  "policyName": {
                                                                      "description": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
                                                                      "descriptionCN": "政策名称引用了一个有效的入学政策名称，该有效的入学政策绑定到。如果所参考的资源不存在，则此绑定被认为是无效的，将被忽略。",
                                                                      "type": "string"
                                                                  },
                                                                  "validationActions": {
                                                                      "description": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
                                                                      "descriptionCN": "验证行为声明了引用的验证承认政策如何执行。如果一个验证评估为假，则始终按照这些动作进行执行。\n\n验证承认政策失败策略定义的失败响应是在HTTP警告头中报告给请求客户端的失败，警告代码为299。警告可以用于允许或拒绝承认响应。\n\n验证承认政策失败包括在发布审计事件中包含在请求的公开审计事件中。审计事件将包含`validationpolicy.admission.k8s.io/validation_failure`审计注解，其中包含验证失败详细信息的JSON列表，每项都有以下字段： - message: 有效性失败的消息字符串 - policy: 正确的访问控制策略名称 - binding: 正确的访问控制策略绑定 - expressionIndex: 在正确访问控制策略中的失败验证的索引 - validationActions: 验证失败的执行动作示例：\n\n审计注释示例：\n```json\n\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"无效值\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]}]\"}\n```\n\n客户端应忽略不被识别的所有值来处理额外的值。\n\n“否认”和“警告”可能不能一起使用，因为这种组合无端地重复验证失败在API响应体和HTTP警告头部中。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyList": {
                                                              "description": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.",
                                                              "descriptionCN": "验证入学政策列表是一个包含有效的入学政策的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可变表示形式。服务器应该将识别到的结构转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ValidatingAdmissionPolicy.",
                                                                      "descriptionCN": "以下是一些有效的入学政策列表：\n\n1. 尊重他人：所有学生都应该尊重他人的观点和信仰。我们应该避免对别人进行歧视，也不要攻击他们的文化或背景。\n\n2. 诚实守信：学生应该诚实对待学术成绩、考试结果和其他重要的学术和个人表现。我们不能欺骗任何人，无论是教师还是家长。\n\n3. 遵守纪律：学校和课程应遵守所有的规章制度和纪律，包括学术规定、行为规范等。\n\n4. 提升自我：学生应该致力于提升自己的学习能力和适应能力，以应对未来的挑战。\n\n5. 勤奋努力：无论在学校还是在其他领域，勤奋努力都是成功的关键。学生们应该尽力而为，不断学习新的知识和技能。\n\n6. 保护环境：作为公民，学生应该意识到保护环境的重要性，并采取行动来减少对环境的负面影响。\n\n7. 保持健康：健康的饮食习惯、充足的睡眠和适当的运动可以帮助学生保持良好的身心状态。\n\n8. 热爱社区：学生们应该积极参与到社区活动中，帮助当地的人们，同时也能通过这种方式建立更深的人际关系。\n\n9. 善于沟通：沟通是理解他人和解决问题的重要工具。学生们应该学会清晰地表达自己的想法和感受，同时也应该倾听他人的意见和建议。\n\n10. 贡献社会：最后，但并非最不重要的是，学生们应该认识到他们的社会责任，并尽可能地做出贡献。这可以通过参加志愿者活动、参与公益活动等方式实现。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicy"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一种表示该对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时的端点推断出此值。不能更新。CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec": {
                                                              "description": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.",
                                                              "descriptionCN": "验证入学政策规范是所期望的 AdmissionPolicy 的行为规范。",
                                                              "properties": {
                                                                  "auditAnnotations": {
                                                                      "description": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
                                                                      "descriptionCN": "审计注释包含Cel表达式，用于生成API请求的审计事件。验证和审计注释可能不都为空；至少需要有一个验证或审计注释。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.AuditAnnotation"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "failurePolicy": {
                                                                      "description": "failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
                                                                      "descriptionCN": "失败策略定义了如何处理准入政策的失败。失败可以由CE表达式解析错误、类型检查错误、运行时错误和无效或配置错误的policy定义或绑定引起。\n\n如果spec.paramKind指向不存在的Kind，那么该政策是无效的。如果spec.paramRef.name指向不存在的资源，那么该绑定也是无效的。\n\n失败策略没有定义如何评估为false的验证会被如何处理。\n\n当失败策略设置为Fail时，ValidatingAdmissionPolicyBinding验证动作定义了如何强制执行失败。\n\n允许的值包括忽略或失败。默认为失败。",
                                                                      "type": "string"
                                                                  },
                                                                  "matchConditions": {
                                                                      "description": "MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the policy is skipped",
                                                                      "descriptionCN": "Match条件列表是请求被验证的必要条件。Match条件过滤由规则、namespaceSelector和objectSelector匹配过的请求。匹配条件为空的列表匹配所有请求。最多允许64个匹配条件。\n\n如果提供参数对象，可以使用`params`处理符在与验证表达式相同的方式访问它。\n\n精确匹配逻辑为（顺序）：\n  1. 如果任何匹配条件评估为假，则策略跳过。\n  2. 如果所有的匹配条件评估为真，则策略评估。\n  3. 如果有任何匹配条件评估为错误（但没有一个是假），- 如果失败策略=Fail, 推断拒绝请求 - 如果失败策略=忽略, 策略跳过",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "matchConstraints": {
                                                                      "description": "MatchConstraints specifies what resources this policy is designed to validate. The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required.",
                                                                      "descriptionCN": "MatchConstraints定义了此策略的设计目标。AdmissionPolicy关心请求是否匹配所有约束，但是为了防止集群陷入无法通过API验证的不稳定状态而无法恢复的状态，必须阻止ValidatingAdmissionPolicy匹配ValidatingAdmissionPolicy和ValidatingAdmissionPolicyBinding。必要。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.MatchResources"
                                                                  },
                                                                  "paramKind": {
                                                                      "description": "ParamKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null.",
                                                                      "descriptionCN": "参数类型指定用于参数化此政策的资源类型。如果不存在，该政策没有任何参数，并且paramCEL变量不会在验证表达式中提供。如果参数类型指定了一个不存在的种类，则此政策定义配置不正确，并将应用FailurePolicy。如果参数类型指定了但ParamRef未在ValidatingAdmissionPolicyBinding设置为空，则params变量将为null。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.ParamKind"
                                                                  },
                                                                  "validations": {
                                                                      "description": "Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
                                                                      "descriptionCN": "有效性包含CEL表达式，用于应用有效性。有效性与审计注释可能都不为空；至少需要一个有效性或审计注释。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.Validation"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "variables": {
                                                                      "description": "Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
                                                                      "descriptionCN": "变量包含定义的变量，这些变量可以用于组合其他表达式。每个变量被定义为一个命名Cel表达式。这里定义的变量将仅在政策中的`variables`中可用，而MatchConditions因为会在其他政策之后执行而不会被包括其中。\n\n变量的表达式可能指向列表之前定义但后来未定义的其他变量。因此，变量必须按其首次出现的顺序和无环性进行排序。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.Variable"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus": {
                                                              "description": "ValidatingAdmissionPolicyStatus represents the status of a ValidatingAdmissionPolicy.",
                                                              "descriptionCN": "验证入学政策状态代表了有效的验证入学政策的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "The conditions represent the latest available observations of a policy's current state.",
                                                                      "descriptionCN": "这些条件代表了政策当前状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "The generation observed by the controller.",
                                                                      "descriptionCN": "被控制器观察的那一代人。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "typeChecking": {
                                                                      "description": "The results of type checking for each expression. Presence of this field indicates the completion of the type checking.",
                                                                      "descriptionCN": "对每个表达式类型检查的结果。该字段的存在表明类型检查已完成。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1alpha1.TypeChecking"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.Validation": {
                                                              "description": "Validation specifies the CEL expression which is used to apply the validation.",
                                                              "descriptionCN": "验证指定使用的CEL表达式，该表达式用于应用验证。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.",
                                                                      "descriptionCN": "表达式表示接收API请求的表达式，这些表达式将被CEL评估。链接：https://github.com/google/cel-spec cel表达式可以访问API请求和响应的内容，包括Cel变量以及其他有用变量：\n- 'object' - 入口请求的对象。DELETE请求的值为null。 - 'oldObject' - 现有的对象。创建请求的值为null。 - 'request' - API请求（/pkg/apis/admission/types.go#AdmissionRequest）。 - 'params' - 根据策略绑定参数资源。只有当策略具有ParamKind时才可能填充该属性。 - 'namespaceObject' - 入口对象所属的命名空间对象。对于集群级资源，其值为null。 - 'variables' - 由其名称到懒惰计算值的映射。\n例如，名为foo的变量可以使用'variables.foo'访问。 - 使用CEL Authorizer执行授权检查。见 https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 使用CEL ResourceCheck构建从authorizer和配置有requestResource的cel资源检查\nAPI版本、类型、name和generateName始终可以从对象的根部访问。其他元数据属性不可用。\n只可访问以[a-zA-Z_.-/][a-zA-Z0-9_.-/]*开头的属性名称。访问表达式的属性名称应按以下规则进行转义： - '__'转义为 '__underscores__' - '.'转义为 '__dot__' - '-'转义为 '__dash__' - '/'转义为 '__slash__' - 名称完全匹配 cel保留关键字的属性名称应转义为 '__{keyword}__'。关键词包括： \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\"。\n示例：\n- 访问属性名为namespace的对象： {\"Expression\": \"object.__namespace__ > 0\"}\n- 访问属性名为x-prop的对象： {\"Expression\": \"object.x__dash__prop > 0\"}\n- 访问属性名为redact__d的对象： {\"Expression\": \"object.redact__underscores__d > 0\"}",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
                                                                      "descriptionCN": "消息代表当验证失败时显示的message。如果表达式包含行断，该消息是必需的。如果未设置，则消息为\"失败规则: {Rule}\"。例如：\"必须是一个URL，其主机与spec.host匹配\" 如果表达式包含行断。该消息是必需的。该消息不允许含有行断。如果未设置，则消息为\"失败表达式: {Expression}\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "messageExpression": {
                                                                      "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
                                                                      "descriptionCN": "原因代表了一个机器可读的描述为什么此验证失败。如果这是列表中首次失败的验证，以及相应的HTTP响应代码，都用于向客户端发送HTTP响应。目前支持的原因包括\"未经授权\"、\"禁止访问\"、\"无效\"和\"请求实体太大\"。如果没有设置，StatusReasonInvalid将被用于向客户端发送响应。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1alpha1.Variable": {
                                                              "description": "Variable is the definition of a variable that is used for composition.",
                                                              "descriptionCN": "变量是用于组合的变量的定义。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
                                                                      "descriptionCN": "表达式就是变量的值。CEL表达式的值可以通过Cel表达式在验证中的访问。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
                                                                      "descriptionCN": "变量名是变量的名称。该名称必须为有效的CEL标识符，且与其他所有变量独一无二。可以通过`variables`访问变量，例如，如果名称是“foo”，变量将可用为`variables.foo`。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.AuditAnnotation": {
                                                              "description": "AuditAnnotation describes how to produce an audit annotation for an API request.",
                                                              "descriptionCN": "审计注释描述了如何为API请求生成审计注释。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded.\n\nRequired.",
                                                                      "descriptionCN": "关键标识符指定审计注解的键。验证准入政策的有效性审计注解的关键必须是唯一的。键必须以（A-Za-z0-9）、[-A-Za-z0-9_.]*长度不超过63个字节的形式组合。\n将验证准入政策的资源名称与关键合并，形成审计注解键：\"{ValidatingAdmissionPolicy name}/{key}\"。如果接入网关使用此验证准入政策的相同资源名称和相同的审计注解键，则注释键将保持一致。在这种情况下，具有该键的第一条注释将在审计事件中被添加，并且具有相同键的所有后续注释都将被忽略。",
                                                                      "type": "string"
                                                                  },
                                                                  "valueExpression": {
                                                                      "description": "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list.\n\nRequired.",
                                                                      "descriptionCN": "valueExpression：表示由CEL评估以产生审计注解值的表达式。表达式必须评估为字符串或null值。如果表达式评估为字符串，审计注释将包含该字符串值。如果表达式评估为空字符串或null，审计注释将被忽略。valueExpression的长度可能不超过5KB。如果valueExpression的结果大于10KB，它将被截断到10KB。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ExpressionWarning": {
                                                              "description": "ExpressionWarning is a warning information that targets a specific expression.",
                                                              "descriptionCN": "表达警告是一个针对特定表达的警告信息。",
                                                              "properties": {
                                                                  "fieldRef": {
                                                                      "description": "The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "warning": {
                                                                      "description": "The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.",
                                                                      "descriptionCN": "人类可读形式的类型检查信息内容。警告每一行都包含表达式被检查的类型，然后是编译器的类型检查错误。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.MatchCondition": {
                                                              "description": "MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook.",
                                                              "descriptionCN": "匹配条件代表了请求被发送到Webhook时必须满足的条件。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.",
                                                                      "descriptionCN": "表达式表示由CEL评估的表达式。必须等于bool。CEL表达式有权访问AdmissionRequest和Authorizer的内容，这些内容被组织成Cel变量：\n\n'object' - 请求的输入对象。删除请求时为null。'oldObject' - 当前的对象。创建请求时为null。'request' - /pkg/apis/admission/types.go#AdmissionRequest中的属性。authorizer - 一个Cel Authorizer。可用于执行对请求主体（用户或服务帐户）的授权检查。\n\n参考https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n.authorizer.requestResource - 由authorized由authorizer和配置了资源检查构建的CEL ResourceCheck。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.",
                                                                      "descriptionCN": "名称是这个匹配条件的标识符，用于战略合并MatchConditions以及提供日志记录目的。一个好名字应该描述与其关联的表达式。名字必须由字母、数字、减号、点或句点组成，并且以字母（例如'MyName'）开头和结尾（使用验证的正则表达式为：([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]），并且可以添加一个可选的DNS子域名前缀和路径（例如'my.name.example.com'）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.MatchResources": {
                                                              "description": "MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
                                                              "descriptionCN": "MatchResources 将根据是否符合匹配条件来决定是否运行入学控制政策。排除规则优于包括规则（如果资源同时满足两个条件，则被排除）。",
                                                              "properties": {
                                                                  "excludeResourceRules": {
                                                                      "description": "ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)",
                                                                      "descriptionCN": "\"ExcludeResourceRules\" 描述了 ValidatingAdmissionPolicy 对什么资源/子资源的操作不应该关心。排除规则优于包括规则（如果一个资源匹配两者，则被排除）。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "matchPolicy": {
                                                                      "description": "matchPolicy defines how the \"MatchResources\" list is used to match incoming requests. Allowed values are \"Exact\" or \"Equivalent\".\n\n- Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the ValidatingAdmissionPolicy.\n\n- Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the ValidatingAdmissionPolicy.\n\nDefaults to \"Equivalent\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "NamespaceSelector decides whether to run the admission control policy on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy.\n\nFor example, to run the webhook on any objects whose namespace is not associated with \"runlevel\" of \"0\" or \"1\";  you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"runlevel\",\n      \"operator\": \"NotIn\",\n      \"values\": [\n        \"0\",\n        \"1\"\n      ]\n    }\n  ]\n}\n\nIf instead you want to only run the policy on any objects whose namespace is associated with the \"environment\" of \"prod\" or \"staging\"; you will set the selector as follows: \"namespaceSelector\": {\n  \"matchExpressions\": [\n    {\n      \"key\": \"environment\",\n      \"operator\": \"In\",\n      \"values\": [\n        \"prod\",\n        \"staging\"\n      ]\n    }\n  ]\n}\n\nSee https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.\n\nDefault to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "命名空间选择器根据对象的namespace是否匹配selector来决定是否运行准入控制策略。如果对象本身是一个namespace，那么匹配是在object.metadata.labels中进行的。如果对象是另一个集群 scoped resource，则永远不会跳过这个政策。\n\n例如，如果你想在任何不与\"runlevel\"值为0或1的namespace中的任何对象上运行webhook；你可以设置selector如下：\"namespaceSelector\": {\"matchExpressions\": [{\"key\": \"runlevel\", \"operator\": \"NotIn\", \"values\": [ \"0\", \"1\" ]}]}}。\n相反，如果你想只在与prod或staging环境相关的namespace中运行该政策，则可以设置selector如下：\"namespaceSelector\": {\"matchExpressions\": [{\"key\": \"environment\", \"operator\": \"In\", \"values\": [ \"prod\", \"staging\" ]}]}}。\n请注意：对于标签选择器的更多信息，请参阅https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/以获取更多关于标签选择器的例子。默认情况下，它会匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "objectSelector": {
                                                                      "description": "ObjectSelector decides whether to run the validation based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the cel validation, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.",
                                                                      "descriptionCN": "对象选择器决定是否运行验证，这取决于对象是否有匹配的标签。在发送到cel验证的对象中，objectSelector被评估，并且如果任何对象匹配该选择器，则被认为是匹配的。null对象（创建时或删除时）或不能有标签的（如DeploymentRollback或PodProxyOptions对象）被认为不匹配。使用对象选择器只有当webhook是可选的情况下，因为用户可能通过设置labels跳过 admission webhook。默认为空LabelSelector，它匹配所有内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "resourceRules": {
                                                                      "description": "ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches _any_ Rule.",
                                                                      "descriptionCN": "资源规则描述了 ValidatingAdmissionPolicy 在什么资源/子资源上进行的操作。该策略关心如果操作匹配 _任何_ 规则，则进行此操作。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations": {
                                                              "description": "NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.",
                                                              "descriptionCN": "命名为规则操作是包含操作和资源的元组，其中资源名称由ResourceNames字段定义。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "API Groups 是资源所属的 API 组。`*` 是所有组。如果 `*` 存在，子数组的长度必须为 1。必填",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "apiVersions": {
                                                                      "description": "APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "API版本是资源所属的API版本。*表示所有版本。如果*存在，slice的长度必须为1。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "operations": {
                                                                      "description": "Operations is the operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT or * for all of those operations and any future admission operations that are added. If '*' is present, the length of the slice must be one. Required.",
                                                                      "descriptionCN": "操作是关于被吸引的被添加的操作 - CREATE、UPDATE、DELETE或* 对所有这些操作，以及任何未来被添加的入学操作。如果星号（*）存在，则需要其长度为1。要求",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resourceNames": {
                                                                      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
                                                                      "descriptionCN": "\"ResourceNames\" 是一个可选的白名单，用于指定规则适用的名称。空集合表示一切皆可。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources is a list of resources this rule applies to.\n\nFor example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.\n\nIf wildcard is present, the validation rule will ensure resources do not overlap with each other.\n\nDepending on the enclosing object, subresources might not be allowed. Required.",
                                                                      "descriptionCN": "资源列表这是这个规则适用的资源。\n\n例如：\"pods\"意味着 pods。 \"pods/log\" 意味着 pod 日志子资源。 \"*\" 表示所有的资源，但不包括子资源。 \"pods/*\" 表示所有的 pod 子资源。 \"*\" 也表示所有的资源及其子资源。\n\n如果星号存在，验证规则将确保资源之间不会重叠。\n\n根据嵌套的对象，子资源可能不允许。必填",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "scope": {
                                                                      "description": "scope specifies the scope of this rule. Valid values are \"Cluster\", \"Namespaced\", and \"*\" \"Cluster\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \"Namespaced\" means that only namespaced resources will match this rule. \"*\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \"*\".",
                                                                      "descriptionCN": "规则的范围被指定。有效值是\"Cluster\", \"Namespaced\",和\"*\"。这意味着只有集群资源会匹配这个规则。命名空间API对象是集群资源。\"Namespaced\"意味着只有命名空间资源会匹配这个规则。 \"*\"表示没有范围限制。子资源匹配其父资源的范围。默认情况下，它是\"*\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ParamKind": {
                                                              "description": "ParamKind is a tuple of Group Kind and Version.",
                                                              "descriptionCN": "参数类型是一个元组，包含Group Kind和Version。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion is the API group version the resources belong to. In format of \"group/version\". Required.",
                                                                      "descriptionCN": "API版本是资源所属的API组版本。格式为\"group/version\"。必填。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the API kind the resources belong to. Required.",
                                                                      "descriptionCN": "善良是资源所属的API类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ParamRef": {
                                                              "description": "ParamRef describes how to locate the params to be used as input to expressions of rules applied by a policy binding.",
                                                              "descriptionCN": "参数Ref描述了如何定位用于应用政策绑定规则的输入参数。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured by setting the `name` field, leaving `selector` blank, and setting namespace if `paramKind` is namespace-scoped.",
                                                                      "descriptionCN": "名称是指正在参考的资源的名称。\n\n`name`或`selector`至少有一个需要设置，但是`name`和`selector`是相互独立的属性。如果一个被设置，则另一个必须为空。\n\n所有申请请求中使用的单一参数可以通过设置`name`字段来配置，将`selector`字段留空，并在`paramKind`为命名空间级的条件下设置namespace。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error.",
                                                                      "descriptionCN": "资源名空间是引用资源的命名空间。允许限制搜索参数到特定命名空间。适用于`name`和`selector`字段。\n\n使用政策指定一个名为`paramKind`的命名空间子集中的`paramKind`属性，并且此字段为空。\n\n- 如果`paramKind`是集群级的，这个字段必须设置为空。设置这个字段会导致配置错误。\n\n- 如果`paramKind`是命名空间级别的，评估入站对象时使用的命名空间将被用作当`paramKind`未设置时该字段的值。小心如果这个字段被留为空，那么绑定将不会匹配任何集群级资源，这将导致错误。",
                                                                      "type": "string"
                                                                  },
                                                                  "parameterNotFoundAction": {
                                                                      "description": "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired",
                                                                      "descriptionCN": "参数未找到行为控制绑定在资源存在，且名称或选择器有效但没有匹配的参数时的行为。如果设置为`允许`，则不会受到绑定的成功验证的影响。如果设置为`拒绝`，则不会受到政策的失败政策的影响。允许值是`允许`或`拒绝`。",
                                                                      "type": "string"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset.",
                                                                      "descriptionCN": "选择器可以用来根据标签匹配多个参数对象。设置选择器：{}来匹配所有的参数类型。\n\n如果找到多个参数，它们都将按照政策表达式进行评估，并且结果将被并存在一起。\n\n`name`或`selector`至少需要设置一个，但是`name`和`selector`是相互排斥的属性。如果设置了一个，另一个就必须被设为为空。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.TypeChecking": {
                                                              "description": "TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy",
                                                              "descriptionCN": "类型检查包含有效的入学政策表达式的类型检查结果。",
                                                              "properties": {
                                                                  "expressionWarnings": {
                                                                      "description": "The type checking warnings for each expression.",
                                                                      "descriptionCN": "对表达式类型的检查警告。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ExpressionWarning"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy": {
                                                              "description": "ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.",
                                                              "descriptionCN": "有效的入学政策定义了一个接受或拒绝对象而不改变其属性的入学验证政策。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的形式的版本化规范。服务器应该将识别到的规范转换为最新的内部值，如果未被识别，则可能拒绝。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求时的端点推测这个资源。无法更新。使用 camelCase 进行命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据；更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the ValidatingAdmissionPolicy.",
                                                                      "descriptionCN": "“理想的访问政策行为规范”的详细说明。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "The status of the ValidatingAdmissionPolicy, including warnings that are useful to determine if the policy behaves in the expected way. Populated by the system. Read-only.",
                                                                      "descriptionCN": "验证录取政策的状态，包括对行为预期的警告，用于确定政策是否按预期方式运作。系统自动生成并可读。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding": {
                                                              "description": "ValidatingAdmissionPolicyBinding binds the ValidatingAdmissionPolicy with paramerized resources. ValidatingAdmissionPolicyBinding and parameter CRDs together define how cluster administrators configure policies for clusters.\n\nFor a given admission request, each binding will cause its policy to be evaluated N times, where N is 1 for policies/bindings that don't use params, otherwise N is the number of parameters selected by the binding.\n\nThe CEL expressions of a policy must have a computed CEL cost below the maximum CEL budget. Each evaluation of the policy is given an independent CEL cost budget. Adding/removing policies, bindings, or params can not affect whether a given (policy, binding, param) combination is within its own CEL budget.",
                                                              "descriptionCN": "认证准入策略绑定将认证准入策略与参数化资源关联。认证准入策略和参数CRD一起定义如何集群管理员配置用于集群的政策。\n\n对于给定的准入请求，每个绑定都会导致其策略被评估N次，其中N为不使用参数的政策绑定或该绑定中选择的参数数。授权表达式政策必须具有低于最大CEL预算的成本系数。对政策进行每一轮评估时都提供一个独立的CEL成本预算。添加、删除、绑定或参数可以不会影响是否给定的（政策、绑定、参数）组合在自己的CEL预算内。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示的对象的可变结构化表示形式。服务器应该将已知的架构转换为内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端向其提交请求时提供的端点来推测此字段。不能被更新。在驼峰命名法中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据; 更多信息: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the ValidatingAdmissionPolicyBinding.",
                                                                      "descriptionCN": "希望被允许进入政策的期望行为规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingList": {
                                                              "description": "ValidatingAdmissionPolicyBindingList is a list of ValidatingAdmissionPolicyBinding.",
                                                              "descriptionCN": "验证入学政策绑定列表是一个包含 ValidatingAdmissionPolicyBinding 的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的可变架构的版本。服务器应该将识别到的架构转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of PolicyBinding.",
                                                                      "descriptionCN": "政策绑定列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBinding"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个字符串值，表示这个对象所代表的REST资源。服务器可以通过客户端提交请求时使用的端点推测出这个字符串。不能被更新。在CamelCase命名下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec": {
                                                              "description": "ValidatingAdmissionPolicyBindingSpec is the specification of the ValidatingAdmissionPolicyBinding.",
                                                              "descriptionCN": "有效验证入学政策绑定规范是有效的入学政策绑定的规范。",
                                                              "properties": {
                                                                  "matchResources": {
                                                                      "description": "MatchResources declares what resources match this binding and will be validated by it. Note that this is intersected with the policy's matchConstraints, so only requests that are matched by the policy can be selected by this. If this is unset, all resources matched by the policy are validated by this binding When resourceRules is unset, it does not constrain resource matching. If a resource is matched by the other fields of this object, it will be validated. Note that this is differs from ValidatingAdmissionPolicy matchConstraints, where resourceRules are required.",
                                                                      "descriptionCN": "MatchResources 提供了哪些资源与该绑定匹配，并将被验证。请注意，这与其他政策的matchConstraints冲突，因此只有匹配此策略的请求才能在此选择。如果未设置，则由此绑定的所有资源都将通过验证。如果此对象中其他字段匹配资源，则将进行验证。这与ValidatingAdmissionPolicy matchConstraints中的resourceRules要求不同，其中resourceRules是必需的。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchResources"
                                                                  },
                                                                  "paramRef": {
                                                                      "description": "paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in ParamKind of the bound ValidatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the ValidatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.",
                                                                      "descriptionCN": "参数Ref指定了用于配置访问控制策略的参数资源。它应指向Bound ValidatingAdmissionPolicy类型的指定资源类型。如果政策指定了ParamKind，并且由ParamRef引用的资源不存在，此绑定被认为配置不当，并且有效性验证政策的FailurePolicy应用于。如果政策没有指定ParamKind，则忽略此字段，并在没有参数的情况下执行规则评估。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ParamRef"
                                                                  },
                                                                  "policyName": {
                                                                      "description": "PolicyName references a ValidatingAdmissionPolicy name which the ValidatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.",
                                                                      "descriptionCN": "政策名称引用了一个有效的入学政策名字，该入学政策绑定到这个有效的入学政策。如果引用的资源不存在，则认为此绑定无效并忽略。",
                                                                      "type": "string"
                                                                  },
                                                                  "validationActions": {
                                                                      "description": "validationActions declares how Validations of the referenced ValidatingAdmissionPolicy are enforced. If a validation evaluates to false it is always enforced according to these actions.\n\nFailures defined by the ValidatingAdmissionPolicy's FailurePolicy are enforced according to these actions only if the FailurePolicy is set to Fail, otherwise the failures are ignored. This includes compilation errors, runtime errors and misconfigurations of the policy.\n\nvalidationActions is declared as a set of action values. Order does not matter. validationActions may not contain duplicates of the same action.\n\nThe supported actions values are:\n\n\"Deny\" specifies that a validation failure results in a denied request.\n\n\"Warn\" specifies that a validation failure is reported to the request client in HTTP Warning headers, with a warning code of 299. Warnings can be sent both for allowed or denied admission responses.\n\n\"Audit\" specifies that a validation failure is included in the published audit event for the request. The audit event will contain a `validation.policy.admission.k8s.io/validation_failure` audit annotation with a value containing the details of the validation failures, formatted as a JSON list of objects, each with the following fields: - message: The validation failure message string - policy: The resource name of the ValidatingAdmissionPolicy - binding: The resource name of the ValidatingAdmissionPolicyBinding - expressionIndex: The index of the failed validations in the ValidatingAdmissionPolicy - validationActions: The enforcement actions enacted for the validation failure Example audit annotation: `\"validation.policy.admission.k8s.io/validation_failure\": \"[{\"message\": \"Invalid value\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]\"`\n\nClients should expect to handle additional values by ignoring any values not recognized.\n\n\"Deny\" and \"Warn\" may not be used together since this combination needlessly duplicates the validation failure both in the API response body and the HTTP warning headers.\n\nRequired.",
                                                                      "descriptionCN": "验证策略的验证动作声明了如何执行参考的验证准入政策中的验证。如果验证评估为假，则始终按照这些动作进行。\n\n验证策略失败策略定义的失败行为仅在设置为失败时才按照这些动作进行处理。否则，失败将被忽略。\n\n验证动作声明为一系列动作值的集合。顺序无关紧要。验证动作可能不包含具有相同动作的重复值。\n\n支持的动作值是：\n\n\"拒绝\"表示一个验证失败导致请求被拒绝。\n\n\"警告\"表示一个验证失败报告到请求客户端，在HTTP警告头中使用299码。警告可以用于允许或拒绝准入响应。\n\n\"审计\"表示验证失败包括在发布审计事件中请求的审计事件中。审计事件将包含`validationpolicyadmission.k8s.io/validation_failure`审计注解，其中包含验证失败的详细信息，格式化为JSON列表的对象，每个对象具有以下字段： - message: 无效值的消息字符串 - policy: 访问许可策略的名称 - binding: 访问许可策略的名称 - expressionIndex: 验证失败的有效性在访问许可策略中的索引 - validationActions: 应用的验证失败实施示例审计注释： `\"validationpolicyadmission.k8s.io/validation_failure\": \"[{\"message\": \"无效值\", {\"policy\": \"policy.example.com\", {\"binding\": \"policybinding.example.com\", {\"expressionIndex\": \"1\", {\"validationActions\": [\"Audit\"]}]}]}\" }`\n\n客户端应忽略任何未识别的值来处理额外值。\n\n\"拒绝\"和\"警告\"可能无法一起使用，因为这种组合无意义地重复验证失败在API响应体和HTTP警告头部中。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyList": {
                                                              "description": "ValidatingAdmissionPolicyList is a list of ValidatingAdmissionPolicy.",
                                                              "descriptionCN": "验证录取政策列表是一系列有效的录取政策。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化 schema。服务器应该将识别的 schema 转换为内部的最新值，如果未识别，则可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ValidatingAdmissionPolicy.",
                                                                      "descriptionCN": "资格审查政策列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicy"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示该对象所代表的 REST 资源的字符串值。服务器可能根据客户端提交请求时提交的端点推断出这个字符串。无法更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准的元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec": {
                                                              "description": "ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.",
                                                              "descriptionCN": "有效入学政策规范是描述期望的入学政策行为的规范。",
                                                              "properties": {
                                                                  "auditAnnotations": {
                                                                      "description": "auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.",
                                                                      "descriptionCN": "审计标注包含使用CEL表达式产生的API请求的审计事件审计注释。验证和审计标注可能不都为空；至少有一个验证或审计注释是必需的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.AuditAnnotation"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "failurePolicy": {
                                                                      "description": "failurePolicy defines how to handle failures for the admission policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions or bindings.\n\nA policy is invalid if spec.paramKind refers to a non-existent Kind. A binding is invalid if spec.paramRef.name refers to a non-existent resource.\n\nfailurePolicy does not define how validations that evaluate to false are handled.\n\nWhen failurePolicy is set to Fail, ValidatingAdmissionPolicyBinding validationActions define how failures are enforced.\n\nAllowed values are Ignore or Fail. Defaults to Fail.",
                                                                      "descriptionCN": "失败策略定义了如何处理入场策略的失败。失败可能发生在CEL表达式解析错误、类型检查错误、运行时错误和无效或配置错误的政策定义或绑定中。\n\n如果spec.paramKind指向一个不存在的Kind，那么该政策就是无效的。如果spec.paramRef.name指向一个不存在的资源，那么该绑定也是无效的。\n\n失败策略没有定义如何评估为假的验证的处理方式。\n\n当失败策略设置为Fail时，ValidatingAdmissionPolicyBinding验证Action会定义如何执行失败强制措施。\n\n允许的值是忽略或失败。默认为失败。",
                                                                      "type": "string"
                                                                  },
                                                                  "matchConditions": {
                                                                      "description": "MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.\n\nIf a parameter object is provided, it can be accessed via the `params` handle in the same manner as validation expressions.\n\nThe exact matching logic is (in order):\n  1. If ANY matchCondition evaluates to FALSE, the policy is skipped.\n  2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.\n  3. If any matchCondition evaluates to an error (but none are FALSE):\n     - If failurePolicy=Fail, reject the request\n     - If failurePolicy=Ignore, the policy is skipped",
                                                                      "descriptionCN": "匹配条件列表必须满足以下条件，才能被验证。匹配条件过滤由规则、namespaceSelector和objectSelector匹配的已匹配请求。如果提供一个参数对象，则可通过`params`处理符与验证表达式相同的方式访问其值。精确匹配逻辑如下：\n\n1. 如果任何匹配条件评估为假，策略将被跳过。\n2. 如果所有匹配条件都评估为真，策略将被执行。\n3. 如果任何一个匹配条件评估为错误（但没有一个为假），则：\n   - 如果失败策略为“失败”，拒绝请求\n   - 如果失败策略为“忽略”，该策略将被跳过",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "matchConstraints": {
                                                                      "description": "MatchConstraints specifies what resources this policy is designed to validate. The AdmissionPolicy cares about a request if it matches _all_ Constraints. However, in order to prevent clusters from being put into an unstable state that cannot be recovered from via the API ValidatingAdmissionPolicy cannot match ValidatingAdmissionPolicy and ValidatingAdmissionPolicyBinding. Required.",
                                                                      "descriptionCN": "匹配约束指定了此政策设计用于验证什么资源。 AdmissionPolicy关心请求是否满足所有约束。然而，为了防止集群处于无法通过API进行恢复的不稳定状态中，ValidatingAdmissionPolicy不能匹配ValidatingAdmissionPolicy和ValidatingAdmissionPolicyBinding。必填",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MatchResources"
                                                                  },
                                                                  "paramKind": {
                                                                      "description": "ParamKind specifies the kind of resources used to parameterize this policy. If absent, there are no parameters for this policy and the param CEL variable will not be provided to validation expressions. If ParamKind refers to a non-existent kind, this policy definition is mis-configured and the FailurePolicy is applied. If paramKind is specified but paramRef is unset in ValidatingAdmissionPolicyBinding, the params variable will be null.",
                                                                      "descriptionCN": "参数类型指定用于参数化此政策的资源类型。如果没有，这个政策没有参数，并且参数CE变量不会被提供给验证表达式。如果参数类型指定了一个不存在的类型，则政策定义配置错误，FailurePolicy将被执行。如果参数类型指定但ValidatingAdmissionPolicyBinding中的paramRef未设置为空，params变量将为null。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ParamKind"
                                                                  },
                                                                  "validations": {
                                                                      "description": "Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.",
                                                                      "descriptionCN": "有效性包含CEL表达式，用于应用有效性。有效性和审计注释可能都不会为空；至少需要一个有效性或审计注释。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.Validation"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "variables": {
                                                                      "description": "Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.\n\nThe expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.",
                                                                      "descriptionCN": "变量包含定义的变量，可以在其他表达式中组合使用。每个变量都定义为一个名为CEL的表达式。在这里定义的变量将在除了MatchConditions外的所有政策中的`variables`属性下可用。因为MatchConditions是在其他政策之后评估的，所以变量必须按出现顺序排序，并且是无环的。\n\n变量的表达式可以指向列表中 earlier defined但后面没有定义的变量。因此，变量必须按出现顺序排序，并且是无环的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.Variable"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus": {
                                                              "description": "ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.",
                                                              "descriptionCN": "验证入学政策状态代表了入学验证政策的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "The conditions represent the latest available observations of a policy's current state.",
                                                                      "descriptionCN": "条件代表政策当前状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "The generation observed by the controller.",
                                                                      "descriptionCN": "被控制器观察的这一代人。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "typeChecking": {
                                                                      "description": "The results of type checking for each expression. Presence of this field indicates the completion of the type checking.",
                                                                      "descriptionCN": "对于每个表达式类型检查的结果。这个字段的存在表明完成了类型的检查。",
                                                                      "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.TypeChecking"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.Validation": {
                                                              "description": "Validation specifies the CEL expression which is used to apply the validation.",
                                                              "descriptionCN": "验证定义了用于应用验证的Cel表达式。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.",
                                                                      "descriptionCN": "表达式代表被Cel解析的表达，这些表达将由CEL变量以及其他有用变量进行评估。 - 'object'：请求中的对象。对于DELETE请求，值为null。 - 'oldObject'：已存在的对象。对于CREATE请求，值为null。 - 'request'：API请求（/pkg/apis/admission/types.go#AdmissionRequest）的属性。只有当策略具有ParamKind时才填充。 - 'namespaceObject'：接收对象所属的命名空间对象。对于集群资源，值为null。 - 'variables'：堆叠变量映射，其名称与其懒惰求值后的值关联。例如，名为'foo'的变量可以访问为'variables.foo'。 - 'authorizer'：CEL Authorizer。可用于对请求主体（用户或服务账户）进行授权检查。 - 'authorizer.requestResource'：由authorizer和配置的请求资源构建的CEL ResourceCheck。 authorizer.requestResource属性必须在对象的根处可用。 - 'apiVersion'：API版本，键，类型，name和generateName始终可以从对象的根部获取。没有其他元数据属性可供访问。 只有以[a-zA-Z_.-/][a-zA-Z0-9_.-/]*形式表示的属性名称可访问。在表达式中访问此类属性时，根据以下规则进行转义： - '__'用于转义 '__underscores__' - '.'用于转义 '__dot__' - '-'用于转义 '__dash__' - '/'用于转义 '__slash__' - 函数名、字符串、切片或映射名与 cel reserved keyword 相同时，使用 '__{keyword}__' 进行转义。关键词包括： - 'true'、'false'、'null'、'in'、'as'、'break'、'const'、'continue'、'else'、'for'、'function'、'if'、'import'、'let'、'loop'、'package'、'namespace'、'return'。示例： - 访问一个名为\"namespace\"的属性：{\"Expression\": \"object.__namespace__ > 0\"} - 访问一个名为\"x-prop\"的属性：{\"Expression\": \"object.x__dash__prop > 0\"} - 访问一个名为\"redact__d\"的属性：{\"Expression\": \"object.redact__underscores__d > 0\"}。比较数组类型的set或map具有list类型，忽略元素顺序。即[1,2] == [2,1]。数组与x-kubernetes-list-type一起用列表类型的逻辑进行合并： - set: X + Y 表示X的所有位置都保留在，Y中非重叠元素按次序添加，保留X的部分有序顺序。 - map: X + Y 表示X的所有键都保留在，但Y中的值被替换为Y中设置的X和Y的key set之间的值。具有非重叠键的Y项按照部分有序方式附加，保留其部分有序顺序。",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is \"failed Expression: {Expression}\".",
                                                                      "descriptionCN": "消息代表当验证失败时显示的消息。如果表达式包含行分隔符，该消息是必需的。该消息不得包含行分隔符。如果没有设置，则消息为“失败规则：{Rule}`” e.g. “必须是一个匹配spec.host的URL”。如果表达式包含行分隔符。该消息是必需的。该消息不得包含行分隔符。如果没有设置，则消息为“失败表达式：{Expression}`”。",
                                                                      "type": "string"
                                                                  },
                                                                  "messageExpression": {
                                                                      "description": "messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'. Example: \"object.x must be less than max (\"+string(params.max)+\")\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\". If not set, StatusReasonInvalid is used in the response to the client.",
                                                                      "descriptionCN": "原因代表了为什么这个验证失败的机器可读描述。如果这是列表中第一个验证失败，以及相应的HTTP响应代码，都将用于向客户端发送HTTP响应。目前支持的原因是：\"未经授权\"、\"禁止\"、\"无效\"和\"请求体太大\"。如果没有设置，则状态原因无效将被用于向客户端发送响应。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.admissionregistration.v1beta1.Variable": {
                                                              "description": "Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.",
                                                              "descriptionCN": "变量是用于组合的定义。一个变量被定义为一个命名表达式。",
                                                              "properties": {
                                                                  "expression": {
                                                                      "description": "Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.",
                                                                      "descriptionCN": "表达式是变量的值将被评估。CEL表达式具有与Validation中的Cel表达式的相同标识符访问权限。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is \"foo\", the variable will be available as `variables.foo`",
                                                                      "descriptionCN": "变量名是变量的名称。这个名称必须是一个有效的CEL标识符，并且与其他变量唯一。可以通过`variables`表达式访问该变量，例如如果name为\"foo\"，则变量将可用作`variables.foo`。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion": {
                                                              "description": "An API server instance reports the version it can decode and the version it encodes objects to when persisting objects in the backend.",
                                                              "descriptionCN": "在后端持久化对象时，API服务器实例报告它可以解码和编码的对象的版本。",
                                                              "properties": {
                                                                  "apiServerID": {
                                                                      "description": "The ID of the reporting API server.",
                                                                      "descriptionCN": "报告API服务器的ID。",
                                                                      "type": "string"
                                                                  },
                                                                  "decodableVersions": {
                                                                      "description": "The API server can decode objects encoded in these versions. The encodingVersion must be included in the decodableVersions.",
                                                                      "descriptionCN": "API服务器可以解码这些版本中的对象。编码版本必须包含在可解码版本中。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "encodingVersion": {
                                                                      "description": "The API server encodes the object to this version when persisting it in the backend (e.g., etcd).",
                                                                      "descriptionCN": "在将对象保存到后端（如etcd）时，API服务器会将其编码为这个版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "servedVersions": {
                                                                      "description": "The API server can serve these versions. DecodableVersions must include all ServedVersions.",
                                                                      "descriptionCN": "API服务器可以提供这些版本。可解码版本必须包含所有的ServedVersions。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.StorageVersion": {
                                                              "description": "Storage version of a specific resource.",
                                                              "descriptionCN": "特定资源的存储版本。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化 schema。服务器应该将识别到的schema转换为内部最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示此对象所代表的REST资源的一个字符串值。服务器可能根据客户端提交请求时使用的端点推断出这个值。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "The name is <group>.<resource>.",
                                                                      "descriptionCN": "这个名称是<组>。<资源>。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec is an empty spec. It is here to comply with Kubernetes API style.",
                                                                      "descriptionCN": "规格是一个空的规格。它的目的是符合Kubernetes API风格。",
                                                                      "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "API server instances report the version they can decode and the version they encode objects to when persisting objects in the backend.",
                                                                      "descriptionCN": "API服务器实例会报告他们可以解码和编码的对象的版本，以及在后端持久化对象时他们使用的方法。",
                                                                      "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition": {
                                                              "description": "Describes the state of the storageVersion at a certain point.",
                                                              "descriptionCN": "在某个特定时刻描述存储版本的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次状态从一种转变为另一种。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "人类可读的指示过渡细节的消息。",
                                                                      "type": "string"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "If set, this represents the .metadata.generation that the condition was set based upon.",
                                                                      "descriptionCN": "如果设置，这代表根据该条件设置的 .metadata.generation 模式。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "这个条件最后的转变的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况，其中一个是真，一个是假，一个是未知。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of the condition.",
                                                                      "descriptionCN": "疾病类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionList": {
                                                              "description": "A list of StorageVersions.",
                                                              "descriptionCN": "存储版本列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化结构。服务器应该将识别到的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items holds a list of StorageVersion",
                                                                      "descriptionCN": "项目存储了一个StorageVersion列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersion"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示此对象所代表的 REST 资源的字符串值。服务器可能根据客户端向其提交请求时使用的端点推断出这个值。不能被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionSpec": {
                                                              "description": "StorageVersionSpec is an empty spec.",
                                                              "descriptionCN": "存储版本规范是一个空的规范。",
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus": {
                                                              "description": "API server instances report the versions they can decode and the version they encode objects to when persisting objects in the backend.",
                                                              "descriptionCN": "当在后台保存对象时，API服务器实例会报告它们可以解码和编码的对象版本。",
                                                              "properties": {
                                                                  "commonEncodingVersion": {
                                                                      "description": "If all API server instances agree on the same encoding storage version, then this field is set to that version. Otherwise this field is left empty. API servers should finish updating its storageVersionStatus entry before serving write operations, so that this field will be in sync with the reality.",
                                                                      "descriptionCN": "如果所有API服务器实例都同意使用相同的编码存储版本，那么这个字段将设置为该版本。否则，这个字段将为空。API服务器在发送写操作之前应该完成其存储版本状态的更新，以便此字段与现实保持同步。",
                                                                      "type": "string"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "The latest available observations of the storageVersion's state.",
                                                                      "descriptionCN": "当前可用的存储版本状态观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.StorageVersionCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "storageVersions": {
                                                                      "description": "The reported versions per API server instance.",
                                                                      "descriptionCN": "据API服务器实例的报告版本。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "apiServerID"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ControllerRevision": {
                                                              "description": "ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
                                                              "descriptionCN": "控制器修订实现了状态数据的不可变快照。客户端负责将包含其内部状态的对象序列化和反序列化。一旦控制器修订成功，就不能被更新。API服务器将验证所有尝试修改 Data 字段的请求失败。然而，控制器修订可能被删除。请注意，由于这两种类型控制器（daemonset 和 statefulset）用于更新和回滚时都使用它，此对象为 beta。然而，在未来的发布中，它可能会受到名称和表示变化的影响，并且客户端不应依赖它的稳定性。这主要为控制器内部使用。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化规范。服务器应该将识别的规范转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "data": {
                                                                      "description": "Data is the serialized representation of the state.",
                                                                      "descriptionCN": "数据是状态的序列化表示。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个字符串值，表示该对象所代表的 REST 资源。服务器可以通过客户端向提交请求的端点推测此值。不能被更新。在 camelCase 编码下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "revision": {
                                                                      "description": "Revision indicates the revision of the state represented by Data.",
                                                                      "descriptionCN": "修订表明由Data表示的状态的修订。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ControllerRevisionList": {
                                                              "description": "ControllerRevisionList is a resource containing a list of ControllerRevision objects.",
                                                              "descriptionCN": "控制器修订列表是一个资源，其中包含ControllerRevision对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的版本化结构。服务器应该将可识别的结构转换为内部最新的值，且可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of ControllerRevisions",
                                                                      "descriptionCN": "Items 是 ControllerRevisions 列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.ControllerRevision"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时的端点推测出此值。不能被更新。使用驼峰命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSet": {
                                                              "description": "DaemonSet represents the configuration of a daemon set.",
                                                              "descriptionCN": "Docker Daemon Set表示一个daemon set的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的可变规范。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示该对象所代表的REST资源的一个字符串值。服务器可能根据客户端提交请求时提交的端点来推测这一点。不能被更新。在CamelCase格式下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "The desired behavior of this daemon set. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "这个daemon set所需的特性。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "The current status of this daemon set. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "这个 daemon set 的当前状态。此数据可能在一段时间内过时。由系统生成。只读。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSetCondition": {
                                                              "description": "DaemonSetCondition describes the state of a DaemonSet at a certain point.",
                                                              "descriptionCN": " DaemonSetCondition 描述了一个 daemonset 在某个特定时刻的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次状态转换。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "“人可读取的转播说明”，强调了过渡的信息内容。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "疾病最后阶段的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况，真、假、未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of DaemonSet condition.",
                                                                      "descriptionCN": "类型型守护集合条件。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSetList": {
                                                              "description": "DaemonSetList is a collection of daemon sets.",
                                                              "descriptionCN": "daemonSetList是一个包含daemon set的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化结构。服务器应该将识别的架构转换为内部最近的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "A list of daemon sets.",
                                                                      "descriptionCN": "一个列表的 daemon set。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSet"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示此对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时使用的端点推断这一点。无法被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSetSpec": {
                                                              "description": "DaemonSetSpec is the specification of a daemon set.",
                                                              "descriptionCN": "守护组配置规范是守护组的规格说明。",
                                                              "properties": {
                                                                  "minReadySeconds": {
                                                                      "description": "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).",
                                                                      "descriptionCN": "创建的新 DaemonSet pod 的最小等待时间，当其中任何容器发生崩溃时，该 Pod 应能准备好而不被标记为不可用。默认值为 0（Pod 将在准备就绪后立即被认为是可用的）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "revisionHistoryLimit": {
                                                                      "description": "The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
                                                                      "descriptionCN": "保留的历史数量，以便回滚。这是一个指针，用于区分显式零和未指定的零。默认为10。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "descriptionCN": "标签查询对管理由daemon set运行的Pod。必须匹配以进行控制。它必须与Pod模板的标签匹配。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "template": {
                                                                      "description": "An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "descriptionCN": "这个描述了一个将被创建的Pod的描述对象。DaemonSet将会在与模板节点选择器匹配的每台Node上创建一个副本。允许的template.specrestartPolicy值是\"Always\"。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  },
                                                                  "updateStrategy": {
                                                                      "description": "An update strategy to replace existing DaemonSet pods with new pods.",
                                                                      "descriptionCN": "一种更新策略是，将现有的 DaemonSet 秘钥名替换为新的 Pod 名称。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSetStatus": {
                                                              "description": "DaemonSetStatus represents the current status of a daemon set.",
                                                              "descriptionCN": "daemonSetStatus表示当前 daemon set 的状态。",
                                                              "properties": {
                                                                  "collisionCount": {
                                                                      "description": "Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
                                                                      "descriptionCN": "对于 DaemonSet，当它需要为最新ControllerRevision创建名称时，这个字段会作为一个冲突避免机制来计算碰撞数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a DaemonSet's current state.",
                                                                      "descriptionCN": "代表 daemonset 当前状态的最新可用观测。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "currentNumberScheduled": {
                                                                      "description": "The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "descriptionCN": "至少有一个运行的守护进程（daemon pod）的节点被认为是运行守护进程的节点。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "desiredNumberScheduled": {
                                                                      "description": "The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "descriptionCN": "运行守护进程的节点数量（包括正确运行守护进程的节点）。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "numberAvailable": {
                                                                      "description": "The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)",
                                                                      "descriptionCN": "应该运行的守护进程节点数量，以及至少有一个守护进程节点正在运行和可用（至少指定.spec.minReadySeconds秒）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "numberMisscheduled": {
                                                                      "description": "The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "descriptionCN": "正在运行daemon pod但不应该运行daemon pod的节点数量。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "numberReady": {
                                                                      "description": "numberReady is the number of nodes that should be running the daemon pod and have one or more of the daemon pod running with a Ready Condition.",
                                                                      "descriptionCN": "\"numberReady\" 是应该运行 daemon pod 的节点数量，这些节点应该有一个或多个正在运行的 daemon pod，并且处于 \"Ready\" 状态。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "numberUnavailable": {
                                                                      "description": "The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)",
                                                                      "descriptionCN": "运行daemon pod的节点数量不应为0，且没有运行的daemon pod和可用的（至少在spec.minReadySeconds之前准备好）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "The most recent generation observed by the daemon set controller.",
                                                                      "descriptionCN": "由守护进程查看的最近一代。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "updatedNumberScheduled": {
                                                                      "description": "The total number of nodes that are running updated daemon pod",
                                                                      "descriptionCN": "运行状态更新daemon pod的总节点数",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DaemonSetUpdateStrategy": {
                                                              "description": "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.",
                                                              "descriptionCN": "守护集更新策略是一个结构，用于控制守护集的更新策略。",
                                                              "properties": {
                                                                  "rollingUpdate": {
                                                                      "description": "Rolling update config params. Present only if type = \"RollingUpdate\".",
                                                                      "descriptionCN": "滚动更新配置参数。只有当类型为\"RollingUpdate\"时才显示。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of daemon set update. Can be \"RollingUpdate\" or \"OnDelete\". Default is RollingUpdate.",
                                                                      "descriptionCN": " daemon set update 的类型是：滚动更新。它可能被标记为 \"RollingUpdate\" 或者 \"OnDelete\"。默认情况下，它是滚动更新的。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.Deployment": {
                                                              "description": "Deployment enables declarative updates for Pods and ReplicaSets.",
                                                              "descriptionCN": "部署使Pod和ReplicaSet的更新具有声明性。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将可识别的结构转换为内部最新的值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示该对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时提供的端点来推断此属性。不能更新。在CamelCase中描述更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the Deployment.",
                                                                      "descriptionCN": "所需行为的部署规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Most recently observed status of the Deployment.",
                                                                      "descriptionCN": "最近观察到的部署状态。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DeploymentCondition": {
                                                              "description": "DeploymentCondition describes the state of a deployment at a certain point.",
                                                              "descriptionCN": "部署条件描述了部署在某一特定时刻的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次的状态发生了转变。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastUpdateTime": {
                                                                      "description": "The last time this condition was updated.",
                                                                      "descriptionCN": "最后一次更新此状况。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "人类可读的消息表明过渡的细节。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "最后状态的转变原因",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况，真/假/未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of deployment condition.",
                                                                      "descriptionCN": "部署条件类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DeploymentList": {
                                                              "description": "DeploymentList is a list of Deployments.",
                                                              "descriptionCN": "部署列表是一个列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的可序列化的模型版本。服务器应将已识别的模型转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of Deployments.",
                                                                      "descriptionCN": "物品是部署列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.Deployment"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示这个对象所代表的 REST 资源的字符串值。服务器可能通过客户端向提交请求的端点推断出此值。无法更新。 CamelCase 格式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata.",
                                                                      "descriptionCN": "标准元数据列表。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DeploymentSpec": {
                                                              "description": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
                                                              "descriptionCN": "部署规范是期望行为的部署规范。",
                                                              "properties": {
                                                                  "minReadySeconds": {
                                                                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                                                                      "descriptionCN": "创建新Pod时，如果没有容器崩溃，则需要至少0秒，以使其被认为可用。默认为0（Pod一旦准备好就会被认为是可用的）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "paused": {
                                                                      "description": "Indicates that the deployment is paused.",
                                                                      "descriptionCN": "表示部署已暂停。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "progressDeadlineSeconds": {
                                                                      "description": "The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
                                                                      "descriptionCN": "部署在被确认为失败之前进展的最大时间。部署控制器将继续处理失败的部署，并在出现ProgressDeadlineExceeded原因时，在部署状态中显示这一情况。请注意，部署在暂停期间不会进行进度估计。默认值为600秒。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
                                                                      "descriptionCN": "期望的Pod数量。这是区分显式零和未指定的一个指针。默认值为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "revisionHistoryLimit": {
                                                                      "description": "The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
                                                                      "descriptionCN": "保留的旧仿冒品数量，允许回滚。这是一条指针，用于区分显式为0和未指定的零。默认值为10。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.",
                                                                      "descriptionCN": "选择Pod标签的标签 selector。在此部署中被选中的现有ReplicaSets将受到此部署的影响。它必须匹配Pod模板的标签。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "strategy": {
                                                                      "description": "The deployment strategy to use to replace existing pods with new ones.",
                                                                      "descriptionCN": "替换现有Pod的部署策略。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStrategy",
                                                                      "x-kubernetes-patch-strategy": "retainKeys"
                                                                  },
                                                                  "template": {
                                                                      "description": "Template describes the pods that will be created. The only allowed template.spec.restartPolicy value is \"Always\".",
                                                                      "descriptionCN": "模板描述了将创建的Pods。仅允许的template.specrestartPolicy值为\"Always\"。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DeploymentStatus": {
                                                              "description": "DeploymentStatus is the most recently observed status of the Deployment.",
                                                              "descriptionCN": "部署状态是最新的观察到的部署状态。",
                                                              "properties": {
                                                                  "availableReplicas": {
                                                                      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.",
                                                                      "descriptionCN": "此部署中可选的Pod数量（至少minReadySeconds）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "collisionCount": {
                                                                      "description": "Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.",
                                                                      "descriptionCN": "部署中冲突的哈希的数量。部署控制器使用这个字段作为创建新ReplicaSet名称时的一个碰撞避免机制。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a deployment's current state.",
                                                                      "descriptionCN": "代表部署当前状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "The generation observed by the deployment controller.",
                                                                      "descriptionCN": "部署控制器观察到的世代。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "readyReplicas": {
                                                                      "description": "readyReplicas is the number of pods targeted by this Deployment with a Ready Condition.",
                                                                      "descriptionCN": "目标Pod的数量，即Ready Condition下的Pod数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
                                                                      "descriptionCN": "这个部署的目标非终止Pod的数量（它们的标签匹配selector）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "unavailableReplicas": {
                                                                      "description": "Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.",
                                                                      "descriptionCN": "这个部署的目标总共有可用的Pod数量。这是在部署达到100%可用容量之前，仍需要的Pod总数。它们可能是运行但尚未可用的Pod，或者是仍然未创建的Pod。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "updatedReplicas": {
                                                                      "description": "Total number of non-terminated pods targeted by this deployment that have the desired template spec.",
                                                                      "descriptionCN": "此部署的目标非终止Pod数量，其中具有所需模板规格的Pod。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.DeploymentStrategy": {
                                                              "description": "DeploymentStrategy describes how to replace existing pods with new ones.",
                                                              "descriptionCN": "部署策略描述了如何替换现有Pods。",
                                                              "properties": {
                                                                  "rollingUpdate": {
                                                                      "description": "Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.",
                                                                      "descriptionCN": "滚动更新配置参数。只有当DeploymentStrategyType为RollingUpdate时，才显示。\n\n翻译：rolling update configuration params. Present only if DeploymentStrategyType = RollingUpdate.",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of deployment. Can be \"Recreate\" or \"RollingUpdate\". Default is RollingUpdate.",
                                                                      "descriptionCN": "部署类型。可以是\"Recreate\"或\"RollingUpdate\"。默认为RollingUpdate。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ReplicaSet": {
                                                              "description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
                                                              "descriptionCN": "复制集确保在任何给定的时间，指定数量的pod副本运行。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化的格式。服务器应该将可识别的格式转换为内部最近的值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示该对象所代表的REST资源的一维字符串。服务器可以根据客户端提交请求时提交的端点推测这个值。不能被更新。CamelCase形式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "如果副本集的标签为空，它们将默认与管理该副本集的Pod相同。标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the specification of the desired behavior of the ReplicaSet. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "\"Spec\"定义了期望ReplicaSet的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is the most recently observed status of the ReplicaSet. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是最新的观察到的ReplicaSet的状态。这个数据可能在一段时间后过时。由系统提供。只读。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ReplicaSetCondition": {
                                                              "description": "ReplicaSetCondition describes the state of a replica set at a certain point.",
                                                              "descriptionCN": "复制集条件描述了在某个点，一个复制集的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "The last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后一次状态转换的情况。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "人可读的表示过渡细节的信息文字。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "状况最后的转变原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态情况，真、假、未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of replica set condition.",
                                                                      "descriptionCN": "复制集条件类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ReplicaSetList": {
                                                              "description": "ReplicaSetList is a collection of ReplicaSets.",
                                                              "descriptionCN": "复制集列表是一个集合的副本。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将可识别的架构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
                                                                      "descriptionCN": "副本集列表。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSet"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示此对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时提供的端点推断出这个值。不能被更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ReplicaSetSpec": {
                                                              "description": "ReplicaSetSpec is the specification of a ReplicaSet.",
                                                              "descriptionCN": "复制集Spec 是一个复制集的规范。",
                                                              "properties": {
                                                                  "minReadySeconds": {
                                                                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                                                                      "descriptionCN": "新创建的Pod应该在没有任何容器崩溃的情况下至少等待多少秒才能被认为是可用的？默认设置为0（Pod一旦准备好就会被认为是可用的）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
                                                                      "descriptionCN": "副本数量是所需副本的数量。这是一把区分明确零和不明确的指针。默认为1。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "Selector is a label query over pods that should match the replica count. Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "descriptionCN": "Selector 是关于 pods 的标签查询，目标是匹配副本数量。为了被这个复制集控制，必须满足的标签键和值之间的关系。必须与 pod 装饰器中的标签相同。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "template": {
                                                                      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "descriptionCN": "模板是用于描述如果发现不足的副本，则创建的对象。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.ReplicaSetStatus": {
                                                              "description": "ReplicaSetStatus represents the current status of a ReplicaSet.",
                                                              "descriptionCN": "复制集状态代表了一个复制集的当前状态。",
                                                              "properties": {
                                                                  "availableReplicas": {
                                                                      "description": "The number of available replicas (ready for at least minReadySeconds) for this replica set.",
                                                                      "descriptionCN": "这个复制集可用的副本数（至少minReadySeconds）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a replica set's current state.",
                                                                      "descriptionCN": "代表该复制品组当前状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "fullyLabeledReplicas": {
                                                                      "description": "The number of pods that have labels matching the labels of the pod template of the replicaset.",
                                                                      "descriptionCN": "复制集的pod模板标签匹配的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "ObservedGeneration reflects the generation of the most recently observed ReplicaSet.",
                                                                      "descriptionCN": "观察到的生成反映的是最近观察过的ReplicaSet的生成。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "readyReplicas": {
                                                                      "description": "readyReplicas is the number of pods targeted by this ReplicaSet with a Ready Condition.",
                                                                      "descriptionCN": "这个ReplicaSet的目标Pod数量是具有\"Ready\"条件的副本集中的ReadyReplicas的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Replicas is the most recently observed number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
                                                                      "descriptionCN": "复制是最新的观察到的数量。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.RollingUpdateDaemonSet": {
                                                              "description": "Spec to control the desired behavior of daemon set rolling update.",
                                                              "descriptionCN": "实现daemon set滚动更新所需的控制行为。",
                                                              "properties": {
                                                                  "maxSurge": {
                                                                      "description": "The maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up to a minimum of 1. Default value is 0. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their a new pod created before the old pod is marked as deleted. The update starts by launching new pods on 30% of nodes. Once an updated pod is available (Ready for at least minReadySeconds) the old DaemonSet pod on that node is marked deleted. If the old pod becomes unavailable for any reason (Ready transitions to false, is evicted, or is drained) an updated pod is immediatedly created on that node without considering surge limits. Allowing surge implies the possibility that the resources consumed by the daemonset on any given node can double if the readiness check fails, and so resource intensive daemonsets should take into account that they may cause evictions during disruption.",
                                                                      "descriptionCN": "最大可选的已有可用DaemonSet Pod数量，该Pod在更新期间可以有更新的DaemonSet Pod。值可以是绝对数（如5）或期望运行的Pod的比例（如10%）。如果MaxUnavailable为0，则不能设置为0。绝对数是从比例计算的最大值，且向下取整到最小的1个单位。默认值为0。示例：当此设置为30%，最多只有30% 的节点应该运行daemon pod（即状态.desiredNumberScheduled），在旧pod被标记为删除之前，可以创建一个新的pod。更新开始时，在30%的节点上启动新的 pods。一旦更新的pod可用（至少等待至少minReadySeconds） ， 旧的daemonSet Pod上的该节点将被标记为已删除。 如果旧pod因任何原因变得不可用（ Ready 转向 false，被移除或耗尽） ， 一个更新的pod将在该节点上立即创建，而不考虑冲浪限制。允许冲浪意味着 daemonset 对于任何给定节点的资源消耗可能会加倍，如果 readiness 检查失败，那么资源密集型daemonset 应该考虑到它们可能导致的驱逐。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "maxUnavailable": {
                                                                      "description": "The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0 if MaxSurge is 0 Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
                                                                      "descriptionCN": "更新时最多可以出现的DaemonSet Pod不可用数的最大值。其取值可以为绝对数值（例如：5）或百分比总数量的DaemonSet Pod在开始更新时的数量（例如：10%）。绝对值是由百分比乘以向上取整计算得出的。如果MaxSurge为0，则默认值为1。例如：当将其设置为30%，则在任何时候至少有30%的预期运行状态的 DaemonSetPod（即：status.desiredNumberScheduled）的Pod应被暂停更新。更新首先停止最多30%的这些daemonPod，然后在其位置上启动新的daemonPod。一旦新Pod可用，它就会继续对其他daemonPod进行更新，从而确保在整个更新过程中至少有70%的原始数量的daemonPod始终可用。\n\n|占位符| 定义|\n|---|---|\n|MaxSurge| 更新时最多可以出现的DaemonSet Pod不可用数的最大值。若无此值，将默认为1。|\n|Percentage of Total Number of DaemonSet Pods at the Start of the Update| 在开始更新时总量中 daemonPod 的百分比。例：若MaxSurge为0，则默认为1。|\n|Absolute Number is Calculated from Percentage by Rounding Up| 绝对值是由百分比乘以向上取整计算得出的。|",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.RollingUpdateDeployment": {
                                                              "description": "Spec to control the desired behavior of rolling update.",
                                                              "descriptionCN": "指定控制滚动更新所需的预期行为。",
                                                              "properties": {
                                                                  "maxSurge": {
                                                                      "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
                                                                      "descriptionCN": "最大可配置的Pod数量可以高于期望的数量。值可以是绝对数字（例如5）或目标Pod数量的百分比（例如10%）。如果MaxUnavailable为0，则不能设置为0。绝对数是通过向上取整计算的。默认为25%。示例：当此设置为30%时，更新开始时新复制集可以在立即调整规模的情况下扩大，以确保在更新期间运行的所有旧和新Pod的最大数量不超过期望的Pod数量的130%。一旦老Pod被杀死，新的复制集可以进一步扩展，以确保在任何时间更新期间运行的所有Pod的最大数量不超过期望的Pod数量的130%。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "maxUnavailable": {
                                                                      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
                                                                      "descriptionCN": "更新期间可以使用的Pod数量的最大值。值可以为绝对数字（如5）或百分比欲求数字（如10%）。绝对数是基于百分比向下取整的。如果MaxSurge为0，则默认为25%。示例：当设置为30%时，当滚动更新开始时，旧的ReplicaSet可以直接缩小到所需Pod的70%。一旦新Pod准备就绪，旧的ReplicaSet可以进一步缩放，并随后缩放新的ReplicaSet，以确保在更新期间所有可用的Pod总数至少达到所需Pod的70%。\n\n翻译后的中文：\n\n更新期间可以使用的Pod数量的最大值。值可以为绝对数字（如5）或百分比欲求数字（如10%）。绝对数是基于百分比向下取整的。如果MaxSurge为0，则默认为25%。示例：当设置为30%时，当滚动更新开始时，旧的ReplicaSet可以直接缩小到所需Pod的70%。一旦新Pod准备就绪，旧的ReplicaSet可以进一步缩放，并随后缩放新的ReplicaSet，以确保在更新期间所有可用的Pod总数至少达到所需Pod的70%。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy": {
                                                              "description": "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.",
                                                              "descriptionCN": "滚动更新策略被用来传输RollingUpdateStatefulSetStrategyType类型的参数。",
                                                              "properties": {
                                                                  "maxUnavailable": {
                                                                      "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0. Defaults to 1. This field is alpha-level and is only honored by servers that enable the MaxUnavailableStatefulSet feature. The field applies to all pods in the range 0 to Replicas-1. That means if there is any unavailable pod in the range 0 to Replicas-1, it will be counted towards MaxUnavailable.",
                                                                      "descriptionCN": "更新期间最多可用的Pod数量。值可以是绝对数字（例如：5）或指定比例期望的Pod数量（例如：10%）。绝对数是从比例计算出来的，向上取整。这不能为0。默认设置为1。这个字段属于alpha级别，并只被那些启用MaxUnavailableStatefulSet功能的服务器所认可。该字段适用于范围在0到Replicas-1之间的所有Pod。这意味着如果在范围0到Replicas-1之间有任何不可用的Pod，则将被纳入MaxUnavailable。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "partition": {
                                                                      "description": "Partition indicates the ordinal at which the StatefulSet should be partitioned for updates. During a rolling update, all pods from ordinal Replicas-1 to Partition are updated. All pods from ordinal Partition-1 to 0 remain untouched. This is helpful in being able to do a canary based deployment. The default value is 0.",
                                                                      "descriptionCN": "分区指示状态集应该如何进行更新。在滚动更新期间，从Reproduction Replicas-1到Partition的所有Pod都会被更新。从Partition-1到0的所有Pod都不会受到影响。这有助于实现基线部署。默认值为0。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSet": {
                                                              "description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n  - Network: A single stable DNS and hostname.\n  - Storage: As many VolumeClaims as requested.\n\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity.",
                                                              "descriptionCN": "状态集表示一组具有一致身份的Pod。身份定义为：\n - 网络：一个唯一的稳定DNS和主机名。\n - 存储：根据请求的VolumeClaims数量尽可能多的存储Identity。\n\n状态集保证给定网络身份总是映射到相同存储身份。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别的架构转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示此对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求的端点推测这一点。不能被更新。 camelCase格式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the desired identities of pods in this set.",
                                                                      "descriptionCN": "该集中的Pod期望的ID。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is the current status of Pods in this StatefulSet. This data may be out of date by some window of time.",
                                                                      "descriptionCN": "状态是Pod在这个StatefulSet中的当前状态。这个数据可能在一段时间后过时。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetCondition": {
                                                              "description": "StatefulSetCondition describes the state of a statefulset at a certain point.",
                                                              "descriptionCN": "状态集条件描述了一个状态集中某个时刻的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次的状态转变。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "可读性强的消息，表示过渡的详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "情况最后的转变的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况，真、假、未知。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of statefulset condition.",
                                                                      "descriptionCN": "状态集条件类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetList": {
                                                              "description": "StatefulSetList is a collection of StatefulSets.",
                                                              "descriptionCN": "StatefulSet列表是一组StatefulSet。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示的对象的版本化结构。服务器应该将识别到的规范转换为最新的内部值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of stateful sets.",
                                                                      "descriptionCN": "项目列表为状态集。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSet"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，代表这个对象所代表的 REST 资源。服务器可能通过客户端提交请求时推测此字段的存在性。无法进行更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准列表的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetOrdinals": {
                                                              "description": "StatefulSetOrdinals describes the policy used for replica ordinal assignment in this StatefulSet.",
                                                              "descriptionCN": "状态集有序项描述了这个StatefulSet中副本序号分配的策略。",
                                                              "properties": {
                                                                  "start": {
                                                                      "description": "start is the number representing the first replica's index. It may be used to number replicas from an alternate index (eg: 1-indexed) over the default 0-indexed names, or to orchestrate progressive movement of replicas from one StatefulSet to another. If set, replica indices will be in the range:\n  [.spec.ordinals.start, .spec.ordinals.start + .spec.replicas).\nIf unset, defaults to 0. Replica indices will be in the range:\n  [0, .spec.replicas).",
                                                                      "descriptionCN": "开始号是代表第一个副本的索引号码。它可以用来在默认0索引名的情况下，从异步复制中编号副本（例如：1标识符的复制）。如果设置，则副本的索引将位于以下范围内：\n  [.spec.ordinals.start, .spec.ordinals.start + .spec.replicas)\n如果不设置，则默认为0。副本的索引将位于以下范围内：\n  [0, .spec.replicas)",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy": {
                                                              "description": "StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.",
                                                              "descriptionCN": "\"StatefulSetPersistentVolumeClaimRetentionPolicy\"描述了从\"StatefulSet VolumeClaimTemplates\"创建的PVC的使用策略。",
                                                              "properties": {
                                                                  "whenDeleted": {
                                                                      "description": "WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.",
                                                                      "descriptionCN": "删除时，StatefulSet VolumeClaimTemplates创建的PVC将如何处理被删除的状态fulSet。默认的`Retain`策略不会影响状态fulSet的删除。`Delete`策略会删除这些PVC。",
                                                                      "type": "string"
                                                                  },
                                                                  "whenScaled": {
                                                                      "description": "WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.",
                                                                      "descriptionCN": "当StatefulSet VolumeClaimTemplates创建的PVC在StatefulSet缩小时会发生什么？默认的`Retain`策略不会影响PVC。删除策略会删除任何超过副本计数的Pod关联的PVC。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetSpec": {
                                                              "description": "A StatefulSetSpec is the specification of a StatefulSet.",
                                                              "descriptionCN": "一个StatefulSetSpec是StatefulSet的规格描述。",
                                                              "properties": {
                                                                  "minReadySeconds": {
                                                                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                                                                      "descriptionCN": "创建的Pod至少需要多少秒才能准备好，而不需要其容器崩溃，从而被认为可用？默认值为0（一旦Pod准备就立即被视为可用）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "ordinals": {
                                                                      "description": "ordinals controls the numbering of replica indices in a StatefulSet. The default ordinals behavior assigns a \"0\" index to the first replica and increments the index by one for each additional replica requested. Using the ordinals field requires the StatefulSetStartOrdinal feature gate to be enabled, which is beta.",
                                                                      "descriptionCN": "主键控制在StatefulSet中对复制索引的编号进行排序。默认的行为将第一个副本分配一个\"0\"索引，并为每个额外请求的副本增加索引一。使用ordinals字段需要StatefulSetStartOrdinal特性开关启用，这是beta版本。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetOrdinals"
                                                                  },
                                                                  "persistentVolumeClaimRetentionPolicy": {
                                                                      "description": "persistentVolumeClaimRetentionPolicy describes the lifecycle of persistent volume claims created from volumeClaimTemplates. By default, all persistent volume claims are created as needed and retained until manually deleted. This policy allows the lifecycle to be altered, for example by deleting persistent volume claims when their stateful set is deleted, or when their pod is scaled down. This requires the StatefulSetAutoDeletePVC feature gate to be enabled, which is alpha.  +optional",
                                                                      "descriptionCN": "持久卷 claim 收藏策略描述了创建由 volumeClaimTemplates 创建的持久卷 claim 的生命周期。默认情况下，所有持久卷 claim 都是在需要时创建并保持直到手动删除。此政策允许生命周期被修改，例如当持久卷 claim 的状态集被删除时或当其 pod 被缩容时。这要求 StatefulSetAutoDeletePVC 特性开关启用，这是 alpha 版本。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
                                                                  },
                                                                  "podManagementPolicy": {
                                                                      "description": "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.",
                                                                      "descriptionCN": "Pod管理策略控制如何在初始扩容时创建Pod，当替换节点上的Pod，或在缩容时。默认策略是\"有序准备\"，其中Pod按升序（pod-0，然后pod-1等）创建，并控制器将在每个Pod准备好后继续。缩容时，Pod按相反的顺序删除。另一个替代策略是\"并行\"，它将创建多个Pod以匹配所需的规模，而不等待，缩放后会一次性删除所有Pod。",
                                                                      "type": "string"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
                                                                      "descriptionCN": "副本是给定模板的期望数量的副本。这些是具有相同模板的即时复制，但每个副本也有其一致的身份。如果没有指定，默认为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "revisionHistoryLimit": {
                                                                      "description": "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.",
                                                                      "descriptionCN": "状态集的修订历史限制是该状态集中所有未应用于当前应用的状态集版本的修订。默认值为10。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "descriptionCN": "标签查询selector是在Pod中匹配副本数的标签查询。它必须匹配Pod模板的labels。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "serviceName": {
                                                                      "description": "serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.",
                                                                      "descriptionCN": "服务名是控制此StatefulSet的的服务。这个服务必须在StatefulSet之前存在，且负责set的网络身份。Pods获得遵循模式：pod-specific-string.serviceName.default.svc.cluster.local，其中\"pod-specific-string\"由StatefulSet控制器管理。",
                                                                      "type": "string"
                                                                  },
                                                                  "template": {
                                                                      "description": "template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet. Each pod will be named with the format <statefulsetname>-<podindex>. For example, a pod in a StatefulSet named \"web\" with index number \"3\" would be named \"web-3\". The only allowed template.spec.restartPolicy value is \"Always\".",
                                                                      "descriptionCN": "模板是如果检测到不足以创建副本，则会创建的Pod的对象。每个由StatefulSet编译出的Pod都将执行此Template，但与其他StatefulSet的Pod具有独特的身份。每个Pod将以以下格式命名：<statefulsetname>-<podindex>。例如，名为\"web\"的StatefulSet中，索引号为3的Pod将被命名为“web-3”。仅允许的template.spec.restartPolicy值为\"Always\"。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  },
                                                                  "updateStrategy": {
                                                                      "description": "updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.",
                                                                      "descriptionCN": "更新策略指示StatefulSet更新策略，当对Template进行修订时，将使用该策略来更新Pods。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy"
                                                                  },
                                                                  "volumeClaimTemplates": {
                                                                      "description": "volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
                                                                      "descriptionCN": "volumeClaimTemplates是一个Pod可以引用的索赔列表。StatefulSet控制器负责将网络标识映射到模板中的声称，以确保Pod的身份不变。这个列表中的每个索赔都必须有一个与其名称匹配（通过名字）的卷挂载在模板中的一个容器中。这个列表中的索赔优于模板中的任何卷，具有相同的名称。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetStatus": {
                                                              "description": "StatefulSetStatus represents the current state of a StatefulSet.",
                                                              "descriptionCN": "状态存储集的状态表示一个StatefulSet当前的状態。",
                                                              "properties": {
                                                                  "availableReplicas": {
                                                                      "description": "Total number of available pods (ready for at least minReadySeconds) targeted by this statefulset.",
                                                                      "descriptionCN": "此状态设置中目标Pod的总可用数（至少minReadySeconds）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "collisionCount": {
                                                                      "description": "collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.",
                                                                      "descriptionCN": "冲突计数是StatefulSet的冲突计数。当需要为最新的ControllerRevision创建名称时，StatefulSet控制器使用这个字段作为冲突避免机制。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a statefulset's current state.",
                                                                      "descriptionCN": "代表一个状态集当前状态的最新可用观测。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "currentReplicas": {
                                                                      "description": "currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.",
                                                                      "descriptionCN": "当前副本是StatefulSet控制器根据当前Revision指示创建的Pod的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "currentRevision": {
                                                                      "description": "currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).",
                                                                      "descriptionCN": "当前版本，如果非空，表示生成Pod时使用的StatefulSet的版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.",
                                                                      "descriptionCN": "观察到的生成是对于这个StatefulSet进行最近观察的最新生成。它与StatefulSet的生成相关，该生成在API服务器上通过更新来进行。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "readyReplicas": {
                                                                      "description": "readyReplicas is the number of pods created for this StatefulSet with a Ready Condition.",
                                                                      "descriptionCN": "这个StatefulSet的可读副本数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "replicas is the number of Pods created by the StatefulSet controller.",
                                                                      "descriptionCN": "StatefulSet控制器创建的Pod的数量是replicas。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "updateRevision": {
                                                                      "description": "updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)",
                                                                      "descriptionCN": "更新Set的版本，如果为空，则表示用于生成Pods的StatefulSet的版本号。",
                                                                      "type": "string"
                                                                  },
                                                                  "updatedReplicas": {
                                                                      "description": "updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.",
                                                                      "descriptionCN": "更新的Pod数量是由StatefulSet控制器根据updateRevision指示的状态式集合创建的。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.apps.v1.StatefulSetUpdateStrategy": {
                                                              "description": "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.",
                                                              "descriptionCN": "状态化设置更新策略指示了StatefulSet控制器将使用哪种策略来执行更新。它包括进行指定策略所需的所有额外参数。",
                                                              "properties": {
                                                                  "rollingUpdate": {
                                                                      "description": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.",
                                                                      "descriptionCN": "滚动更新被用来在Type为RollingUpdateStatefulSetStrategyType时交流参数。",
                                                                      "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.",
                                                                      "descriptionCN": "类型表示StatefulSetUpdateStrategy的类型。默认为滚动更新。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.BoundObjectReference": {
                                                              "description": "BoundObjectReference is a reference to an object that a token is bound to.",
                                                              "descriptionCN": "绑定对象引用是用于指向令牌与某个对象的引用。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "API version of the referent.",
                                                                      "descriptionCN": "参考所用的API版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind of the referent. Valid kinds are 'Pod' and 'Secret'.",
                                                                      "descriptionCN": "这个词组的翻译是：主体的类别或种类。有效的类别有'Pod'和'Secret'。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent.",
                                                                      "descriptionCN": "被引用的对象。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID of the referent.",
                                                                      "descriptionCN": "参考客人的ID号。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.SelfSubjectReview": {
                                                              "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
                                                              "descriptionCN": "自我主体审查包含用户的相关信息，这是kube-apiserver关于这个请求的对用户的信息。当使用 impersonation 时，用户将收到被冒充用户的信息。如果使用 impersonation 或 request header authentication，则任何额外的键都将忽略并返回为小写。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是表示这个对象的可变模型的版本。服务器应该将已识别的模式转换为最新的内部值，如果它们不接受未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端向它提交请求时提供的端点推断出这一点。不能被更新。 camelCase格式更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server with the user attributes.",
                                                                      "descriptionCN": "状态是由服务器填充的，其中包含了用户属性。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.SelfSubjectReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.SelfSubjectReviewStatus": {
                                                              "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
                                                              "descriptionCN": "\"自主体验状态由kube-apiserver填充，并返回给用户。\"",
                                                              "properties": {
                                                                  "userInfo": {
                                                                      "description": "User attributes of the user making this request.",
                                                                      "descriptionCN": "用户请求的用户属性。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenRequest": {
                                                              "description": "TokenRequest requests a token for a given service account.",
                                                              "descriptionCN": "请求给定服务账户的令牌。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化的格式。服务器应该将识别到的格式转换为内部最新的值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时提供的端点推断出这个值。不能被更新。在CamelCase命名空间中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated",
                                                                      "descriptionCN": "具体规定包含了评估请求的详细信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates whether the token can be authenticated.",
                                                                      "descriptionCN": "状态由服务器填充，表示令牌是否可以认证。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenRequestSpec": {
                                                              "description": "TokenRequestSpec contains client provided parameters of a token request.",
                                                              "descriptionCN": "令牌请求规范包含客户端提供的令牌请求参数。",
                                                              "properties": {
                                                                  "audiences": {
                                                                      "description": "Audiences are the intendend audiences of the token. A recipient of a token must identify themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.",
                                                                      "descriptionCN": "观众是令牌的最终目标用户。接受者必须在令牌列表中的接收者的识别符中进行身份确认，否则应拒绝令牌。为多个受众发行的令牌可以用于与任何列出的受众之一进行身份认证，但暗示了对目标受众高度信任的水平。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "boundObjectRef": {
                                                                      "description": "BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server's TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.",
                                                                      "descriptionCN": "boundObjectRef 是指向对象的引用，该对象将成为token绑定的对象。只有当绑定了该对象时，这个令牌才会有效。 注意：API服务器的TokenReview端点将验证BoundObjectRef，但其他用户可能不会。 如果你希望提示撤销，请保持ExpirationSeconds小。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.BoundObjectReference"
                                                                  },
                                                                  "expirationSeconds": {
                                                                      "description": "ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the 'expiration' field in a response.",
                                                                      "descriptionCN": "有效期秒数是请求的有效期限。令牌发放者可能会返回一个带有不同有效期限的令牌，因此客户端需要检查响应中的“有效期”字段。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenRequestStatus": {
                                                              "description": "TokenRequestStatus is the result of a token request.",
                                                              "descriptionCN": "令牌请求状态是令牌请求的结果。",
                                                              "properties": {
                                                                  "expirationTimestamp": {
                                                                      "description": "ExpirationTimestamp is the time of expiration of the returned token.",
                                                                      "descriptionCN": "到期时间是返回令牌的有效期。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "token": {
                                                                      "description": "Token is the opaque bearer token.",
                                                                      "descriptionCN": "令牌是一种透明的携带者令牌。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenReview": {
                                                              "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
                                                              "descriptionCN": "TokenReview 力图验证令牌，以便与已知的用户进行身份认证。注意： TokenReview 请求可能会被 kube-apiserver 的 webhook token authenticator 插件缓存。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这种表示对象的形式的版本化的结构定义。服务器应该将识别的结构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时所使用的端点推测出这个值。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated",
                                                                      "descriptionCN": "“筛选”一词在英文中的意思是“evaluate”，而“要求被评估”可以翻译为“request being evaluated”。因此，整个句子的中文翻译是：“筛选器提供有关请求被评估的信息。”",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates whether the request can be authenticated.",
                                                                      "descriptionCN": "状态由服务器填充，表明请求是否可以验证。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenReviewSpec": {
                                                              "description": "TokenReviewSpec is a description of the token authentication request.",
                                                              "descriptionCN": "TokenReviewSpec 是关于令牌认证请求的描述。",
                                                              "properties": {
                                                                  "audiences": {
                                                                      "description": "Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.",
                                                                      "descriptionCN": "观众列表是资源服务器在令牌中提供的标识符。受众感知的令牌认证器将验证令牌是为这个列表中的至少一个观众精心设计的。如果没有提供任何观众，将会默认为Kubernetes API服务器的用户。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "token": {
                                                                      "description": "Token is the opaque bearer token.",
                                                                      "descriptionCN": "令牌是一种隐形的携带者令牌。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.TokenReviewStatus": {
                                                              "description": "TokenReviewStatus is the result of the token authentication request.",
                                                              "descriptionCN": "TokenReviewStatus 是 token 身份验证请求的结果。",
                                                              "properties": {
                                                                  "audiences": {
                                                                      "description": "Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is \"true\", the token is valid against the audience of the Kubernetes API server.",
                                                                      "descriptionCN": "用户是通过认证器选择的用于兼容 TokenReview 和 token 的真实识别器。一个标识符是在 TokenReviewSpec 广播者和令牌的观众之间的任何标识符。TokenReview API 客户端在设置 spec.audiences 字段时，应确保在 status.audiences 字段中返回与身份确认状态一致的适配的标识符，以确保 TokenReview 服务器具有观众意识。如果 TokenReview 返回未包含 status.authenticated 是 \"true\" 的 status.audience 字段，则该令牌适用于 Kubernetes API 服务器的听众群体。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "authenticated": {
                                                                      "description": "Authenticated indicates that the token was associated with a known user.",
                                                                      "descriptionCN": "\"认证\"表明该令牌与已知用户关联。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "error": {
                                                                      "description": "Error indicates that the token couldn't be checked",
                                                                      "descriptionCN": "错误表明，令牌无法被检查。",
                                                                      "type": "string"
                                                                  },
                                                                  "user": {
                                                                      "description": "User is the UserInfo associated with the provided token.",
                                                                      "descriptionCN": "用户是提供的令牌关联的UserInfo。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1.UserInfo": {
                                                              "description": "UserInfo holds the information about the user needed to implement the user.Info interface.",
                                                              "descriptionCN": "信息管理器保存实现用户.info界面所需的用户信息。",
                                                              "properties": {
                                                                  "extra": {
                                                                      "description": "Any additional information provided by the authenticator.",
                                                                      "descriptionCN": "请提供真实认证人的额外信息。",
                                                                      "type": "object"
                                                                  },
                                                                  "groups": {
                                                                      "description": "The names of groups this user is a part of.",
                                                                      "descriptionCN": "这个用户所在的组别名称。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "uid": {
                                                                      "description": "A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.",
                                                                      "descriptionCN": "一个独特标识用户的时间戳。如果删除此用户并添加同名的新用户，他们将具有不同的UID。",
                                                                      "type": "string"
                                                                  },
                                                                  "username": {
                                                                      "description": "The name that uniquely identifies this user among all active users.",
                                                                      "descriptionCN": "这个用户的所有活跃用户的唯一标识名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1alpha1.SelfSubjectReview": {
                                                              "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
                                                              "descriptionCN": "自我主体审查包含了用户信息，这是kube-apiserver关于进行此请求的用户的信息。使用 impersonation 时，用户将收到被 impersonated 用户的信息。如果使用 impersonation 或 request header authentication，则会忽略额外的键，并将其返回为小写。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化结构。服务器应该将识别的 schema 转换为最新的内部值，并可能拒绝不被识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一种表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时所使用的端点推断出此。无法更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server with the user attributes.",
                                                                      "descriptionCN": "状态是由服务器根据用户属性填充的。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1alpha1.SelfSubjectReviewStatus": {
                                                              "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
                                                              "descriptionCN": "自我评估状态由kube-apiserver填充，并发送回用户。",
                                                              "properties": {
                                                                  "userInfo": {
                                                                      "description": "User attributes of the user making this request.",
                                                                      "descriptionCN": "请求用户属性的用户。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1beta1.SelfSubjectReview": {
                                                              "description": "SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase.",
                                                              "descriptionCN": "自我主体审查包含用户信息，这个请求者使用的kube-apiserver知道关于这个用户的信息。使用模拟时，用户会收到被模拟的用户的个人信息。如果使用 impersonation 或请求头认证，任何额外的键都将忽略并返回为小写。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此表示的对象的可变的架构。服务器应该将识别的架构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端向其提交请求时提交的 endpoint 来推测这个值。不能被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server with the user attributes.",
                                                                      "descriptionCN": "状态由服务器根据用户属性填充。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authentication.v1beta1.SelfSubjectReviewStatus": {
                                                              "description": "SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user.",
                                                              "descriptionCN": "自我监控状态由kube-apiserver填充并返回给用户。",
                                                              "properties": {
                                                                  "userInfo": {
                                                                      "description": "User attributes of the user making this request.",
                                                                      "descriptionCN": "请求用户属性。",
                                                                      "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.LocalSubjectAccessReview": {
                                                              "description": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
                                                              "descriptionCN": "本地SubjectAccessReview检查用户或组是否能在给定的命名空间中执行动作。拥有只读资源使得更容易授予包含权限检查的命名空间只读政策。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化结构。服务器应该将识别到的规范转换为内部值的最新，如果无法识别，则可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示这个对象所代表的 REST 资源的一种字符串值。服务器可能从客户端提交请求时推断出此对象。无法更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated.  spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
                                                                      "descriptionCN": "\"spec\" 代表系统配置信息，它包含了评估请求所需的信息。 spec 名称必须等于您发起请求时使用的名称。 如果为空，则默认设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
                                                                      "descriptionCN": "状态由服务器填写，表示请求是否被允许。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.NonResourceAttributes": {
                                                              "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
                                                              "descriptionCN": "非资源属性包括提供给Authorizer接口的非资源请求的授权属性。",
                                                              "properties": {
                                                                  "path": {
                                                                      "description": "Path is the URL path of the request",
                                                                      "descriptionCN": "路径是请求的URL路径",
                                                                      "type": "string"
                                                                  },
                                                                  "verb": {
                                                                      "description": "Verb is the standard HTTP verb",
                                                                      "descriptionCN": "行为是标准的HTTP动词",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.NonResourceRule": {
                                                              "description": "NonResourceRule holds information that describes a rule for the non-resource",
                                                              "descriptionCN": "\"NonResourceRule\" 是一个描述非资源规则的信息项。",
                                                              "properties": {
                                                                  "nonResourceURLs": {
                                                                      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all.",
                                                                      "descriptionCN": "非资源URLs 是一组部分URL，用户应有权访问。 *s是允许的，但仅作为路径中的最后一步。 \"*\"表示所有。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "verbs": {
                                                                      "description": "Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all.",
                                                                      "descriptionCN": "verb 是 Kubernetes 非资源 API 的一系列列表，例如：get、post、put、delete、patch、head、options。 \"*\" 意味着全部。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.ResourceAttributes": {
                                                              "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
                                                              "descriptionCN": "资源属性包括 Authorizer 接口上的可访问的授权属性。",
                                                              "properties": {
                                                                  "group": {
                                                                      "description": "Group is the API Group of the Resource.  \"*\" means all.",
                                                                      "descriptionCN": "这是一个资源API的组。 \"*\" 表示所有的。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
                                                                      "descriptionCN": "名称是用于获取或删除的资源的名称。\"\"（空）意味着全部。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces \"\" (empty) is defaulted for LocalSubjectAccessReviews \"\" (empty) is empty for cluster-scoped resources \"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
                                                                      "descriptionCN": "命名空间是请求动作的命名空间。目前，没有区分无namespace和所有namespace（空）的差异对于LocalSubjectAccessReviews（空）来说，对于cluster-scoped resources（空）意味着“全部”。对于SubjectAccessReview或SelfSubjectAccessReview中的namespace scoped resources，这意味着所有的namespace scoped resources。",
                                                                      "type": "string"
                                                                  },
                                                                  "resource": {
                                                                      "description": "Resource is one of the existing resource types.  \"*\" means all.",
                                                                      "descriptionCN": "资源是一种现有的资源类型。 \"*\" 表示全部。",
                                                                      "type": "string"
                                                                  },
                                                                  "subresource": {
                                                                      "description": "Subresource is one of the existing resource types.  \"\" means none.",
                                                                      "descriptionCN": "子资源是现有的资源类型之一。 \"\" 意味着没有。",
                                                                      "type": "string"
                                                                  },
                                                                  "verb": {
                                                                      "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
                                                                      "descriptionCN": "verbs是kubernetes资源API的Verb，例如：get、list、watch、create、update、delete、proxy。*代表所有。",
                                                                      "type": "string"
                                                                  },
                                                                  "version": {
                                                                      "description": "Version is the API Version of the Resource.  \"*\" means all.",
                                                                      "descriptionCN": "版本是资源的API版本。\"*\"表示所有。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.ResourceRule": {
                                                              "description": "ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
                                                              "descriptionCN": "资源规则是一份列出主题可以对资源进行的行为列表。该列表的排序不重要，可能包含重复项，也可能不完整。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all.",
                                                                      "descriptionCN": "APIGroup 是包含资源的API组的名字。如果指定了多个API组，针对任何在任何API组中列举的资源进行的操作都将被允许。* 表示全部。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "resourceNames": {
                                                                      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all.",
                                                                      "descriptionCN": "资源名称是一个可选的白名单，该规则适用于其中的名称。空集合表示允许一切。 \"*\" 表示全部。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups.\n \"*/foo\" represents the subresource 'foo' for all resources in the specified apiGroups.",
                                                                      "descriptionCN": "资源是一个规则适用的列表。 \"*\" 表示在指定的 apiGroups 中的所有资源。\"/foo\" 代表适用于所有资源的子资源 'foo'。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "verbs": {
                                                                      "description": "Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
                                                                      "descriptionCN": "verb 是 kubernetes 资源 API 动态资源的列表，例如：get、list、watch、create、update、delete、proxy。\"*\" 表示所有。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SelfSubjectAccessReview": {
                                                              "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action",
                                                              "descriptionCN": "自我权限审查检查当前用户是否能够执行动作。若未填写spec.namespace，则表示在所有命名空间中。Self是一个特殊情况，因为用户应始终能够检查他们是否可以执行操作。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这个表示对象的版本化的模型的标准化定义。服务器应该将识别的模式转换为内部值的最新版本，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型为表示该对象所代表的REST资源的字符串值。服务器可以从客户端提交请求时推测此值。不可更新。CamelCase形式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated.  user and groups must be empty",
                                                                      "descriptionCN": "\"标准包含关于评估请求的信息。用户和组必须为空\"",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
                                                                      "descriptionCN": "状态由服务器填写，表示请求是否被允许。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec": {
                                                              "description": "SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
                                                              "descriptionCN": "\"自我主体访问审查规范\"是一个关于访问请求的描述。必须设置其中一种资源授权属性和非资源授权属性中的一个。",
                                                              "properties": {
                                                                  "nonResourceAttributes": {
                                                                      "description": "NonResourceAttributes describes information for a non-resource access request",
                                                                      "descriptionCN": "非资源访问请求描述非资源访问请求的信息",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes"
                                                                  },
                                                                  "resourceAttributes": {
                                                                      "description": "ResourceAuthorizationAttributes describes information for a resource access request",
                                                                      "descriptionCN": "资源授权属性描述了一个资源访问请求所需的信息",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SelfSubjectRulesReview": {
                                                              "description": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
                                                              "descriptionCN": "权限规则审查列出当前用户在一个命名空间内可以执行的每项操作。返回的动作可能因服务器的授权模式而异，评估期间可能出现错误。权限规则审查应该由UI用于显示/隐藏动作，或者让用户提供关于其权限的原因。它不应该被外部系统使用来驱动授权决定，因为这引发了混淆副手、缓存生命周期/撤销和正确性问题。SubjectAccessReview和LocalAccessReview是将授权决策推迟到API服务器的方法。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是定义此对象表示形式的版本化规范。服务器应该将可识别的规范转换为内部的最新值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推测出这一点。不能被更新。使用CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated.",
                                                                      "descriptionCN": "特殊任务提供评估请求的信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates the set of actions a user can perform.",
                                                                      "descriptionCN": "状态由服务器填充，表示用户可以执行的一系列操作。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectRulesReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec": {
                                                              "description": "SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.",
                                                              "descriptionCN": "自我主体规则审查规范定义了自我主体规则审查的规范。",
                                                              "properties": {
                                                                  "namespace": {
                                                                      "description": "Namespace to evaluate rules for. Required.",
                                                                      "descriptionCN": "评价规则的命名空间。必需。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SubjectAccessReview": {
                                                              "description": "SubjectAccessReview checks whether or not a user or group can perform an action.",
                                                              "descriptionCN": "主题访问审查检查用户或组是否可以执行行动。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化结构。服务器应该将识别到的结构转换为内部最新值，且可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一个表示该对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求的端点推测此值。不能被更新。CamelCase命名方式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec holds information about the request being evaluated",
                                                                      "descriptionCN": "请求评估的信息",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is filled in by the server and indicates whether the request is allowed or not",
                                                                      "descriptionCN": "状态是由服务器填充的，表示请求是否被允许。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SubjectAccessReviewSpec": {
                                                              "description": "SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
                                                              "descriptionCN": "主题访问审查规范描述了访问请求。必须设置唯一的一个ResourceAuthorizationAttributes和NonResourceAuthorizationAttributes",
                                                              "properties": {
                                                                  "extra": {
                                                                      "description": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
                                                                      "descriptionCN": "额外对应于authenticator的user.Info.GetExtra()方法。由于这个是被授权者传入这里的，所以需要在这里进行反射。",
                                                                      "type": "object"
                                                                  },
                                                                  "groups": {
                                                                      "description": "Groups is the groups you're testing for.",
                                                                      "descriptionCN": "在测试中查找的群体。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "nonResourceAttributes": {
                                                                      "description": "NonResourceAttributes describes information for a non-resource access request",
                                                                      "descriptionCN": "非资源属性描述了对于非资源访问请求的信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes"
                                                                  },
                                                                  "resourceAttributes": {
                                                                      "description": "ResourceAuthorizationAttributes describes information for a resource access request",
                                                                      "descriptionCN": "资源访问请求的授权属性描述信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID information about the requesting user.",
                                                                      "descriptionCN": "请求用户ID信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "user": {
                                                                      "description": "User is the user you're testing for. If you specify \"User\" but not \"Groups\", then is it interpreted as \"What if User were not a member of any groups",
                                                                      "descriptionCN": "用户是您正在测试的目标。如果您只指定“User”而不指定“Groups”，那么它会理解为“如果User不是任何组的成员，将会发生什么？”",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SubjectAccessReviewStatus": {
                                                              "description": "SubjectAccessReviewStatus",
                                                              "descriptionCN": "主题访问审查状态",
                                                              "properties": {
                                                                  "allowed": {
                                                                      "description": "Allowed is required. True if the action would be allowed, false otherwise.",
                                                                      "descriptionCN": "\"允许的才是必需的。如果该行动是被允许的，那么它就是真实的；否则，它就是虚假的。\"",
                                                                      "type": "boolean"
                                                                  },
                                                                  "denied": {
                                                                      "description": "Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.",
                                                                      "descriptionCN": "被拒绝是可选的。如果该行为将被拒绝，那么该行为为真；否则为假。如果两者都为假，并且被拒绝也为假，则授权器对是否允许该行动没有意见。如果被拒绝不真实，则如果允许为真，则未被授权。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "evaluationError": {
                                                                      "description": "EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.",
                                                                      "descriptionCN": "权限错误是一个表示在授权检查过程中出现的错误的信息。尽管有可能出现错误，仍然可能继续确定访问状态，即使存在这样的错误。\n\nRBAC（角色基础访问控制）可以缺失一个角色，但仍然有足够的角色存在并绑定到请求的考虑中。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "Reason is optional.  It indicates why a request was allowed or denied.",
                                                                      "descriptionCN": "原因可选。它表示为什么请求被允许或拒绝。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.authorization.v1.SubjectRulesReviewStatus": {
                                                              "description": "SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.",
                                                              "descriptionCN": "主题规则审查状态包含检查结果。这可能取决于服务器配置的作者izers设置以及在评估过程中遇到的任何错误。由于授权规则是加法的，即使一个规则出现在列表中，也可以认为Subject有那个权限，即使该列表是不完整的。",
                                                              "properties": {
                                                                  "evaluationError": {
                                                                      "description": "EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.",
                                                                      "descriptionCN": "评估错误可以与规则同时出现。这表明在规则评估期间发生了错误，例如不支持规则评估的授权器，以及资源规则和/或非资源规则可能不完整。",
                                                                      "type": "string"
                                                                  },
                                                                  "incomplete": {
                                                                      "description": "Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.",
                                                                      "descriptionCN": "这是在调用这个方法时返回的规则是不完整的。这种情况最常见，当一个授权器，如外部授权器，不支持规则评估时就会出现。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "nonResourceRules": {
                                                                      "description": "NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
                                                                      "descriptionCN": "非资源规则是subject可以对non-resources执行的行动列表。列表的排序不重要，可能包含重复项，也可能是不完备的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceRule"
                                                                      }
                                                                  },
                                                                  "resourceRules": {
                                                                      "description": "ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.",
                                                                      "descriptionCN": "资源规则是Subject被允许执行的资源操作列表。列表排序无关紧要，可能包含重复项，并且可能存在不完整的情况。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceRule"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.CrossVersionObjectReference": {
                                                              "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
                                                              "descriptionCN": "跨版本对象引用包含足够的信息，让你能够识别所引用的资源。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "apiVersion is the API version of the referent",
                                                                      "descriptionCN": "API版本是指被引用的对象的API版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是指所代表的对象。更多信息可以在https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds中找到。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "名字是指代的实体；更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler": {
                                                              "description": "configuration of a horizontal pod autoscaler.",
                                                              "descriptionCN": "水平伸缩器的配置",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将识别的结构转换为最新的内部值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求的端点推断出此对象。不能被更新。使用 CamelCase 进行命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec defines the behaviour of autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
                                                                      "descriptionCN": "该文字被翻译为中文如下：spec定义了 autoscaler的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the current information about the autoscaler.",
                                                                      "descriptionCN": "状态是当前的 autoscaler 的信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList": {
                                                              "description": "list of horizontal pod autoscaler objects.",
                                                              "descriptionCN": "水平Pod Autoscaler对象列表",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化格式。服务器应该将识别的规范转换为内部最新的值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of horizontal pod autoscaler objects.",
                                                                      "descriptionCN": "项目列表是水平伸缩自动缩放器对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端向其提交请求时提供的端点推断出该字段。不能被更新。在CamelCase格式下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata.",
                                                                      "descriptionCN": "标准列表元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec": {
                                                              "description": "specification of a horizontal pod autoscaler.",
                                                              "descriptionCN": "水平伸缩容器规格。",
                                                              "properties": {
                                                                  "maxReplicas": {
                                                                      "description": "maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.",
                                                                      "descriptionCN": "最大replicas是Autoscaler可以设置的Pod数量上限；不能小于MinReplicas。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "minReplicas": {
                                                                      "description": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
                                                                      "descriptionCN": "最小副本数是Autoscaler可以将副本规模降低到的最低限制。默认情况下为1个pod。如果alpha功能门HPAScaleToZero启用，并且至少配置一个Object或外部指标，那么 scaling 会一直工作直到至少有一个指标值可用。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "scaleTargetRef": {
                                                                      "description": "reference to scaled resource; horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.",
                                                                      "descriptionCN": "参照负载均衡器；水平伸缩容器会学习当前的资源消耗情况，并使用其 Scale 属性来设置期望的 pod 数量。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v1.CrossVersionObjectReference"
                                                                  },
                                                                  "targetCPUUtilizationPercentage": {
                                                                      "description": "targetCPUUtilizationPercentage is the target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.",
                                                                      "descriptionCN": "目标CPU利用率百分比是指所有Pod的平均CPU使用率（以请求CPU的百分比表示）。如果没有指定默认的自动缩放策略，将使用默认策略。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus": {
                                                              "description": "current status of a horizontal pod autoscaler",
                                                              "descriptionCN": "水平Pod autoscaler的当前状态",
                                                              "properties": {
                                                                  "currentCPUUtilizationPercentage": {
                                                                      "description": "currentCPUUtilizationPercentage is the current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.",
                                                                      "descriptionCN": "当前CPU利用率百分比是所有Pod中当前平均CPU利用率，以请求CPU的百分比表示，例如70%表示一个平均Pod现在正在使用其请求的CPU的70%。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "currentReplicas": {
                                                                      "description": "currentReplicas is the current number of replicas of pods managed by this autoscaler.",
                                                                      "descriptionCN": "当前的replicas是这个自动缩放器管理的Pods中的当前数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "desiredReplicas": {
                                                                      "description": "desiredReplicas is the  desired number of replicas of pods managed by this autoscaler.",
                                                                      "descriptionCN": "这个自动缩放器管理的Pod所需的期望复制数。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lastScaleTime": {
                                                                      "description": "lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods; used by the autoscaler to control how often the number of pods is changed.",
                                                                      "descriptionCN": "上一次HorizontalPodAutoscaler对Pod的数量进行了缩放，使用的单位是时间。这个属性用于控制Pod的数量是如何变化的。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "observedGeneration is the most recent generation observed by this autoscaler.",
                                                                      "descriptionCN": "观察到的下一代是本自动缩放器最近观测到的。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.Scale": {
                                                              "description": "Scale represents a scaling request for a resource.",
                                                              "descriptionCN": "缩放是为资源提供一个规模请求。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交的请求来推测此资源的类型。无法进行更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.",
                                                                      "descriptionCN": "标准对象元数据；更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec defines the behavior of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
                                                                      "descriptionCN": "规范定义了 scale 的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the current status of the scale. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. Read-only.",
                                                                      "descriptionCN": "当前状态是 scale 的当前状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status. 仅供阅读。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.ScaleSpec": {
                                                              "description": "ScaleSpec describes the attributes of a scale subresource.",
                                                              "descriptionCN": "ScaleSpec描述了Scale下子资源的属性。",
                                                              "properties": {
                                                                  "replicas": {
                                                                      "description": "replicas is the desired number of instances for the scaled object.",
                                                                      "descriptionCN": "对于规模对象，理想的实例数量是replicas。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v1.ScaleStatus": {
                                                              "description": "ScaleStatus represents the current status of a scale subresource.",
                                                              "descriptionCN": "ScaleStatus表示子资源的当前状态。",
                                                              "properties": {
                                                                  "replicas": {
                                                                      "description": "replicas is the actual number of observed instances of the scaled object.",
                                                                      "descriptionCN": "副本是观察到的缩放对象的实际数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector is the label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
                                                                      "descriptionCN": "标签选择器是应该匹配Pod副本数量的Pod标签查询。这与Label selector相同，但在字符串格式中避免客户端的内部解析。字符串将与查询参数语法具有相同的格式。关于Label selectors的更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource": {
                                                              "description": "ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.",
                                                              "descriptionCN": "容器资源监控指标源指示如何根据了解 Kubernetes 的已知资源监控指标来扩展，以指定在当前 Scale 目标（例如 CPU 或内存）中的每个 pod。值将在与目标进行平均比较之前被整合在一起。这样的指标是 Kubernetes 自带的，并且可以在使用 \"pods\" 源为普通 Pod 监控指标提供特殊扩展选项的基础上提供。只能设置一个 \"target\" 类型。\n\n译文：\n\n容器资源监控指标源指示如何根据了解 Kubernetes 的已知资源监控指标来扩展，以指定在当前 Scale 目标（例如 CPU 或内存）中的每个 pod。值将在与目标进行平均比较之前被整合在一起。这样的指标是 Kubernetes 自带的，并且可以在使用 \"pods\" 源为普通 Pod 监控指标提供特殊扩展选项的基础上提供。只能设置一个 \"target\" 类型。",
                                                              "properties": {
                                                                  "container": {
                                                                      "description": "container is the name of the container in the pods of the scaling target",
                                                                      "descriptionCN": "容器是 pods 中的缩容目标的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the resource in question.",
                                                                      "descriptionCN": "资源名称",
                                                                      "type": "string"
                                                                  },
                                                                  "target": {
                                                                      "description": "target specifies the target value for the given metric",
                                                                      "descriptionCN": "目标指定了给定度量的指定值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus": {
                                                              "description": "ContainerResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing a single container in each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                                                              "descriptionCN": "容器资源监控状态显示当前已知的kubernetes中单个容器的资源指标值，由requests和limits指定。此信息描述了当前目标（例如CPU或内存）中的每个pod内的一个容器。\n此类指标是Kubernetes内置的，并且在使用\"pods\"源可用的正常 pod 指标之外提供了一些特殊的扩展选项。",
                                                              "properties": {
                                                                  "container": {
                                                                      "description": "container is the name of the container in the pods of the scaling target",
                                                                      "descriptionCN": "\"container\" 是 pods 中缩写的目标容器的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "current": {
                                                                      "description": "current contains the current value for the given metric",
                                                                      "descriptionCN": "当前包含给定指标的当前值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the resource in question.",
                                                                      "descriptionCN": "资源名称",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.CrossVersionObjectReference": {
                                                              "description": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
                                                              "descriptionCN": "交叉版本对象引用包含足够的信息，可以让你识别所引用的资源。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "apiVersion is the API version of the referent",
                                                                      "descriptionCN": "API版本是目标对象的API版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind is the kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是指被引用的资源。更多详情可以在：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds中找到。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the referent; More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "这个名字是被引用的实体的名字。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ExternalMetricSource": {
                                                              "description": "ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
                                                              "descriptionCN": "外部指标源指示如何在不与任何Kubernetes对象关联的度量上进行扩展（例如云消息服务中的队列长度，或者运行在外部集群中的负载均衡器的QPS）。",
                                                              "properties": {
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "度量通过名称和选择器识别目标度量。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  },
                                                                  "target": {
                                                                      "description": "target specifies the target value for the given metric",
                                                                      "descriptionCN": "目标参数指定给定度量的阈值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ExternalMetricStatus": {
                                                              "description": "ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.",
                                                              "descriptionCN": "外部指标状态表示当前没有与任何Kubernetes对象关联的全局指标值。",
                                                              "properties": {
                                                                  "current": {
                                                                      "description": "current contains the current value for the given metric",
                                                                      "descriptionCN": "当前包含给定指标的当前值",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"
                                                                  },
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "测量法通过名称和选择器识别目标衡量标准。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HPAScalingPolicy": {
                                                              "description": "HPAScalingPolicy is a single policy which must hold true for a specified past interval.",
                                                              "descriptionCN": "HPAScalingPolicy 是一个必须在特定的时间段内保持正确的单个政策。",
                                                              "properties": {
                                                                  "periodSeconds": {
                                                                      "description": "periodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).",
                                                                      "descriptionCN": "政策持续时间的窗口时间为该策略应在何时保持有效。PeriodSeconds必须大于零且小于或等于1800（30分钟）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is used to specify the scaling policy.",
                                                                      "descriptionCN": "类型是用来指定规模政策的。",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "value contains the amount of change which is permitted by the policy. It must be greater than zero",
                                                                      "descriptionCN": "价值包含政策允许的金额。它必须大于零",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HPAScalingRules": {
                                                              "description": "HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.",
                                                              "descriptionCN": "HPAScalingRules配置了一个方向上的扩展行为。这些规则是在计算HPA所需的DesiredReplicas从性能指标后应用的。它们可以通过指定缩放策略来限制扩展速度。通过指定稳定性窗口，可以防止过度伸展，这样就选择了稳定窗口内的最安全的副本数量。",
                                                              "properties": {
                                                                  "policies": {
                                                                      "description": "policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid",
                                                                      "descriptionCN": "政策是一个可能的缩放策略列表，可以在缩放时使用。至少需要一个策略被指定，否则HPAScalingRules将被丢弃为无效。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingPolicy"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "selectPolicy": {
                                                                      "description": "selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.",
                                                                      "descriptionCN": "选择策略是用来指定应该使用哪种策略。如果没有设置，将默认使用Max。",
                                                                      "type": "string"
                                                                  },
                                                                  "stabilizationWindowSeconds": {
                                                                      "description": "stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).",
                                                                      "descriptionCN": "稳定性窗口秒数是当扩大或缩小时，过去建议应被考虑的持续时间。稳定性窗口秒数必须大于或等于0且小于或等于3600（一小时）。如果没有设置，则使用默认值：- 对于扩大：0 (即没有做稳定工作) - 对于缩小：300 (即稳定性窗口为300秒长)",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler": {
                                                              "description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.",
                                                              "descriptionCN": "水平PodAutoscaler是水平Pod Autoscaler的配置，它自动根据指定的性能指标来管理任何实现scale子资源的资源的复制计数。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化结构。服务器应该将可识别的架构转换为内部最新的值，如果遇到不识别的值，则可能拒绝它。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个字符串值，表示这个对象所代表的REST资源。服务器可能根据客户端向其提交请求时提供的端点推断出此。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "metadata is the standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "元数据是标准的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the specification for the behaviour of the autoscaler. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status.",
                                                                      "descriptionCN": "本规范是自动缩放器的行为规范。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the current information about the autoscaler.",
                                                                      "descriptionCN": "状态是当前的自动缩放器信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior": {
                                                              "description": "HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).",
                                                              "descriptionCN": "水平PodAutoscaler行为配置了目标在向上和向下方向（scaleUp和scaleDown字段分别）的缩放行为。",
                                                              "properties": {
                                                                  "scaleDown": {
                                                                      "description": "scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).",
                                                                      "descriptionCN": "降级策略为降级。如果没有设置，默认值是允许将Pod的数量降级到minReplicas级别，即最近300秒的最高推荐使用。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
                                                                  },
                                                                  "scaleUp": {
                                                                      "description": "scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used.",
                                                                      "descriptionCN": "在 ScaleUp 中，使用缩放策略。如果没有设置，则默认值为每60秒增加最多 4 个Pod，或者每60秒增加的数量翻倍。不进行稳定性处理。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition": {
                                                              "description": "HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.",
                                                              "descriptionCN": "水平PodAutoscalerCondition描述了水平PodAutoscaler在特定时刻的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another",
                                                                      "descriptionCN": "最后过渡时间是该条件从一个状态转换到另一个状态的最后一次时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message is a human-readable explanation containing details about the transition",
                                                                      "descriptionCN": "消息是一个可读性强的说明，其中包含关于过渡的信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason is the reason for the condition's last transition.",
                                                                      "descriptionCN": "原因就是条件最后的转变。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the status of the condition (True, False, Unknown)",
                                                                      "descriptionCN": "状态是条件的状态（True, False, 不明）",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type describes the current condition",
                                                                      "descriptionCN": "类型描述当前状态。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerList": {
                                                              "description": "HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.",
                                                              "descriptionCN": "水平PodAutoScalerList是一个水平PodAutoscaler对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化的架构。服务器应该将识别的架构转换为最新的内部值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of horizontal pod autoscaler objects.",
                                                                      "descriptionCN": "items 是水平 Pod Autoscaler 的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是指此对象所代表的REST资源。服务器可能从客户端提交请求时推测出这个字符串。不能被更新。 CamelCase形式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "metadata is the standard list metadata.",
                                                                      "descriptionCN": "元数据是标准的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec": {
                                                              "description": "HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.",
                                                              "descriptionCN": "水平PodAutoscalerSpec描述了水平PodAutoscaler的期望功能。",
                                                              "properties": {
                                                                  "behavior": {
                                                                      "description": "behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively). If not set, the default HPAScalingRules for scale up and scale down are used.",
                                                                      "descriptionCN": "行为配置了目标在上下方向上的规模行为（分别设置scaleUp和scaleDown字段）。如果没有设置，则默认的HPAScalingRules进行规模变化。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior"
                                                                  },
                                                                  "maxReplicas": {
                                                                      "description": "maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.",
                                                                      "descriptionCN": "最大副本数是自动缩放器可以扩展的副本数量上限。它不能小于最小副本数。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "metrics": {
                                                                      "description": "metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.",
                                                                      "descriptionCN": "“metrics”包含用于计算所需的复制计数（将所有指标的最大复制计数使用）。 “所需的复制计数是将目标值与当前值的比率乘以当前Pod的数量。” 因此，当Pod数量增加时，指标必须减少；反之亦然。 看看每个类型的测量源类型的具体信息，了解每种类型的测量源如何响应。 如果未设置，则默认的测量源将被设置为80%的CPU平均利用率。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricSpec"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "minReplicas": {
                                                                      "description": "minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.",
                                                                      "descriptionCN": "最小副本数是自动缩放器可以将资源向下缩放的最低限制。默认为1个Pod。如果alpha功能门HPAScaleToZero启用，并且至少有一个Object或外部指标配置，那么缩放将持续进行。只要至少有一个指标值可用，缩放就会持续进行。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "scaleTargetRef": {
                                                                      "description": "scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.",
                                                                      "descriptionCN": "目标资源的索引 points to the target resource to scale, and is used to collect metrics for the pods for which they should be collected, as well as to change the replica count.",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus": {
                                                              "description": "HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.",
                                                              "descriptionCN": "水平PodAutoScaleStatus描述了一个水平Pod Autoscaler当前的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.",
                                                                      "descriptionCN": "条件是这个 autoscaler 要实现其目标所需的环境，表示这些条件是否满足。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "currentMetrics": {
                                                                      "description": "currentMetrics is the last read state of the metrics used by this autoscaler.",
                                                                      "descriptionCN": "当前指标是这个自动缩放器使用的指标的最后读取状态。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricStatus"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "currentReplicas": {
                                                                      "description": "currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.",
                                                                      "descriptionCN": "当前的replicas是自动缩放器管理的Pods的数量，最后一次由自动缩放器看到。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "desiredReplicas": {
                                                                      "description": "desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.",
                                                                      "descriptionCN": "作为这个自动缩放器管理的Pods的所需副本数量，即由自动缩放器计算的最近一次。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lastScaleTime": {
                                                                      "description": "lastScaleTime is the last time the HorizontalPodAutoscaler scaled the number of pods, used by the autoscaler to control how often the number of pods is changed.",
                                                                      "descriptionCN": "最后ScaleTime是水平PodAutoscaler在计算了多少个Pod，用来控制Pod的数量改变时使用的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "observedGeneration is the most recent generation observed by this autoscaler.",
                                                                      "descriptionCN": "自统计器观察到的世代是最新的被观察的世代。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.MetricIdentifier": {
                                                              "description": "MetricIdentifier defines the name and optionally selector for a metric",
                                                              "descriptionCN": "度量标识器定义了一个命名和可能的选择器对于一个度量的名称。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the name of the given metric",
                                                                      "descriptionCN": "名称是给定的度量单位。",
                                                                      "type": "string"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping. When unset, just the metricName will be used to gather metrics.",
                                                                      "descriptionCN": "selector 是标准kubernetes label selector的字符串编码形式，用于指定给定度量的特定指标。设置时，它作为额外参数传递给性能服务器以获取更具体的指标范围。如果未设置，则仅使用metricName收集指标。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.MetricSpec": {
                                                              "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).",
                                                              "descriptionCN": "MetricSpec定义了如何根据单一的指标（只有`type`和一个匹配的其他字段应同时设置）进行规模缩放。",
                                                              "properties": {
                                                                  "containerResource": {
                                                                      "description": "containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.",
                                                                      "descriptionCN": "资源指标指Kubernetes中描述当前目标负载中的一个容器的单独资源指标（如请求和限制指定的）。这些指标是构建在Kubernetes之上的，它们与集群中的每个Pod的普通Pod指标具有特殊扩展选项。这是一个alpha特性，并可以通过HPAContainerMetrics特征标志启用。\n\n具体来说，如果要使用此功能，则需要以下配置：\n\n```yaml\napiVersion: v1\nkind: Deployment\nmetadata:\n  name: my-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: my-app\n  template:\n    metadata:\n      labels:\n        app: my-app\n    spec:\n      containers:\n      - name: container1\n        image: my-image\n        ports:\n        - containerPort: 80\n```\n\n在这个例子中，我们将应用\"my-app\"部署到三个副本上。每个副本都将从名为\"container1\"的应用容器启动。\n\n为了利用这个特性，你需要设置一个名为\"HPAContainerMetrics\"的特征标志。这通常是在创建应用程序时由系统管理员自动完成的。\n\n请注意，alpha特性可能不会在所有环境中工作。在某些情况下，你可能需要手动调整配置以使其正常工作。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource"
                                                                  },
                                                                  "external": {
                                                                      "description": "external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
                                                                      "descriptionCN": "外部指的是与任何Kubernetes对象无关的全球度量。它允许根据组件运行在cluster之外的信息进行自动扩展（例如云消息服务中的队列长度，或运行在cluster之外的负载均衡器的QPS）。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricSource"
                                                                  },
                                                                  "object": {
                                                                      "description": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).",
                                                                      "descriptionCN": "目标是描述一个单一的Kubernetes对象（例如，Ingress对象的每秒访问量）。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricSource"
                                                                  },
                                                                  "pods": {
                                                                      "description": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.",
                                                                      "descriptionCN": "pods指的是当前度量目标（例如，每秒处理的事务数）中的每个Pod的值。这些值将在被比较之前进行平均。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricSource"
                                                                  },
                                                                  "resource": {
                                                                      "description": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                                                                      "descriptionCN": "资源指的是已知的 Kubernetes 中的资源指标（如：根据请求和限制指定的指标），描述当前规模目标中的每个 pod（例如 CPU 或内存）。这些指标是 Kubernetes 自动构建的，而普通 per-pod 指标则提供给使用 \"pods\" 来获取的特殊 scaling 选项。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricSource"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object. Note: \"ContainerResource\" type is available on when the feature-gate HPAContainerMetrics is enabled",
                                                                      "descriptionCN": "类型是度量源的类型。它可以是\"ContainerResource\", \"External\", \"Object\", \"Pods\"或\"Resource\",并对应于对象中的匹配字段。请注意：\"ContainerResource\"类型在HPA容器性能指标功能启用时可用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.MetricStatus": {
                                                              "description": "MetricStatus describes the last-read state of a single metric.",
                                                              "descriptionCN": "度量状态描述单个度量的最后读取状态。",
                                                              "properties": {
                                                                  "containerResource": {
                                                                      "description": "container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                                                                      "descriptionCN": "容器资源指的是，用于描述当前目标规模下（例如CPU或内存）每个Pod中的一個单个容器的资源指标。这些指标是Kubernetes内置的，并且在可用的“pods”源提供的普通Pod指标之外提供了特殊的扩展选项。\n\n以上是对\"container resource\"的概念和其工作原理的简要介绍。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricStatus"
                                                                  },
                                                                  "external": {
                                                                      "description": "external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
                                                                      "descriptionCN": "外部指的是与任何Kubernetes对象无关的全球度量。它允许根据组件运行在集群之外的信息（例如云消息服务中的队列长度，或者运行在集群之外的负载均衡器的QPS）进行自动扩展。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricStatus"
                                                                  },
                                                                  "object": {
                                                                      "description": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).",
                                                                      "descriptionCN": "对象指的是一种描述单一kubernetes对象（例如，Ingress对象的每秒访问量）的度量标准。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricStatus"
                                                                  },
                                                                  "pods": {
                                                                      "description": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.",
                                                                      "descriptionCN": "Pods 是描述当前缩放目标（例如，每秒交易处理量）的度量指标。这些值将被汇总在一起进行比较以达到目标值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricStatus"
                                                                  },
                                                                  "resource": {
                                                                      "description": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                                                                      "descriptionCN": "资源指的是 Kubernetes 中描述当前规模目标（例如 CPU 或内存）的已知资源指标，这些指标属于每个Pod。这些指标是 Kubernetes 自带的，并且可以通过在 \"pods\" 源中提供普通 Pod 指标外的特殊方式来扩展。\n\n以下是详细的翻译：\n\n1. resource：资源\n2. refers to：指的是\n3. a resource metric (such as those specified in requests and limits) known to Kubernetes：一种已知到 Kubernetes 的资源指标，如在请求和限制中指定的指标。\n4. describing each pod in the current scale target (e.g. CPU or memory): 描述当前规模目标中的每个Pod，如 CPU 或内存。\n5. such metrics are built in to Kubernetes：这些指标是 Kubernetes 自带的。\n6. and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source: 并且可以在使用 \"pods\" 源提供的正常 Pod 指标外提供特殊的扩展选项。\n\n总之，这个文档将详细解释 Kubernetes 中的资源信息，并说明它们如何被内置到 Kubernetes 中，并且可以扩展以满足规模目标的需求。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricStatus"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is the type of metric source.  It will be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each corresponds to a matching field in the object. Note: \"ContainerResource\" type is available on when the feature-gate HPAContainerMetrics is enabled",
                                                                      "descriptionCN": "类型是度量源的类型。 它可以是\"ContainerResource\"、\"外部\"、\"对象\"、\"Pods\"或\"资源\"中的一个，对应于对象中匹配的字段。 注意：当功能开关HPAContainerMetrics启用时，“ContainerResource”类型可用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.MetricTarget": {
                                                              "description": "MetricTarget defines the target value, average value, or average utilization of a specific metric",
                                                              "descriptionCN": "度量目标定义了特定度量值、平均值或平均利用率的目标。",
                                                              "properties": {
                                                                  "averageUtilization": {
                                                                      "description": "averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type",
                                                                      "descriptionCN": "平均利用率是所有相关Pod的平均资源指标值，表示为指定Pod所需的资源价值的百分比。目前只适用于Resource metric源类型。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "averageValue": {
                                                                      "description": "averageValue is the target value of the average of the metric across all relevant pods (as a quantity)",
                                                                      "descriptionCN": "平均值为目标值，该目标值为所有相关Pod（作为量）的平均值。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  },
                                                                  "type": {
                                                                      "description": "type represents whether the metric type is Utilization, Value, or AverageValue",
                                                                      "descriptionCN": "类型表示的是度量类型是否是利用率、值还是平均值。",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "value is the target value of the metric (as a quantity).",
                                                                      "descriptionCN": "衡量值是该指标的目标值（作为数量）。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.MetricValueStatus": {
                                                              "description": "MetricValueStatus holds the current value for a metric",
                                                              "descriptionCN": "测量值状态保存当前的测量值。",
                                                              "properties": {
                                                                  "averageUtilization": {
                                                                      "description": "currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.",
                                                                      "descriptionCN": "当前平均利用率是指所有相关Pod中的资源指标的当前平均值，以资源需求量对Pod的请求值的百分比表示。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "averageValue": {
                                                                      "description": "averageValue is the current value of the average of the metric across all relevant pods (as a quantity)",
                                                                      "descriptionCN": "平均值是指所有相关Pod（作为量）的当前平均值。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  },
                                                                  "value": {
                                                                      "description": "value is the current value of the metric (as a quantity).",
                                                                      "descriptionCN": "值是当前的量度（作为数量）。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ObjectMetricSource": {
                                                              "description": "ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).",
                                                              "descriptionCN": "ObjectMetricSource表明如何根据描述 Kubernetes 对象（例如，Ingress 的 hit 每秒计数）的指标进行规模调整。",
                                                              "properties": {
                                                                  "describedObject": {
                                                                      "description": "describedObject specifies the HTable of a object,such as kind,name apiVersion",
                                                                      "descriptionCN": "定义对象，包括对象的HTable属性（例如类型、名称、API版本等）。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
                                                                  },
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "度量器通过名称和筛选器识别目标度量。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  },
                                                                  "target": {
                                                                      "description": "target specifies the target value for the given metric",
                                                                      "descriptionCN": "目标值指定了给定度量的target值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ObjectMetricStatus": {
                                                              "description": "ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).",
                                                              "descriptionCN": "\"ObjectMetricStatus\" 表示描述一个Kubernetes对象（例如，Ingress对象的每秒击打次数）当前值。",
                                                              "properties": {
                                                                  "current": {
                                                                      "description": "current contains the current value for the given metric",
                                                                      "descriptionCN": "当前包含给定度量的当前值",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"
                                                                  },
                                                                  "describedObject": {
                                                                      "description": "DescribedObject specifies the HTable of a object,such as kind,name apiVersion",
                                                                      "descriptionCN": "描述对象指定对象的HTable，例如类型、名称、API版本等。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
                                                                  },
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "目标度量通过名称和筛选器进行识别。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.PodsMetricSource": {
                                                              "description": "PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.",
                                                              "descriptionCN": "PodsMetricSource表示如何根据当前目标测量每个pod的每秒交易处理量。这些值将汇总在一起然后与目标值进行比较。",
                                                              "properties": {
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "测量器通过名称和选择器确定目标度量。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  },
                                                                  "target": {
                                                                      "description": "target specifies the target value for the given metric",
                                                                      "descriptionCN": "目标指定给定度量的值",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.PodsMetricStatus": {
                                                              "description": "PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).",
                                                              "descriptionCN": "PodsMetricStatus 表示当前目标（例如，每秒交易处理量）对应每个 Pod 的当前值。",
                                                              "properties": {
                                                                  "current": {
                                                                      "description": "current contains the current value for the given metric",
                                                                      "descriptionCN": "当前包含给定指标的当前值",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"
                                                                  },
                                                                  "metric": {
                                                                      "description": "metric identifies the target metric by name and selector",
                                                                      "descriptionCN": "测量器通过名称和选择器识别目标度量。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ResourceMetricSource": {
                                                              "description": "ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.  Only one \"target\" type should be set.",
                                                              "descriptionCN": "资源监控源指示如何根据已知的Kubernetes资源指标来扩展，这些指标由请求和限制指定，描述当前规模目标中的每个Pod（例如CPU或内存）。将这些值汇总后，再与目标进行比较。这样的指标是 Kubernetes内置的，并在使用“pods”源的情况下提供普通 Pod 监控指标的特殊扩展选项。只有一个 \"target\" 类型可以设置。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the name of the resource in question.",
                                                                      "descriptionCN": "资源名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "target": {
                                                                      "description": "target specifies the target value for the given metric",
                                                                      "descriptionCN": "目标参数指定了给定度量的测量值。",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.autoscaling.v2.ResourceMetricStatus": {
                                                              "description": "ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
                                                              "descriptionCN": "资源性能状态表示已知到Kubernetes的当前指定的资源性能指标值，如请求和限制中的每个Pod。这些指标是构建在Kubernetes上的，且具有普通Pod中可用的特殊缩放选项。",
                                                              "properties": {
                                                                  "current": {
                                                                      "description": "current contains the current value for the given metric",
                                                                      "descriptionCN": "当前包含给定度量的当前值",
                                                                      "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricValueStatus"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the resource in question.",
                                                                      "descriptionCN": "资源名为所涉问题。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.CronJob": {
                                                              "description": "CronJob represents the configuration of a single cron job.",
                                                              "descriptionCN": "定时任务代表一个cron作业的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将可识别的格式转换为内部的最新值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示该对象所代表的REST资源的一种字符串值。服务器可以通过客户端提交请求时使用的endpoint推断出这个值。不能被更新。在CamelCase命名空间中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of a cron job, including the schedule. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "描述一个cron作业的期望行为，包括时间表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.CronJobSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Current status of a cron job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "当前 cron 负责的任务状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.CronJobStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.CronJobList": {
                                                              "description": "CronJobList is a collection of cron jobs.",
                                                              "descriptionCN": "CronJobList是一个 cron 命令的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示形式的版本化 schema。服务器应将识别的 schema 转换为内部最新值，否则拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of CronJobs.",
                                                                      "descriptionCN": "Items是CronJobs列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.batch.v1.CronJob"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示此对象所代表的 REST 资源的一种字符串值。服务器可以从客户端提交请求的端点推测这一点。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.CronJobSpec": {
                                                              "description": "CronJobSpec describes how the job execution will look like and when it will actually run.",
                                                              "descriptionCN": "CronJobSpec 是描述作业执行的外观和何时实际运行。",
                                                              "properties": {
                                                                  "concurrencyPolicy": {
                                                                      "description": "Specifies how to treat concurrent executions of a Job. Valid values are:\n\n- \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one",
                                                                      "descriptionCN": "该配置如何处理多个Job的并发执行。有效值为：\n\n- \"允许\" (默认): 允许cronJobs同时运行; - \"禁止\": 禁止并发运行，如果先前的运行尚未完成，则跳过后续的运行; - \"替换\": 取消当前运行的任务，并用一个新的任务替换它",
                                                                      "type": "string"
                                                                  },
                                                                  "failedJobsHistoryLimit": {
                                                                      "description": "The number of failed finished jobs to retain. Value must be non-negative integer. Defaults to 1.",
                                                                      "descriptionCN": "保留失败完成的任务的数量。值必须是非负整数。默认为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "jobTemplate": {
                                                                      "description": "Specifies the job that will be created when executing a CronJob.",
                                                                      "descriptionCN": "在执行CronJob时创建的工作。",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.JobTemplateSpec"
                                                                  },
                                                                  "schedule": {
                                                                      "description": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
                                                                      "descriptionCN": "Cron 是一种时间同步服务，用于定时执行任务。其格式为 \"hour:minute:mILLISECOND\"，其中小时、分钟和毫秒分别表示小时数、分钟数和毫秒数。\n\n在 Cron 格式中，您需要指定一个或多个任务的名称（以空格分隔），并设置它们的开始时间和结束时间。例如：\n\n```\n* * * * 10 30 50\n```\n\n这将每个小时运行一次，每分钟运行一次，并每毫秒运行一次任务 \"10 30 50\"。您可以根据需要自定义这些值。\n\n此外，您还可以使用 CRON 命令行工具来管理您的 Cron 设置。例如，要查看所有运行的任务，请输入以下命令：\n\n```\ncrontab -l\n```\n\n这将显示您的 Cron 设置列表，您可以在这里更改和删除任务。",
                                                                      "type": "string"
                                                                  },
                                                                  "startingDeadlineSeconds": {
                                                                      "description": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.",
                                                                      "descriptionCN": "如果任何原因，工作开始的最后期限秒为可选。若未能按计划时间执行任务，则被计算为失败任务。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "successfulJobsHistoryLimit": {
                                                                      "description": "The number of successful finished jobs to retain. Value must be non-negative integer. Defaults to 3.",
                                                                      "descriptionCN": "保留成功完成的工作的数量。值必须是非负整数。默认为3。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "suspend": {
                                                                      "description": "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.",
                                                                      "descriptionCN": "这个旗帜告诉控制器暂停后续执行，它不适用于已经开始的执行。默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "timeZone": {
                                                                      "description": "The time zone name for the given schedule, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones. If not specified, this will default to the time zone of the kube-controller-manager process. The set of valid time zone names and the time zone offset is loaded from the system-wide time zone database by the API server during CronJob validation and the controller manager during execution. If no system-wide time zone database can be found a bundled version of the database is used instead. If the time zone name becomes invalid during the lifetime of a CronJob or due to a change in host configuration, the controller will stop creating new new Jobs and will create a system event with the reason UnknownTimeZone. More information can be found in https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones",
                                                                      "descriptionCN": "给定的时间区名称，在https://en.wikipedia.org/wiki/List_of_tz_database_time_zones中查看。如果没有指定，这将默认为kube-controller-manager进程的时区。从系统全局时间区域数据库加载有效的时间区名和时区偏移量是API服务器在CronJob验证和控制器管理器执行期间加载的。如果找不到系统全局时间区域数据库，将使用捆绑版本代替。如果cron作业的生命周期内时区名称无效或主机配置发生变化，控制器将停止创建新的新的作业，并在系统事件中记录未知时区的原因。更多信息可以在https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones中找到。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.CronJobStatus": {
                                                              "description": "CronJobStatus represents the current state of a cron job.",
                                                              "descriptionCN": "CronJobStatus表示cronjob的当前状态。",
                                                              "properties": {
                                                                  "active": {
                                                                      "description": "A list of pointers to currently running jobs.",
                                                                      "descriptionCN": "当前运行中的任务指针列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "lastScheduleTime": {
                                                                      "description": "Information when was the last time the job was successfully scheduled.",
                                                                      "descriptionCN": "最上一次成功安排工作的日期是什么时候。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastSuccessfulTime": {
                                                                      "description": "Information when was the last time the job successfully completed.",
                                                                      "descriptionCN": "这次工作的最后完成日期是什么时候。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.Job": {
                                                              "description": "Job represents the configuration of a single job.",
                                                              "descriptionCN": "工作代表单个工作的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的对象化形式的版本。服务器应该将识别的规范转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时提供的端点推断出这个字符串。不能被更新。在CamelCase下定义。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "目标行为的期望实现。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Current status of a job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "当前工作状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.JobStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.JobCondition": {
                                                              "description": "JobCondition describes current state of a job.",
                                                              "descriptionCN": "工作条件描述了当前工作的状态。",
                                                              "properties": {
                                                                  "lastProbeTime": {
                                                                      "description": "Last time the condition was checked.",
                                                                      "descriptionCN": "上次状态检查。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transit from one status to another.",
                                                                      "descriptionCN": "上次的状态转变。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "Human readable message indicating details about last transition.",
                                                                      "descriptionCN": "人类可读的消息，表示上一次过渡的详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "(brief) reason for the condition's last transition.",
                                                                      "descriptionCN": "症状转为慢性的情况的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "疾病状况的状态，真、假、未知。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of job condition, Complete or Failed.",
                                                                      "descriptionCN": "职位类型，成功还是失败。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.JobList": {
                                                              "description": "JobList is a collection of jobs.",
                                                              "descriptionCN": "JobList 是一个包含职位的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化结构。服务器应该将识别到的结构转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of Jobs.",
                                                                      "descriptionCN": "这个句子的中文翻译是：\"items\" 是 \"list of Jobs\" 的缩写。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.batch.v1.Job"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind”是一个表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时使用的端点推测出这个字段。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.JobSpec": {
                                                              "description": "JobSpec describes how the job execution will look like.",
                                                              "descriptionCN": "工作规范描述了工作的执行方式。",
                                                              "properties": {
                                                                  "activeDeadlineSeconds": {
                                                                      "description": "Specifies the duration in seconds relative to the startTime that the job may be continuously active before the system tries to terminate it; value must be positive integer. If a Job is suspended (at creation or through an update), this timer will effectively be stopped and reset when the Job is resumed again.",
                                                                      "descriptionCN": "定义了从startTime开始，工作可能持续活动的时间相对于该启动时间的秒数。值必须是正整数。如果Job被暂停（在创建或更新中），当Job重新加载时，这个计时器将有效地停止并重置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "backoffLimit": {
                                                                      "description": "Specifies the number of retries before marking this job failed. Defaults to 6",
                                                                      "descriptionCN": "设置重试次数，当此任务失败时标记为失败。默认为6次。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "backoffLimitPerIndex": {
                                                                      "description": "Specifies the limit for the number of retries within an index before marking this index as failed. When enabled the number of failures per index is kept in the pod's batch.kubernetes.io/job-index-failure-count annotation. It can only be set when Job's completionMode=Indexed, and the Pod's restart policy is Never. The field is immutable. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
                                                                      "descriptionCN": "在索引上设置重试限制，当启用该功能时，每成功调用一次索引就将此索引标记为失败。当启用此功能时，副本的batch.kubernetes.io/job-index-failure-count属性应被保存在Pod的batch.kubernetes.io-job-index-failure-count元数据中。只能在Job完成模式为分页时设置此字段。这个字段是不可变的。当`JobBackoffLimitPerIndex`功能开关启用（默认情况下启用）时，可以使用此字段。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "completionMode": {
                                                                      "description": "completionMode specifies how Pod completions are tracked. It can be `NonIndexed` (default) or `Indexed`.\n\n`NonIndexed` means that the Job is considered complete when there have been .spec.completions successfully completed Pods. Each Pod completion is homologous to each other.\n\n`Indexed` means that the Pods of a Job get an associated completion index from 0 to (.spec.completions - 1), available in the annotation batch.kubernetes.io/job-completion-index. The Job is considered complete when there is one successfully completed Pod for each index. When value is `Indexed`, .spec.completions must be specified and `.spec.parallelism` must be less than or equal to 10^5. In addition, The Pod name takes the form `$(job-name)-$(index)-$(random-string)`, the Pod hostname takes the form `$(job-name)-$(index)`.\n\nMore completion modes can be added in the future. If the Job controller observes a mode that it doesn't recognize, which is possible during upgrades due to version skew, the controller skips updates for the Job.",
                                                                      "descriptionCN": "`completionMode`指定Pod的完成方式。可以设置为`NonIndexed`（默认）或` Indexed`。\n\n`NonIndexed`意味着Job在成功完成所有`.spec.completions`的Pod后被认为是完整的。每个Pod的完整性是彼此相关的。\n\n`Indexed`意味着Job中的Pod获得一个从0到(.spec.completions - 1)的关联完成索引，可以通过`annotation.batch.kubernetes.io/job-completion-index`来自定义。当索引值为`Indexed`时，需要指定`.spec.completions`并`.spec.parallelism`必须小于等于10^5。此外，Pod名称的形式为`$(job-name)-$(index)-$(random-string)`，Pod主机名的形式为`$(job-name)-$(index)`。\n\n未来还可以添加更多的完成模式。如果Job控制器观察到它不识别的模式，在升级期间由于版本偏差可能无法进行更新，控制器将跳过对Job的更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "completions": {
                                                                      "description": "Specifies the desired number of successfully finished pods the job should be run with.  Setting to null means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "descriptionCN": "指定工作运行时需要成功完成的Pod数量。设置为null意味着任何Pod的成功信号了所有Pod的成功，允许并行性有任何正的值。设置为1意味着并行性仅限于1，并且该Pod的成功信号了任务的成功。更多详情：https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "manualSelector": {
                                                                      "description": "manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
                                                                      "descriptionCN": "手动选择器控制生成pod标签和pod选择器。除非你确定你在做什么，否则默认情况下系统会为这个任务选择一个唯一的标签，并将这些标签附加到Pod模板中。当设置为true时，用户负责选择唯一标签并指定selector。如果没有选择一个唯一的标签，这可能会导致此和其他工作不正确运行。然而，你可能会在使用旧的`extensions/v1beta1` API创建的工作中看到`manualSelector=true`。\n更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
                                                                      "type": "boolean"
                                                                  },
                                                                  "maxFailedIndexes": {
                                                                      "description": "Specifies the maximal number of failed indexes before marking the Job as failed, when backoffLimitPerIndex is set. Once the number of failed indexes exceeds this number the entire Job is marked as Failed and its execution is terminated. When left as null the job continues execution of all of its indexes and is marked with the `Complete` Job condition. It can only be specified when backoffLimitPerIndex is set. It can be null or up to completions. It is required and must be less than or equal to 10^4 when is completions greater than 10^5. This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
                                                                      "descriptionCN": "在设置backoffLimitPerIndex时指定最大失败的索引数，以标记Job为失败。一旦失败的索引数量超过这个数字，整个Job将被标记为失败，并且执行终止。如果未设置null，则所有索引将继续执行，并标记为Complete Job条件。该字段只能在设置backoffLimitPerIndex时指定。可以是null或达到完成次数。当completions大于10^5时，此字段必须小于或等于10^4。此字段为 beta 级别。当JobBackoffLimitPerIndex功能开关启用（默认启用）时，可以使用此字段。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "parallelism": {
                                                                      "description": "Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "descriptionCN": "这个配置项定义了任务在任何给定时间应该运行的最大数量的Pod。稳定状态下的实际运行的Pod数量将小于这个数量，即工作剩余量少于最大并行度时（即工作剩余量少于最大并行度）。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "podFailurePolicy": {
                                                                      "description": "Specifies the policy of handling failed pods. In particular, it allows to specify the set of actions and conditions which need to be satisfied to take the associated action. If empty, the default behaviour applies - the counter of failed pods, represented by the jobs's .status.failed field, is incremented and it is checked against the backoffLimit. This field cannot be used in combination with restartPolicy=OnFailure.\n\nThis field is beta-level. It can be used when the `JobPodFailurePolicy` feature gate is enabled (enabled by default).",
                                                                      "descriptionCN": "这个字段用于处理失败的Pod。特别是，它可以指定需要满足的行动和条件来执行关联的操作。如果为空，即使用默认行为，成功或失败的Pod数量计数器（由工作负载的状态字段.status.failed）被递增，并与后退限制进行比较。此字段不能与其他重启策略一起使用。\n\n这个字段是 beta 级别的。当 `JobPodFailurePolicy` 特性开关启用时（默认情况下启用），可以使用它。",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicy"
                                                                  },
                                                                  "podReplacementPolicy": {
                                                                      "description": "podReplacementPolicy specifies when to create replacement Pods. Possible values are: - TerminatingOrFailed means that we recreate pods\n  when they are terminating (has a metadata.deletionTimestamp) or failed.\n- Failed means to wait until a previously created Pod is fully terminated (has phase\n  Failed or Succeeded) before creating a replacement Pod.\n\nWhen using podFailurePolicy, Failed is the the only allowed value. TerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use. This is an beta field. To use this, enable the JobPodReplacementPolicy feature toggle. This is on by default.",
                                                                      "descriptionCN": "Pod替代策略规定何时创建替代Pod。可能的值为：- 终止或失败意味着当我们创建终止（具有metadata.deletionTimestamp）或失败时，我们重新创建Pod。\n- 失败意味着直到先前创建的Pod完全终结（处于Failed或Succeeded状态），才创建一个替代Pod。\n\n使用podFailurePolicy时，只有失败是允许的值。terminatingOrFailed和Failed在podFailurePolicy不被使用时也是允许的值。这是一个 beta 特性。要使用此功能，请启用JobPodReplacementPolicy 功能开关。默认情况下启用。",
                                                                      "type": "string"
                                                                  },
                                                                  "selector": {
                                                                      "description": "A label query over pods that should match the pod count. Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "descriptionCN": "标签查询针对应该匹配Pod数量的Pod。通常，系统会为你设置这个字段。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "suspend": {
                                                                      "description": "suspend specifies whether the Job controller should create Pods or not. If a Job is created with suspend set to true, no Pods are created by the Job controller. If a Job is suspended after creation (i.e. the flag goes from false to true), the Job controller will delete all active Pods associated with this Job. Users must design their workload to gracefully handle this. Suspending a Job will reset the StartTime field of the Job, effectively resetting the ActiveDeadlineSeconds timer too. Defaults to false.",
                                                                      "descriptionCN": "调度设置是否将Job控制器创建Pod。如果Job被设置为true，则Job控制器不会创建Pods。如果Job在创建后（即标志变为true）被暂停，Job控制器会删除与该Job关联的所有活跃Pod。用户必须设计他们的工作负载以优雅地处理这种情况。暂停Job会重置Job的StartTime字段，同时也会重置ActiveDeadlineSeconds计时器。默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "template": {
                                                                      "description": "Describes the pod that will be created when executing a job. The only allowed template.spec.restartPolicy values are \"Never\" or \"OnFailure\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "descriptionCN": "当执行一个任务时，将创建一个Pod。仅允许的模板.specrestartPolicy值为“永不”或“失败”。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  },
                                                                  "ttlSecondsAfterFinished": {
                                                                      "description": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes.",
                                                                      "descriptionCN": "工作完成后限制其生命周期（是否为完成或失败）的ttlSecondsAfterFinished。如果该字段设置，则在Job执行完毕后，会自动删除。当Job被删除时，其生命周期保证（如finalizers）将得到尊重。如果该字段未设置，Job不会自动被删除。如果该字段设置为0，则Job在完成后立即成为可删除的对象。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.JobStatus": {
                                                              "description": "JobStatus represents the current state of a Job.",
                                                              "descriptionCN": "工作状态代表当前工作的情况。",
                                                              "properties": {
                                                                  "active": {
                                                                      "description": "The number of pending and running pods.",
                                                                      "descriptionCN": "待处理和运行的Pod数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "completedIndexes": {
                                                                      "description": "completedIndexes holds the completed indexes when .spec.completionMode = \"Indexed\" in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\".",
                                                                      "descriptionCN": "在.spec.completionMode = \"Indexed\"时，completedIndexes会以文本格式保存完成的索引。这些索引表示为逗号分隔的十进制整数。数字按升序排列。三个或更多连续的数字被压缩并表示为系列的第一个和最后一个元素，通过一个连字符连接。例如，如果完成索引是1, 3, 4, 5 和 7，则它们表示为“1,3-5,7”。",
                                                                      "type": "string"
                                                                  },
                                                                  "completionTime": {
                                                                      "description": "Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is only set when the job finishes successfully.",
                                                                      "descriptionCN": "代表完成该任务的时间。它不保证在单独操作中按发生前顺序设置。它是以RFC3339的形式表示，并使用UTC。只有当工作成功完成时，才设置完成时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "The latest available observations of an object's current state. When a Job fails, one of the conditions will have type \"Failed\" and status true. When a Job is suspended, one of the conditions will have type \"Suspended\" and status true; when the Job is resumed, the status of this condition will become false. When a Job is completed, one of the conditions will have type \"Complete\" and status true. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "descriptionCN": "目前对象的状态的最新观察。当Job失败时，其中一个条件将具有类型“失败”和状态为真的属性；当Job被暂停时，其中一个条件将具有类型“暂停”和状态为真的属性；当Job恢复时，此条件的状态将变为假。当Job完成时，其中一个条件将具有类型“完成”和状态为真的属性。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.batch.v1.JobCondition"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "failed": {
                                                                      "description": "The number of pods which reached phase Failed.",
                                                                      "descriptionCN": "达到失败阶段的pod数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "failedIndexes": {
                                                                      "description": "FailedIndexes holds the failed indexes when backoffLimitPerIndex=true. The indexes are represented in the text format analogous as for the `completedIndexes` field, ie. they are kept as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4, 5 and 7, they are represented as \"1,3-5,7\". This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).",
                                                                      "descriptionCN": "\"FailedIndexes\"包含失效索引时的失败索引。索引在文本格式上与\"completedIndexes\"字段相似，即以逗号分隔的小数整数形式保留。数字按升序列出。三个或更多连续数字被压缩并用系列的第一个和最后一个元素（通过 hyphen 分割）表示。例如，如果失效索引为 1、3、4、5 和 7，则表示 \"1,3-5,7\"。此字段为 beta 级别。当 `JobBackoffLimitPerIndex` 功能选项开关启用（默认情况下启用）时可以使用。",
                                                                      "type": "string"
                                                                  },
                                                                  "ready": {
                                                                      "description": "The number of pods which have a Ready condition.",
                                                                      "descriptionCN": "已准备条件的Pod数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "startTime": {
                                                                      "description": "Represents time when the job controller started processing a job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC.",
                                                                      "descriptionCN": "表示工作控制器开始处理任务的时间。当Job在暂停状态创建时，此字段不会设置，直到第一次被重新激活。每当从暂停状态恢复时，此字段都会重置。它以RFC3339形式表示，并在UTC中表示。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "succeeded": {
                                                                      "description": "The number of pods which reached phase Succeeded.",
                                                                      "descriptionCN": "达到S阶段的 Pod 的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "terminating": {
                                                                      "description": "The number of pods which are terminating (in phase Pending or Running and have a deletionTimestamp).\n\nThis field is beta-level. The job controller populates the field when the feature gate JobPodReplacementPolicy is enabled (enabled by default).",
                                                                      "descriptionCN": "处于等待（在阶段Pending或运行，有删除时间戳）的Pod数量。此字段为beta级别。当JobPodReplacementPolicy特征 gate启用时，该字段将被自动填充。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "uncountedTerminatedPods": {
                                                                      "description": "uncountedTerminatedPods holds the UIDs of Pods that have terminated but the job controller hasn't yet accounted for in the status counters.\n\nThe job controller creates pods with a finalizer. When a pod terminates (succeeded or failed), the controller does three steps to account for it in the job status:\n\n1. Add the pod UID to the arrays in this field. 2. Remove the pod finalizer. 3. Remove the pod UID from the arrays while increasing the corresponding\n    counter.\n\nOld jobs might not be tracked using this field, in which case the field remains null.",
                                                                      "descriptionCN": "未计数终止的Pods存储了已终止但Job Controller尚未在状态计数器中记录的Pod的UID。Job Controller通过finalizer创建Pod。当Pod终止（成功或失败）时，控制器执行以下三步来计算其在Job Status中的影响：\n\n1. 将Pod的UID添加到此字段中的数组中。2. 删除Pod的finalizer。3. 当增加相应counter时，从数组中移除Pod的UID并删除它。\n\n旧的工作可能无法使用这个字段进行跟踪，因此该字段保持为空。",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.UncountedTerminatedPods"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.JobTemplateSpec": {
                                                              "description": "JobTemplateSpec describes the data a Job should have when created from a template",
                                                              "descriptionCN": "JobTemplateSpec 是用于描述 Job 创建时所需的数据。",
                                                              "properties": {
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata of the jobs created from this template. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准模板对象的就业信息。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "期望工作行为的详细说明。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.PodFailurePolicy": {
                                                              "description": "PodFailurePolicy describes how failed pods influence the backoffLimit.",
                                                              "descriptionCN": "PodFailurePolicy描述了失败的Pod如何影响backoffLimit。",
                                                              "properties": {
                                                                  "rules": {
                                                                      "description": "A list of pod failure policy rules. The rules are evaluated in order. Once a rule matches a Pod failure, the remaining of the rules are ignored. When no rule matches the Pod failure, the default handling applies - the counter of pod failures is incremented and it is checked against the backoffLimit. At most 20 elements are allowed.",
                                                                      "descriptionCN": "失败策略列表。规则按顺序评估。一旦一个规则与Pod故障匹配，其他规则将被忽略。当没有规则匹配Pod故障时，默认处理将应用于计数器上的pod故障，并检查其是否超过后退限制。最多允许20个元素。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement": {
                                                              "description": "PodFailurePolicyOnExitCodesRequirement describes the requirement for handling a failed pod based on its container exit codes. In particular, it lookups the .state.terminated.exitCode for each app container and init container status, represented by the .status.containerStatuses and .status.initContainerStatuses fields in the Pod status, respectively. Containers completed with success (exit code 0) are excluded from the requirement check.",
                                                              "descriptionCN": "PodFailurePolicyOnExitCodesRequirement 描述了根据容器退出码处理失败pod的要求。具体来说，它遍历每个app容器和init容器的状态，分别由 Pod status 中的 .status.containerStatuses 和 .status.initContainerStatuses 字段获取。完成成功（exit code 0）的容器不被视为检查要求的一部分。",
                                                              "properties": {
                                                                  "containerName": {
                                                                      "description": "Restricts the check for exit codes to the container with the specified name. When null, the rule applies to all containers. When specified, it should match one the container or initContainer names in the pod template.",
                                                                      "descriptionCN": "对退出码的检查仅限于指定名称的容器。当为null时，该规则适用于所有容器。当指定时，应匹配pod模板中container或initContainer中的一个名字。",
                                                                      "type": "string"
                                                                  },
                                                                  "operator": {
                                                                      "description": "Represents the relationship between the container exit code(s) and the specified values. Containers completed with success (exit code 0) are excluded from the requirement check. Possible values are:\n\n- In: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is in the set of specified values.\n- NotIn: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is not in the set of specified values.\nAdditional values are considered to be added in the future. Clients should react to an unknown operator by assuming the requirement is not satisfied.",
                                                                      "descriptionCN": "代表容器退出代码与指定值之间的关系。成功完成（返回码为0）的容器从需求检查中排除。可能的值包括：\n\n- In: 如果至少有一个容器退出代码在指定值集合中，那么该需求就得到了满足。\n- NotIn: 如果至少有一个容器退出代码不在指定值集合中，那么该需求就得不到满足。\n\n未来可能增加的值被视为添加到需求检查中。客户端应通过假设需求未得到满足来应对未知的运算符。",
                                                                      "type": "string"
                                                                  },
                                                                  "values": {
                                                                      "description": "Specifies the set of values. Each returned container exit code (might be multiple in case of multiple containers) is checked against this set of values with respect to the operator. The list of values must be ordered and must not contain duplicates. Value '0' cannot be used for the In operator. At least one element is required. At most 255 elements are allowed.",
                                                                      "descriptionCN": "设置一组值。返回的容器退出码（如果有多个容器，则可能有多个）与此集合进行比较，以考虑运算符。列表中的值必须按升序排列，并且不应包含重复项。'0'不能用于In运算符。最多允许255个元素。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern": {
                                                              "description": "PodFailurePolicyOnPodConditionsPattern describes a pattern for matching an actual pod condition type.",
                                                              "descriptionCN": "PodFailurePolicyOnPodConditionsPattern 描述了一个匹配实际Pod条件类型的模式。",
                                                              "properties": {
                                                                  "status": {
                                                                      "description": "Specifies the required Pod condition status. To match a pod condition it is required that the specified status equals the pod condition status. Defaults to True.",
                                                                      "descriptionCN": "指定需要的Pod条件状态。要匹配一个Pod条件，必须使所指定的状态等于Pod条件状态。默认为True。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Specifies the required Pod condition type. To match a pod condition it is required that specified type equals the pod condition type.",
                                                                      "descriptionCN": "该配置指定要求的Pod条件类型。要匹配Pod条件，它需要指定的类型等于Pod条件类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.PodFailurePolicyRule": {
                                                              "description": "PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.",
                                                              "descriptionCN": "PodFailurePolicyRule 描述了当满足要求时，如何处理 pod 的失败。每个规则中都可以使用 onExitCodes 和 onPodConditions，但不能同时使用。\n\n在 PodFailurePolicyRule 中，有以下三种情况：\n\n1. 如果 onExitCodes 是 true，则 pod 会立刻停止运行。\n2. 如果 onPodConditions 是 true，则 pod 会在出现特定条件时自动重启（如节点故障）。\n3. 如果 both onExitCodes and onPodConditions are true，则 pod 会按照预期的方式继续运行。\n\n总的来说，PodFailurePolicyRule 的目的是在满足 Pod 的需求时，确保其能够正常运行并避免意外的错误或崩溃。",
                                                              "properties": {
                                                                  "action": {
                                                                      "description": "Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:\n\n- FailJob: indicates that the pod's job is marked as Failed and all\n  running pods are terminated.\n- FailIndex: indicates that the pod's index is marked as Failed and will\n  not be restarted.\n  This value is beta-level. It can be used when the\n  `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).\n- Ignore: indicates that the counter towards the .backoffLimit is not\n  incremented and a replacement pod is created.\n- Count: indicates that the pod is handled in the default way - the\n  counter towards the .backoffLimit is incremented.\nAdditional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.",
                                                                      "descriptionCN": "当需求满足时，pod失败时所采取的动作。可能的值是：\n\n- FailJob: 表示Pod的job被标记为失败，并且所有的运行的Pod都被终止。\n- FailIndex:表示Pod的索引被标记为失败，并且不会被重新启动。这个值是一个 beta 级别的。当 `JobBackoffLimitPerIndex` 特性开关启用（默认开启）时可以使用它。\n- Ignore:表示counter向 .backoffLimit 不增加，并创建一个新的替代Pod。\n- Count:表示Pod以默认方式处理 - counter 向 .backoffLimit 增加。\n\n其他可能的值在未来会被添加到其中。客户端应忽略未知的动作而跳过规则。",
                                                                      "type": "string"
                                                                  },
                                                                  "onExitCodes": {
                                                                      "description": "Represents the requirement on the container exit codes.",
                                                                      "descriptionCN": "表示容器退出码的需求。",
                                                                      "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement"
                                                                  },
                                                                  "onPodConditions": {
                                                                      "description": "Represents the requirement on the pod conditions. The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed.",
                                                                      "descriptionCN": "该要求表示pod条件。其表现为一个包含pod条件模式的列表。如果至少一个模式匹配实际的pod条件，则满足该需求。最多允许20个元素。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.batch.v1.UncountedTerminatedPods": {
                                                              "description": "UncountedTerminatedPods holds UIDs of Pods that have terminated but haven't been accounted in Job status counters.",
                                                              "descriptionCN": "未计数终止的Pods中包含未被纳入Job status counters中的Pod ID。",
                                                              "properties": {
                                                                  "failed": {
                                                                      "description": "failed holds UIDs of failed Pods.",
                                                                      "descriptionCN": "已失败的Pod ID列表。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "succeeded": {
                                                                      "description": "succeeded holds UIDs of succeeded Pods.",
                                                                      "descriptionCN": "成功地获取了succeededPod的UID。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1.CertificateSigningRequest": {
                                                              "description": "CertificateSigningRequest objects provide a mechanism to obtain x509 certificates by submitting a certificate signing request, and having it asynchronously approved and issued.\n\nKubelets use this API to obtain:\n 1. client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client-kubelet\" signerName).\n 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the \"kubernetes.io/kubelet-serving\" signerName).\n\nThis API can be used to request client certificates to authenticate to kube-apiserver (with the \"kubernetes.io/kube-apiserver-client\" signerName), or to obtain certificates from custom non-Kubernetes signers.",
                                                              "descriptionCN": "证书签发请求对象提供了一个机制，通过提交证书签署请求，可以获取x509证书，并将其异步批准并发行。\n\nKubelets使用此API来获得：\n 1. 以“kubernetes.io/kube-apiserver-client-kubelet”签名名的身份验证给kube-apiserver (与\"kubernetes.io/kube-apiserver-client-kubelet\"的signerName)。\n 2. 对于TLS端点kube-apiserver可以安全地连接（与“kubernetes.io/kubelet-serving”签名名）。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此表示对象的版本化 schema。服务器应该将识别到的 schema 转换为内部最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示这个对象所代表的REST资源的一种字符串值。服务器可能通过客户端提交请求时提供的端点推断出此。不能被更新。以CamelCase形式命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "descriptionCN": "当然，我很乐意帮助您翻译。请您提供需要翻译的文字。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec contains the certificate request, and is immutable after creation. Only the request, signerName, expirationSeconds, and usages fields can be set on creation. Other fields are derived by Kubernetes and cannot be modified by users.",
                                                                      "descriptionCN": "详细信息如下：spec 包含证书请求，创建后不可变。只能在创建时设置请求、签发者姓名、过期秒数和使用字段。其他字段由 Kubernetes 自动推断并不能用户修改。",
                                                                      "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status contains information about whether the request is approved or denied, and the certificate issued by the signer, or the failure condition indicating signer failure.",
                                                                      "descriptionCN": "状态包含请求是否被批准或拒绝的信息，以及签名者的证书，或者表示签名失败的条件。",
                                                                      "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1.CertificateSigningRequestCondition": {
                                                              "description": "CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object",
                                                              "descriptionCN": "证书签名请求条件描述了一个对象的证书签署请求条件",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "lastTransitionTime is the time the condition last transitioned from one status to another. If unset, when a new condition type is added or an existing condition's status is changed, the server defaults this to the current time.",
                                                                      "descriptionCN": "最后转移时间是条件从一种状态转到另一种状态时的持续时间。如果没有设置，当添加一个新的条件类型或现有条件的状态发生改变时，服务器会默认将这个设置为当前时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastUpdateTime": {
                                                                      "description": "lastUpdateTime is the time of the last update to this condition",
                                                                      "descriptionCN": "最后更新时间是指这个条件的上一次更新的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message contains a human readable message with details about the request state",
                                                                      "descriptionCN": "消息包含一个可读的人类级别的消息，其中包含了请求状态的详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason indicates a brief reason for the request state",
                                                                      "descriptionCN": "原因表明请求状态的简要原因",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "status of the condition, one of True, False, Unknown. Approved, Denied, and Failed conditions may not be \"False\" or \"Unknown\".",
                                                                      "descriptionCN": "条件状态，True、False或未知之一。批准、拒绝和失败的条件可能不会是“False”或“未知”。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type of the condition. Known conditions are \"Approved\", \"Denied\", and \"Failed\".\n\nAn \"Approved\" condition is added via the /approval subresource, indicating the request was approved and should be issued by the signer.\n\nA \"Denied\" condition is added via the /approval subresource, indicating the request was denied and should not be issued by the signer.\n\nA \"Failed\" condition is added via the /status subresource, indicating the signer failed to issue the certificate.\n\nApproved and Denied conditions are mutually exclusive. Approved, Denied, and Failed conditions cannot be removed once added.\n\nOnly one condition of a given type is allowed.",
                                                                      "descriptionCN": "已知条件：\"批准\"、\"拒绝\"和\"失败\"\n添加方式：通过\"/approval\"子资源，表明请求已被批准，并应由签署者发出。\n添加方式：通过\"/approval\"子资源，表明请求已被拒绝，并不应由签署者发出。\n添加方式：通过\"/status\"子资源，表明签署者未能发行证书。\n批准和拒绝条件是相互排斥的。一旦添加，只能允许一个类型的一个条件被删除。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1.CertificateSigningRequestList": {
                                                              "description": "CertificateSigningRequestList is a collection of CertificateSigningRequest objects",
                                                              "descriptionCN": "证书签发请求列表是一个包含CertificateSigningRequest对象的集合",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化结构。服务器应该将识别到的模式转换为内部最近的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a collection of CertificateSigningRequest objects",
                                                                      "descriptionCN": "items是一个包含CertificateSigningRequest对象的集合。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequest"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，代表这个对象所表示的 REST 资源。服务器可以从客户端提交请求时推测出此字符串。无法更新。以 CamelCase 的方式命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "descriptionCN": "当然可以，您需要我将文字翻译成中文吗？",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1.CertificateSigningRequestSpec": {
                                                              "description": "CertificateSigningRequestSpec contains the certificate request.",
                                                              "descriptionCN": "证书签名请求规范包含证书请求。",
                                                              "properties": {
                                                                  "expirationSeconds": {
                                                                      "description": "expirationSeconds is the requested duration of validity of the issued certificate. The certificate signer may issue a certificate with a different validity duration so a client must check the delta between the notBefore and and notAfter fields in the issued certificate to determine the actual duration.\n\nThe v1.22+ in-tree implementations of the well-known Kubernetes signers will honor this field as long as the requested duration is not greater than the maximum duration they will honor per the --cluster-signing-duration CLI flag to the Kubernetes controller manager.\n\nCertificate signers may not honor this field for various reasons:\n\n  1. Old signer that is unaware of the field (such as the in-tree\n     implementations prior to v1.22)\n  2. Signer whose configured maximum is shorter than the requested duration\n  3. Signer whose configured minimum is longer than the requested duration\n\nThe minimum valid value for expirationSeconds is 600, i.e. 10 minutes.",
                                                                      "descriptionCN": "有效期秒数是颁发证书的请求的有效期。证书签发者可以发布一个具有不同有效期的证书，以便客户端检查发行证书时颁发证书之间的差值来确定实际有效期。\n已知的Kubernetes签署者的v1.22+树实现将尊重这个字段，只要该请求的有效期不大于控制器管理器命令中设置的最大执行期限 --cluster-signing-duration CLI标志。\n签名者可能由于各种原因无法尊重这个字段：\n  1. 不知道这个字段的老签发者（如在v1.22之前）\n  2. 设置的最大执行时间小于请求的有效期\n  3. 设置的最小执行时间大于请求的有效期",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "extra": {
                                                                      "description": "extra contains extra attributes of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
                                                                      "descriptionCN": "\"extra\" 指的是用户创建的证书签名请求所拥有的额外属性。这些属性是由 API 服务器在创建时自动填充并不可变的。",
                                                                      "type": "object"
                                                                  },
                                                                  "groups": {
                                                                      "description": "groups contains group membership of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
                                                                      "descriptionCN": "\"Groups\"包含创建证书签名请求的用户群体成员。在创建时由API服务器动态填充，并不可变。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "request": {
                                                                      "description": "request contains an x509 certificate signing request encoded in a \"CERTIFICATE REQUEST\" PEM block. When serialized as JSON or YAML, the data is additionally base64-encoded.",
                                                                      "descriptionCN": "请求包含一个证书签名请求以PEM格式编码在\"CERTIFICATE REQUEST\"块中。当序列化为JSON或YAML时，数据还会被Base64编码。",
                                                                      "type": "string",
                                                                      "format": "byte",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "signerName": {
                                                                      "description": "signerName indicates the requested signer, and is a qualified name.\n\nList/watch requests for CertificateSigningRequests can filter on this field using a \"spec.signerName=NAME\" fieldSelector.\n\nWell-known Kubernetes signers are:\n 1. \"kubernetes.io/kube-apiserver-client\": issues client certificates that can be used to authenticate to kube-apiserver.\n  Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the \"csrsigning\" controller in kube-controller-manager.\n 2. \"kubernetes.io/kube-apiserver-client-kubelet\": issues client certificates that kubelets use to authenticate to kube-apiserver.\n  Requests for this signer can be auto-approved by the \"csrapproving\" controller in kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n 3. \"kubernetes.io/kubelet-serving\" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.\n  Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the \"csrsigning\" controller in kube-controller-manager.\n\nMore details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers\n\nCustom signerNames can also be specified. The signer defines:\n 1. Trust distribution: how trust (CA bundles) are distributed.\n 2. Permitted subjects: and behavior when a disallowed subject is requested.\n 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.\n 4. Required, permitted, or forbidden key usages / extended key usages.\n 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.\n 6. Whether or not requests for CA certificates are allowed.",
                                                                      "descriptionCN": "签名者名指示所请求的签名，是一个合格的名字。\n\n使用“spec.signerName=NAME”字段Selector筛选列表/Watch请求证书可以过滤签名者名。\n\n已知的Kubernetes签名人包括：\n\n  1. \"kubernetes.io/kube-apiserver-client\"：发布用于与kube-apiserver交互的客户端证书。\n  对于此签署者，请求永远不会由kube-controller-manager自动批准。可用于kube-controller-manager中的“csrsigning”控制器来发放。\n  2. \"kubernetes.io/kube-apiserver-client-kubelet\"：发布用于向kube-apiserver提供认证的客户端证书。对于此签署者，kubelets可以自行发放与kube-apiserver进行安全连接的客户端证书。\n  对于此签署者，kube-controller-manager中的“csrapproving”控制器可以自动批准请求，而kube-controller-manager中的“csrsigning”控制器也可以自动批准请求，并且可以由kube-controller-manager中的“csrsigning”控制器发放。\n  3. “kubernetes.io/kubelet-serving”发布服务证书，允许 kubelets 使用这些证书来提供TLS端点。kube-apiserver可以通过这些证书安全地连接到。\n  对于此签署者，kube-controller-manager从未自动批准请求，但可以由kube-controller-manager中的“csrsigning”控制器手动批准请求。此外，还可以由kube-controller-manager中的“csrsigning”控制器从kube-controller-manager中发放此类证书。\n\n更多详细信息可以在https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers 中找到。\n\n自定义签名者名也可以指定。签名者定义了：\n\n  1. 转移信任：如何（CA缓存）分配信任。\n  2. 授权Subject：当要求被禁止的主题时的行为。\n  3. 请求所需的、允许的、或禁止的X509扩展（以及是否需要subjectAltNames），以及行为，当要求的扩展被拒绝时。\n  4. 所需的、允许的、或禁止的密钥使用/扩展使用。\n  5. 证书过期时间：这是由签名者决定的，管理员可配置。\n  6. 是否允许对CA证书的请求。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "uid contains the uid of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
                                                                      "descriptionCN": "用户ID（uid）包含了创建证书签名请求的用户id。由API服务器在创建时自动填充，并不可变。",
                                                                      "type": "string"
                                                                  },
                                                                  "usages": {
                                                                      "description": "usages specifies a set of key usages requested in the issued certificate.\n\nRequests for TLS client certificates typically request: \"digital signature\", \"key encipherment\", \"client auth\".\n\nRequests for TLS serving certificates typically request: \"key encipherment\", \"digital signature\", \"server auth\".\n\nValid values are:\n \"signing\", \"digital signature\", \"content commitment\",\n \"key encipherment\", \"key agreement\", \"data encipherment\",\n \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\",\n \"server auth\", \"client auth\",\n \"code signing\", \"email protection\", \"s/mime\",\n \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\",\n \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                      "descriptionCN": "",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "username": {
                                                                      "description": "username contains the name of the user that created the CertificateSigningRequest. Populated by the API server on creation and immutable.",
                                                                      "descriptionCN": "用户名包含创建证书请求的用户的名字。由API服务器在创建时自动填充，并不可变。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1.CertificateSigningRequestStatus": {
                                                              "description": "CertificateSigningRequestStatus contains conditions used to indicate approved/denied/failed status of the request, and the issued certificate.",
                                                              "descriptionCN": "证书签发请求状态包含用于表示申请被批准/拒绝/失败状态的条件，以及所发放的证书。",
                                                              "properties": {
                                                                  "certificate": {
                                                                      "description": "certificate is populated with an issued certificate by the signer after an Approved condition is present. This field is set via the /status subresource. Once populated, this field is immutable.\n\nIf the certificate signing request is denied, a condition of type \"Denied\" is added and this field remains empty. If the signer cannot issue the certificate, a condition of type \"Failed\" is added and this field remains empty.\n\nValidation requirements:\n 1. certificate must contain one or more PEM blocks.\n 2. All PEM blocks must have the \"CERTIFICATE\" label, contain no headers, and the encoded data\n  must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.\n 3. Non-PEM content may appear before or after the \"CERTIFICATE\" PEM blocks and is unvalidated,\n  to allow for explanatory text as described in section 5.2 of RFC7468.\n\nIf more than one PEM block is present, and the definition of the requested spec.signerName does not indicate otherwise, the first block is the issued certificate, and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.\n\nThe certificate is encoded in PEM format.\n\nWhen serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:\n\n    base64(\n    -----BEGIN CERTIFICATE-----\n    ...\n    -----END CERTIFICATE-----\n    )",
                                                                      "descriptionCN": "证书由签名者在经过批准条件后通过/status资源填充。该字段设置通过/status子资源进行。\n\n如果证书请求被拒绝，类型为\"Denied\"的条件添加，并且此字段保持为空。如果签署者无法生成证书，则添加类型为\"Failed\"的条件，并且此字段保持为空。\n\n验证要求：\n 1. 确保证书包含一个或多个PEM块。\n 2. 所有PEM块都应包含\"CERTIFICATE\"标签，不包含任何头部，并且编码的数据必须是RFC5280章节4中描述的ber编码的AS/NBA.1证书结构。\n 3. 非PEM内容可能出现在\"CERTIFICATE\".pem块之前或之后，并未经过验证，以允许解释性文本作为RFC7468章节5.2中的说明。\n\n如果存在不止一个PEM块，并且所需的spec.signerName定义并不表明这一点，那么第一个PEM块就是发行证书的，后续的PEM块应被视为中间证书并按照TLS握手的方式呈现。\n\n证书使用PEM格式进行编码。\n\n当以JSON或YAML的形式进行序列化时，数据还额外进行了base64编码，因此它包括：\n\n    base64(\n    -----BEGIN CERTIFICATE-----\n    ...\n    -----END CERTIFICATE-----\n    )",
                                                                      "type": "string",
                                                                      "format": "byte",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "conditions applied to the request. Known conditions are \"Approved\", \"Denied\", and \"Failed\".",
                                                                      "descriptionCN": "这些条件适用于请求。已知的条件有\"批准\"、\"拒绝\"和\"失败\"。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1alpha1.ClusterTrustBundle": {
                                                              "description": "ClusterTrustBundle is a cluster-scoped container for X.509 trust anchors (root certificates).\n\nClusterTrustBundle objects are considered to be readable by any authenticated user in the cluster, because they can be mounted by pods using the `clusterTrustBundle` projection.  All service accounts have read access to ClusterTrustBundles by default.  Users who only have namespace-level access to a cluster can read ClusterTrustBundles by impersonating a serviceaccount that they have access to.\n\nIt can be optionally associated with a particular assigner, in which case it contains one valid set of trust anchors for that signer. Signers may have multiple associated ClusterTrustBundles; each is an independent set of trust anchors for that signer. Admission control is used to enforce that only users with permissions on the signer can create or modify the corresponding bundle.",
                                                              "descriptionCN": "ClusterTrustBundle 是集群范围内的容器，用于X.509信任锚（根证书）。\n\nClusterTrustBundle 对象被认为是集群中任何认证用户可读的，因为它们可以通过使用`clusterTrustBundle`投影被Pod挂载。默认情况下，所有服务帐户都对ClusterTrustBundles具有读取权限。只有域级访问给定集群的用户才能通过 impersonating 他们有权访问的服务帐户来阅读ClusterTrustBundles。\n\n可以选配关联特定分配器，在这种情况下它包含一个有效的信任锚集合签名者。签名者可能有多个相关 ClusterTrustBundles；每个都是该签名者的独立信任锚集合。 admission control 是用来确保只有签署者具有对签名者的权限才能创建或修改对应的捆绑包。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可变表示形式。服务器应该将识别到的结构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交的请求来推测此对象的 Kind 属性。不能被更新。使用 camelCase 编码。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "metadata contains the object metadata.",
                                                                      "descriptionCN": "元数据包含对象元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec contains the signer (if any) and trust anchors.",
                                                                      "descriptionCN": "\"spec\" 表示这个文件是关于什么的，这里具体指的是 \"specification\"。\"contains the signer (if any)\" 这句话的意思是它包含了一个签名者（如果有）。\"and trust anchors\" 这句话的意思是它还包含信任锚点。",
                                                                      "$ref": "#/definitions/io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleList": {
                                                              "description": "ClusterTrustBundleList is a collection of ClusterTrustBundle objects",
                                                              "descriptionCN": "簇信任包列表是一个包含簇信任包对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化格式。服务器应该将识别到的格式转换为内部的最新值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a collection of ClusterTrustBundle objects",
                                                                      "descriptionCN": "Items是一个包含ClusterTrustBundle对象的集合。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.certificates.v1alpha1.ClusterTrustBundle"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，表示这个对象所代表的 REST 资源。服务器可能从客户端提交请求的端点推测这一点。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "metadata contains the list metadata.",
                                                                      "descriptionCN": "\"metadata\" 中包含了 \"list metadata\" 的内容。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.certificates.v1alpha1.ClusterTrustBundleSpec": {
                                                              "description": "ClusterTrustBundleSpec contains the signer and trust anchors.",
                                                              "descriptionCN": "簇信任包规范包含签发者和信任锚。",
                                                              "properties": {
                                                                  "signerName": {
                                                                      "description": "signerName indicates the associated signer, if any.\n\nIn order to create or update a ClusterTrustBundle that sets signerName, you must have the following cluster-scoped permission: group=certificates.k8s.io resource=signers resourceName=<the signer name> verb=attest.\n\nIf signerName is not empty, then the ClusterTrustBundle object must be named with the signer name as a prefix (translating slashes to colons). For example, for the signer name `example.com/foo`, valid ClusterTrustBundle object names include `example.com:foo:abc` and `example.com:foo:v1`.\n\nIf signerName is empty, then the ClusterTrustBundle object's name must not have such a prefix.\n\nList/watch requests for ClusterTrustBundles can filter on this field using a `spec.signerName=NAME` field selector.",
                                                                      "descriptionCN": "签名者名称表明与之关联的签名者，如果有的话。\n为了创建或更新一个设置签名者名称的ClusterTrustBundle，您必须具有以下集群范围权限：group=certificates.k8s.io resource=signers resourceName=<指定的签名者名称> verb=attest。\n如果签名者名称不为空，则 ClusterTrustBundle 对象的名称必须以签名者的名称为前缀（将斜杠转为冒号）。例如，对于签名者名称`example.com/foo`，有效的ClusterTrustBundle对象名称包括`example.com:foo:abc`和`example.com:foo:v1`。\n如果签名者名称为空，则 ClusterTrustBundle 对象的名称不应有前缀。使用`spec.signerName=NAME`字段筛选器，可以对ClusterTrustBundles的列表和/或视图请求进行过滤。",
                                                                      "type": "string"
                                                                  },
                                                                  "trustBundle": {
                                                                      "description": "trustBundle contains the individual X.509 trust anchors for this bundle, as PEM bundle of PEM-wrapped, DER-formatted X.509 certificates.\n\nThe data must consist only of PEM certificate blocks that parse as valid X.509 certificates.  Each certificate must include a basic constraints extension with the CA bit set.  The API server will reject objects that contain duplicate certificates, or that use PEM block headers.\n\nUsers of ClusterTrustBundles, including Kubelet, are free to reorder and deduplicate certificate blocks in this file according to their own logic, as well as to drop PEM block headers and inter-block data.",
                                                                      "descriptionCN": "信任包包含这个包中的X.509信任锚，这是PEM包裹的PEM包装，DER格式化的X.509证书。\n\n数据必须仅由解析为有效的X.509证书的PEM证书块组成。每个证书都应包括CA扩展，其中CA位被设置为1。API服务器将拒绝包含重复证书或使用PEM头的物体。\n\nClusterTrustBundles用户，包括Kubelet，可以根据自己的逻辑重新排列和删除文件中的PEM证书块，以及删除PEM头和跨块数据。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.coordination.v1.Lease": {
                                                              "description": "Lease defines a lease concept.",
                                                              "descriptionCN": "租赁定义了一个租赁概念。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的可变结构体的版本。服务器应该将已识别的结构体转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示这个对象所代表的REST资源的一个字符串值。服务器可以通过客户端提交请求时提供的endpoint来推测此。无法被更新。 camelCase格式，更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec contains the specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "标准包含了租赁的规范。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.coordination.v1.LeaseSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.coordination.v1.LeaseList": {
                                                              "description": "LeaseList is a list of Lease objects.",
                                                              "descriptionCN": "租赁列表是一个租赁对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示的对象的版本化结构。服务器应该将识别的 schema 转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of schema objects.",
                                                                      "descriptionCN": "物品是一个包含结构对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.coordination.v1.Lease"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示此对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时使用的端点推测这个值。不能被更新。CamelCase命名约定。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.coordination.v1.LeaseSpec": {
                                                              "description": "LeaseSpec is a specification of a Lease.",
                                                              "descriptionCN": "租赁规格是一种租赁的规格。",
                                                              "properties": {
                                                                  "acquireTime": {
                                                                      "description": "acquireTime is a time when the current lease was acquired.",
                                                                      "descriptionCN": "获得时间是在当前租赁期被获取的时候。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  },
                                                                  "holderIdentity": {
                                                                      "description": "holderIdentity contains the identity of the holder of a current lease.",
                                                                      "descriptionCN": "持有者身份包含目前租赁的持有者的身份。",
                                                                      "type": "string"
                                                                  },
                                                                  "leaseDurationSeconds": {
                                                                      "description": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed renewTime.",
                                                                      "descriptionCN": "租赁期限秒是一个候选人需要等待以迫使获取的租赁期限。这是衡量最近观察到续期时间与该期限之间的差距。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "leaseTransitions": {
                                                                      "description": "leaseTransitions is the number of transitions of a lease between holders.",
                                                                      "descriptionCN": "租赁过渡是指租赁双方在租赁期间内发生的租赁变更次数。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "renewTime": {
                                                                      "description": "renewTime is a time when the current holder of a lease has last updated the lease.",
                                                                      "descriptionCN": "租赁期限是指租赁合同中明确规定的租赁期间，即租户在一定时间内支付租金的行为。在这个过程中，租赁双方都会对租赁期限进行更新。\n\n然而，有些房东可能会要求租户在租赁期满时立即重新签署租赁协议，也就是所谓的“更新时间”。这主要是因为房东希望确保所有租户都在同一时间段内续签租赁协议，并且可以避免由于租户的延迟或违约而产生的法律纠纷。\n\n所以，在一些情况下，租户需要在更新时间到来之前完成租赁协议的签订。这是因为如果租户在更新时间到来之前完成了租赁协议的签订，那么租户就无需按照之前的租赁期限支付租金，这样可以避免可能的经济损失。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
                                                              "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表AWS中的持久磁盘资源。在将容器挂载到EBS之前，EBS卷必须存在。该卷也必须位于Kubelet所在的同一AWS区域。然而，只能一次挂载为读写。AWS EBS卷支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "descriptionCN": "fsType 是你想挂载的卷的文件系统类型。建议：确保文件系统的类型在主机操作系统上被支持。示例： \"ext4\"、\"xfs\" 和 \"ntfs\"。如果未指定，则自动推断为 \"ext4\"。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "type": "string"
                                                                  },
                                                                  "partition": {
                                                                      "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                                                      "descriptionCN": "分区是您想挂载的卷中的分区。如果不提供，则默认为按卷名挂载。示例：对于/dev/sda1，您指定分区为“1”。类似地，/dev/sda的分区为“0”（或您可以将该属性设置为空）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "descriptionCN": "不显示中文。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeID": {
                                                                      "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "descriptionCN": "volumeID是Amazon EBS持久磁盘资源的唯一标识符。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Affinity": {
                                                              "description": "Affinity is a group of affinity scheduling rules.",
                                                              "descriptionCN": "忠诚度是一种群组的忠诚度调度规则。",
                                                              "properties": {
                                                                  "nodeAffinity": {
                                                                      "description": "Describes node affinity scheduling rules for the pod.",
                                                                      "descriptionCN": "定义Pod节点Affinity调度规则。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
                                                                  },
                                                                  "podAffinity": {
                                                                      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                      "descriptionCN": "描述了 Pod 关联性调度规则（例如，将此 Pod 配置在与其他 Pod 共享相同节点、区域等）。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
                                                                  },
                                                                  "podAntiAffinity": {
                                                                      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                      "descriptionCN": "描述反聚类调度规则（例如避免将此Pod放入与某些其他Pod相同的节点、区域等）。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.AttachedVolume": {
                                                              "description": "AttachedVolume describes a volume attached to a node",
                                                              "descriptionCN": "附件包含附件，描述与节点关联的卷。",
                                                              "properties": {
                                                                  "devicePath": {
                                                                      "description": "DevicePath represents the device path where the volume should be available",
                                                                      "descriptionCN": "设备路径表示设备路径，其中应该有足够的空间供该体积存取。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the attached volume",
                                                                      "descriptionCN": "附件中的卷号",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.AzureDiskVolumeSource": {
                                                              "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                                              "descriptionCN": "AzureDisk 是将主机上的 Azure 数据磁盘映射到 pod 上的 Azure 数据磁盘。",
                                                              "properties": {
                                                                  "cachingMode": {
                                                                      "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                                                                      "descriptionCN": "缓存模式：无，读取模式，写入模式。",
                                                                      "type": "string"
                                                                  },
                                                                  "diskName": {
                                                                      "description": "diskName is the Name of the data disk in the blob storage",
                                                                      "descriptionCN": "数据块存储的磁盘名称为diskName。",
                                                                      "type": "string"
                                                                  },
                                                                  "diskURI": {
                                                                      "description": "diskURI is the URI of data disk in the blob storage",
                                                                      "descriptionCN": "磁盘URI是blob存储中的数据磁盘的URI。",
                                                                      "type": "string"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是挂载的文件系统类型。必须是主机操作系统支持的文件系统类型。例如：“ext4”，“xfs”和“ntfs”。如果未指定则自动推断为“ext4”。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                                                      "descriptionCN": "预期的值共享：每个存储帐户的多个块磁盘；独立：每个存储帐户的一个块磁盘；管理：仅在托管可用性集中的 Azure managed data disk（默认为共享）。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "只读默认为false（可读/写）。在这里，只读将强制VolumeMounts中的只读设置。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.AzureFilePersistentVolumeSource": {
                                                              "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                                              "descriptionCN": "AzureFile表示在主机上挂载的Azure文件服务，并将其绑定到Pod上。",
                                                              "properties": {
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "不带读写的默认设置是false（可读/写）。在这里，我们将强制将 VolumeMounts 的 ReadWrite 设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretName": {
                                                                      "description": "secretName is the name of secret that contains Azure Storage Account Name and Key",
                                                                      "descriptionCN": "秘密名称是包含Azure Storage Account Name和Key的秘密。",
                                                                      "type": "string"
                                                                  },
                                                                  "secretNamespace": {
                                                                      "description": "secretNamespace is the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod",
                                                                      "descriptionCN": "秘密命名空间是包含Azure Storage Account名称和密钥的秘密的命名空间。默认设置与Pod相同。",
                                                                      "type": "string"
                                                                  },
                                                                  "shareName": {
                                                                      "description": "shareName is the azure Share Name",
                                                                      "descriptionCN": "共享名称是Azure的共享名称",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.AzureFileVolumeSource": {
                                                              "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                                              "descriptionCN": "AzureFile 是 Azure File Service 在主机上的映射，并将挂载到 pod 中。",
                                                              "properties": {
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "不读写默认为false（读写）。这里的ReadOnly会强制在VolumeMounts中设置ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretName": {
                                                                      "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                                                                      "descriptionCN": "秘密名是包含Azure Storage Account Name和Key的秘密。",
                                                                      "type": "string"
                                                                  },
                                                                  "shareName": {
                                                                      "description": "shareName is the azure share Name",
                                                                      "descriptionCN": "\"shareName\" 是 Azure 分享名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Binding": {
                                                              "description": "Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
                                                              "descriptionCN": "绑定将一个对象连接到另一个；例如，pod通过调度器与节点绑定。已在1.7中过时，请使用pods的bindings子资源代替。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化结构。服务器应该将识别到的结构转换为内部最新的值，可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示此对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求的端点推测这个值。无法更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "target": {
                                                                      "description": "The target object that you want to bind to the standard object.",
                                                                      "descriptionCN": "你想要绑定到标准对象的目标对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CSIPersistentVolumeSource": {
                                                              "description": "Represents storage that is managed by an external CSI volume driver (Beta feature)",
                                                              "descriptionCN": "代表由外部CSI驱动器管理的存储。这是Beta功能",
                                                              "properties": {
                                                                  "controllerExpandSecretRef": {
                                                                      "description": "controllerExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerExpandVolume call. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
                                                                      "descriptionCN": "控制器扩展秘密ref 是一个指向包含敏感信息以传递给CSI驱动器完成CSI控制器扩展卷的secret对象的引用。这个字段是可选的，如果不需要 secret，可能为空。如果秘密对象包含多个secret，则所有secret都会被传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "controllerPublishSecretRef": {
                                                                      "description": "controllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
                                                                      "descriptionCN": "控制器PublishSecretRef是一个指向包含敏感信息的secret对象，这个secret对象将被CSI驱动完成ControllerPublishVolume和ControllerUnpublishVolume的方法。这个字段是可选的，并且如果不需要秘密，则可能为空。如果secret对象包含多个secret，则所有 secret 都会被传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "driver": {
                                                                      "description": "driver is the name of the driver to use for this volume. Required.",
                                                                      "descriptionCN": "驾驶员是用于此卷目的使用的驾驶员的名称。要求。",
                                                                      "type": "string"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\".",
                                                                      "descriptionCN": "文件系统类型要挂载。必须是支持主机操作系统中的文件系统类型。例如：\"ext4\", \"xfs\", \"ntfs\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeExpandSecretRef": {
                                                                      "description": "nodeExpandSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeExpandVolume call. This field is optional, may be omitted if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
                                                                      "descriptionCN": "nodeExpandSecretRef是一个指向包含敏感信息的秘密对象，用于向CSI驱动器传递完成CSI NodeExpandVolume调用所需的敏感信息。该字段是可选的，如果不需要秘密，则可以省略。如果秘密对象包含多个秘密，所有秘密都会被传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "nodePublishSecretRef": {
                                                                      "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
                                                                      "descriptionCN": "NodePublishSecretRef 是指向包含敏感信息以向CSI驱动器完成节点发布和取消发布 volumes 的秘密对象的引用。该字段是可选的，如果不需要则为空。如果秘密对象包含不止一个秘密，则所有秘密都传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "nodeStageSecretRef": {
                                                                      "description": "nodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls. This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
                                                                      "descriptionCN": "nodeStageSecretRef 是一个指向包含敏感信息以传递给CSI驱动器完成节点阶段volume 和 volume 和unstagevolume的secret对象的参考。这个字段是可选的，如果不需要秘密，则可能为空。如果秘密对象包含了多个秘密，则全部秘密都会被传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).",
                                                                      "descriptionCN": "为控制器发布卷的只读值。默认为 false（可读/写）。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeAttributes": {
                                                                      "description": "volumeAttributes of the volume to publish.",
                                                                      "descriptionCN": "发布的volume的属性。",
                                                                      "type": "object"
                                                                  },
                                                                  "volumeHandle": {
                                                                      "description": "volumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.",
                                                                      "descriptionCN": "\"volumeHandle\" 是由 CSI volume plugin 的 \"CreateVolume\" 方法返回的唯一 volume 名称，用于在后续调用中参考该 Volume。此参数是必需的。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CSIVolumeSource": {
                                                              "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
                                                              "descriptionCN": "代表卷的源位置，由外部CSI驱动管理。",
                                                              "properties": {
                                                                  "driver": {
                                                                      "description": "driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
                                                                      "descriptionCN": "司机是用于处理这个卷的CSI驱动程序的名称。咨询你的管理员，以获取正确的注册在集群中的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
                                                                      "descriptionCN": "文件系统类型以mount进行映射。例如：\"ext4\"、\"xfs\"和\"ntfs\"。如果没有提供，就会将空值传递给与其关联的CSI驱动器，这将决定应用默认的文件系统。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodePublishSecretRef": {
                                                                      "description": "nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
                                                                      "descriptionCN": "NodePublishSecretRef 是指包含敏感信息以完成 CSI驱动完成 NodePublishVolume 和 NodeUnpublishVolume 调用的秘密对象的引用。此字段是可选的，如果不需要秘密，则可能为空。如果秘密对象包含多个秘密，则将所有秘密引用传递。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).",
                                                                      "descriptionCN": "只读模式指定了对卷的只读配置。默认为false（读写）。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeAttributes": {
                                                                      "description": "volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
                                                                      "descriptionCN": "\"volumeAttributes\"存储驱动器特定属性，这些属性被传递给CSI驱动器。参阅您的驱动程序文档以支持的值。",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Capabilities": {
                                                              "description": "Adds and removes POSIX capabilities from running containers.",
                                                              "descriptionCN": "为正在运行的容器添加或删除POSIX能力。",
                                                              "properties": {
                                                                  "add": {
                                                                      "description": "Added capabilities",
                                                                      "descriptionCN": "新增功能",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "drop": {
                                                                      "description": "Removed capabilities",
                                                                      "descriptionCN": "移除能力",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CephFSPersistentVolumeSource": {
                                                              "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表Ceph文件系统挂载，这个挂载持续整个Pod Cephfs卷不支持所有权管理和SELinux标签化。",
                                                              "properties": {
                                                                  "monitors": {
                                                                      "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "监控是必需的：监控是一个Ceph监控系统的集合。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "path": {
                                                                      "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                                                      "descriptionCN": "挂载路径可选：作为挂载的根，而不是完整的Ceph树，默认是/",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "只读模式是可选的：默认为false（读写）。在这里，将强制使用只读模式在VolumeMounts中。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretFile": {
                                                                      "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "秘密文件是可选的：秘密文件是用于用户键的路径，默认为/etc/ceph/user.secret。更多信息可以在https://examples.k8s.io/volumes/cephfs/README.md#如何使用它中找到。",
                                                                      "type": "string"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "秘密Ref 是可选的： SecretRef 是用于 User 用户的认证秘密的引用，默认为空。更多信息： https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "user": {
                                                                      "description": "user is Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "用户是可选的：用户是rados用户名，默认为admin。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CephFSVolumeSource": {
                                                              "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表一个Ceph文件系统挂载，该挂载会持续到Pod Cephfs卷的生命周期。Cephfs卷不支持所有权管理和SELinux重新标签。",
                                                              "properties": {
                                                                  "monitors": {
                                                                      "description": "monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "监控器是必需的： 监控器是一个Ceph监控列表 More info: <https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it>",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "path": {
                                                                      "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                                                      "descriptionCN": "挂载路径可选：作为挂载的根，而不是完整的Ceph树，默认为/",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "禁止读取：默认为false（可写）。在这里，将强制使用VolumeMounts中的ReadOnly设置。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretFile": {
                                                                      "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "秘密文件可选：秘密文件是User用户的键环路径，默认为/etc/ceph/user.secret。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "string"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "密钥Ref是可选的：密钥Ref是指User认证密钥，默认为空。更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "user": {
                                                                      "description": "user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                                                      "descriptionCN": "用户可选：User是Rados用户名，默认为admin更多信息：https://examples.k8s.io/volumes/cephfs/README.md#如何使用它",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CinderPersistentVolumeSource": {
                                                              "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "Openstack中的cinder卷资源。在将容器挂载到卷之前，卷必须先存在。卷还必须位于kubelet所在的相同区域。Cinder卷支持所有权管理和SELinux标签调整。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "文件系统类型，用于挂载。必须是主机操作系统支持的文件系统类型。示例：\"ext4\"、\"xfs\"和\"ntfs\"。如果未指定，则自动推断为\"ext4\"。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "这个字段是可选的，其默认值为false（读写）。在VolumeMounts中启用ReadOnly会强制设置ReadOnly属性。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is Optional: points to a secret object containing parameters used to connect to OpenStack.",
                                                                      "descriptionCN": "秘密Ref 是可选的：它指向一个包含 OpenStack 中用于连接的参数的秘密对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "volumeID": {
                                                                      "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": " volumeID 是用于在 cinder 中识别卷的唯一标识符。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.CinderVolumeSource": {
                                                              "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "在Openstack中代表了一个cinder volume资源。在将容器挂载到volume之前，volume必须存在。volume也必须在同一区域（例如kubelet）上。Cinder volumes支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "文件系统类型是需要挂载的文件系统的类型。必须是支持主机操作系统的服务器文件系统的类型。示例： \"ext4\"、\"xfs\"、\"ntfs\"。如果未指定，则被自动推断为\"ext4\"。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "不显示文字，但是可以翻译为：\n\n```markdown\n默认情况下（只读）是false（可读/写）。如果不设置ReadOnly，则会在VolumeMounts中强制使用ReadOnly设置。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md\n```\n\n这里的` readOnly defaults to false (read/write) `将原始文本转换为标准的Markdown格式，并且没有忽略任何细节。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.",
                                                                      "descriptionCN": "秘密Ref 是可选的：它指向一个包含用于连接 OpenStack 参数的秘密对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "volumeID": {
                                                                      "description": "volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "Volume ID 是用于在 Cinder 中识别卷的标识符。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ClaimSource": {
                                                              "description": "ClaimSource describes a reference to a ResourceClaim.\n\nExactly one of these fields should be set.  Consumers of this type must treat an empty object as if it has an unknown value.",
                                                              "descriptionCN": "\"ClaimSource\"描述了一个引用到一个\"ResourceClaim\"的字段。这种类型的消费者必须对待空对象视作其值未知。",
                                                              "properties": {
                                                                  "resourceClaimName": {
                                                                      "description": "ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.",
                                                                      "descriptionCN": "该资源声称名称是与此Pod所在的命名空间中的同一个资源声称对象的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceClaimTemplateName": {
                                                                      "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.",
                                                                      "descriptionCN": "资源claim模板名称是与此Pod在同一命名空间中的ResourceClaimTemplate对象的名字。该模板将用于创建一个新的ResourceClaim，该资源 claim 将绑定到此Pod。当此Pod被删除时，该ResourceClaim也会被删除。Pod名称和资源名，以及一个生成的组件，将用作形成ResourceClaim的独特名称，这将在Pod.status.resourceClaimStatuses中记录。这个字段是不可变的，创建ResourceClaim后控制平面不会对相关资源 claim 进行任何更改。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ClientIPConfig": {
                                                              "description": "ClientIPConfig represents the configurations of Client IP based session affinity.",
                                                              "descriptionCN": "\"ClientIPConfig\"代表基于会话偏好的客户端IP配置。",
                                                              "properties": {
                                                                  "timeoutSeconds": {
                                                                      "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).",
                                                                      "descriptionCN": "会话持久化超时秒数是指客户端IP类型会话的停留时间，其值必须大于0且小于等于86400（一天）如果ServiceAffinity为\"ClientIP\"，默认值为10800（三小时）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ClusterTrustBundleProjection": {
                                                              "description": "ClusterTrustBundleProjection describes how to select a set of ClusterTrustBundle objects and project their contents into the pod filesystem.",
                                                              "descriptionCN": "ClusterTrustBundleProjection描述了如何选择一组ClusterTrustBundle对象，并将其内容导入到Pod文件系统中。",
                                                              "properties": {
                                                                  "labelSelector": {
                                                                      "description": "Select all ClusterTrustBundles that match this label selector.  Only has effect if signerName is set.  Mutually-exclusive with name.  If unset, interpreted as \"match nothing\".  If set but empty, interpreted as \"match everything\".",
                                                                      "descriptionCN": "筛选所有匹配这个标签选择器的ClusterTrustBundles。只有当signerName设置时有效。互斥与name。如果未设置，则解释为“匹配空”。如果设置但为空，解释为“匹配全部”。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "name": {
                                                                      "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector.",
                                                                      "descriptionCN": "通过对象名称选择一个单个ClusterTrustBundle。与signerName和labelSelector相互独立。",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.",
                                                                      "descriptionCN": "如果真的，那么如果引用的ClusterTrustBundle(s)不可用，则不应阻止Pod的启动。如果使用名称，那么允许不定义命名的ClusterTrustBundle。如果使用signerName，那么组合的signerName和labelSelector可以匹配零个ClusterTrustBundle。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "path": {
                                                                      "description": "Relative path from the volume root to write the bundle.",
                                                                      "descriptionCN": "相对于磁盘根目录的路径，将文件捆绑写入。",
                                                                      "type": "string"
                                                                  },
                                                                  "signerName": {
                                                                      "description": "Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated.",
                                                                      "descriptionCN": "选择所有符合这个签名名称的ClusterTrustBundle。互斥与名字。 所有被选择的ClusterTrustBundle的内容将统一并去重。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ComponentCondition": {
                                                              "description": "Information about the condition of a component.",
                                                              "descriptionCN": "组件状态的信息。",
                                                              "properties": {
                                                                  "error": {
                                                                      "description": "Condition error code for a component. For example, a health check error code.",
                                                                      "descriptionCN": "组件状态错误码。例如，健康检查错误代码。",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "Message about the condition for a component. For example, information about a health check.",
                                                                      "descriptionCN": "关于组件的状况消息。例如，健康检查的信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".",
                                                                      "descriptionCN": "组件状态。\"健康\"的有效值有：\"真\"、\"假\"或\"未知\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of condition for a component. Valid value: \"Healthy\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ComponentStatus": {
                                                              "description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info. Deprecated: This API is deprecated in v1.19+",
                                                              "descriptionCN": "组件状态（ComponentStatus）包含集群验证信息。已过时：此API在v1.19及以后的版本中已被废弃。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化的 schema。服务器应该将可识别的 schema 转换为内部最新的值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "List of component conditions observed",
                                                                      "descriptionCN": "观察到的组件条件列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ComponentCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind” 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可以从客户端提交请求的端点推测出这一点。不能被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ComponentStatusList": {
                                                              "description": "Status of all the conditions for the component as a list of ComponentStatus objects. Deprecated: This API is deprecated in v1.19+",
                                                              "descriptionCN": "组件的状态列表。已过时：此API在v1.19+之前已被废弃",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的版本化的结构。服务器应该将识别的格式转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ComponentStatus objects.",
                                                                      "descriptionCN": "组件状态对象列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ComponentStatus"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是表示这个对象所代表的REST资源的一个字符串值。服务器可能根据客户端提交请求时提供的端点推断出这个字符串。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMap": {
                                                              "description": "ConfigMap holds configuration data for pods to consume.",
                                                              "descriptionCN": "配置Map用于为Pod提供消费配置数据。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示的对象的可变结构化表示形式。服务器应该将已识别的模式转换为内部最近的有效值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "binaryData": {
                                                                      "description": "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.",
                                                                      "descriptionCN": "二进制数据包含二进制数据。每个键必须由字母、-、_或点组成。二进制数据可以包含不在UTF-8范围内的一系列字节序列。存储在二进制数据中的键不得与Data字段的键重叠，这是在验证过程中强制执行的。使用这个字段将需要1.10+ API服务器和kubelet。",
                                                                      "type": "object"
                                                                  },
                                                                  "data": {
                                                                      "description": "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
                                                                      "descriptionCN": "数据包含配置数据。每个键必须由字母数字字符，-_,或点组成。非UTF-8字节序列的值必须使用BinaryData字段。在数据存储中，必须避免与BinaryData字段中的键重叠，这是在验证过程中强制执行的。",
                                                                      "type": "object"
                                                                  },
                                                                  "immutable": {
                                                                      "description": "Immutable, if set to true, ensures that data stored in the ConfigMap cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.",
                                                                      "descriptionCN": "不设置为true，那么ConfigMap中存储的数据将不能被更新（只能修改对象的元数据）。如果未设置为false，则可以在任何时间对字段进行修改。默认值为nil。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型表示这个对象所代表的REST资源。服务器可以根据客户端提交请求时的端点推测出此字符串。不能被更新。在 camelCase 下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapEnvSource": {
                                                              "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
                                                              "descriptionCN": "配置Map环境源选择一个ConfigMap来填充环境变量。\n\n目标ConfigMap的Data字段中的内容将代表键值对作为环境变量。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "Specify whether the ConfigMap must be defined",
                                                                      "descriptionCN": "配置映射是否必须定义",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapKeySelector": {
                                                              "description": "Selects a key from a ConfigMap.",
                                                              "descriptionCN": "选择 ConfigMap 中的键。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "The key to select.",
                                                                      "descriptionCN": "选择的关键。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                                                      "descriptionCN": "确定是否需要定义 ConfigMap 的 key 或其值。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapList": {
                                                              "description": "ConfigMapList is a resource containing a list of ConfigMap objects.",
                                                              "descriptionCN": "配置映射列表是一个包含配置映射对象的资源。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可变表示形式。服务器应该将识别的模式转换为内部最新的值，且可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of ConfigMaps.",
                                                                      "descriptionCN": "物品是配置文件的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMap"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是表示这个对象所代表的REST资源的一种字符串值。服务器可能通过客户端提交请求时提供的端点来推测此值。不能被更新。在 camelCase 编码下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapNodeConfigSource": {
                                                              "description": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node. This API is deprecated since 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration",
                                                              "descriptionCN": "ConfigMapNodeConfigSource包含了用于指定 ConfigMap 作为 Node 的配置源的信息。此 API 已经过时，具体信息如下：https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration",
                                                              "properties": {
                                                                  "kubeletConfigKey": {
                                                                      "description": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.",
                                                                      "descriptionCN": "KubeletConfigKey定义了引用的ConfigMap中哪一指定键对应于KubeletConfiguration结构。在所有情况下都必须提供该字段。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.",
                                                                      "descriptionCN": "名称是引用的配置映射的元数据。此字段在所有情况下都是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.",
                                                                      "descriptionCN": "命名空间是引用的ConfigMap的元数据.metadata_namespace。在所有情况下都必须设置这个字段。",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceVersion": {
                                                                      "description": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
                                                                      "descriptionCN": "资源版本是被引用的ConfigMap的元数据 ResourceVersion。这在Node.Spec 中是禁止的，但在 Node.Status 中是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
                                                                      "descriptionCN": "唯一标识符是引用的ConfigMap的元数据。在NodeSpec中，该字段是禁止的；在Node.Status中，该字段是必需的。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapProjection": {
                                                              "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
                                                              "descriptionCN": "将目标ConfigMap的Data字段的内容转换为投影体积。根据Data字段中的键，使用keys作为文件名，除非items元素中包含特定映射键到路径的具体配置。\n\n注意：与没有默认模式的configmap volume源相同。",
                                                              "properties": {
                                                                  "items": {
                                                                      "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                      "descriptionCN": "如果没有指定，数据字段的ConfigMap中的每个键值对都会被投影到一个文件中。如果有指定，列出的键将被投影到指定路径上，未列出的键不会存在。如果指定了一个不在ConfigMap中存在的键，则卷设置时会错误，除非它标记为可选。路径必须是相对的，并且不应该包含 '..' 路径或以 '..' 开头。\n\n总之，在配置映射中，所有未在指定路径下出现的键都将被假设不存在，并被写入一个名为该键的文件中。当指定了列表中的任何键时，这些键将被置于指定的路径上，而未指定的键则不会出现在路径上。如果一个键不存在于ConfigMap中，如果未指定并标记为可选，则卷设置将产生错误。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                                                                      }
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "命名实体指代。更多详情：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                                      "descriptionCN": "可选地指定是否需要定义 ConfigMap 或其键。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ConfigMapVolumeSource": {
                                                              "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "将目标ConfigMap的数据字段内容转换为卷。使用Data字段中的键作为文件名，除非Items元素中包含特定映射的key到路径的特殊标记。ConfigMap卷支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "defaultMode": {
                                                                      "description": "defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "默认模式是可选的：用于设置文件创建时默认权限的位。必须是一个二进制值在0000到0777之间，或一个十进制值在0到511之间。YAML接受两种类型的位值，JSON需要模式位为decimal值。默认值为0644。路径内部的目录不会受到这个设置的影响。这可能会与影响文件模式的其他选项（如fsGroup）产生冲突，结果可能被设置为其他模式位。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "items": {
                                                                      "description": "items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                      "descriptionCN": "未指定的情况下，引用的ConfigMap中的Data字段中的每个键值对将被映射到卷中的文件名是键和内容。如果指定，则列出的键将被映射到指定的路径，未列出的键将不会出现在列表中。如果指定了一个不在ConfigMap中的键，卷设置将错误，除非它被标记为可选。路径必须是相对的，并且不应包含'..'路径或以'..'开头。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                                                                      }
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考对象的名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                                      "descriptionCN": "可选地指定 ConfigMap 的键或其必须被定义。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Container": {
                                                              "description": "A single application container that you want to run within a pod.",
                                                              "descriptionCN": "一个想要在Pod中运行的应用容器。",
                                                              "properties": {
                                                                  "args": {
                                                                      "description": "Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "descriptionCN": "对于入口点的论证。如果这个不提供的话，容器图像的CMD就会被使用。变量引用$(VAR_NAME)会在容器环境中的环境中展开。如果一个变量无法解析，输入字符串中引用变量的引用将保持不变。双等号$会减少到一个单等号，这样就可以避免使用$(VAR_NAME)$语法：即\"$$(VAR_NAME)\"将会产生字符串形式的\"(VAR_NAME)\"。即使变量存在，也永远不会被更新。更多信息：https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "command": {
                                                                      "description": "Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "descriptionCN": "入口数组。在shell中未执行。如果容器图的ENTRYPOINT不提供，则使用该图。环境变量引用$(VAR_NAME)使用容器的环境。如果一个变量无法被解析，输入字符串中的引用将保持不变。双$将减少为单$，这允许转义$(VAR_NAME)语法：即\"$$(VAR_NAME)\"会产生字符串引用来。转义引用永远不会被扩展，无论变量是否存在与否。不能更新。更多信息：https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#运行一个命令在 shell 中",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "env": {
                                                                      "description": "List of environment variables to set in the container. Cannot be updated.",
                                                                      "descriptionCN": "容器中的环境变量列表。不能被更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "envFrom": {
                                                                      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                                                      "descriptionCN": "容器中的环境变量源列表。源定义中的键必须是C标识符。当容器启动时，所有无效的键都将被报告为事件。当一个键存在于多个来源时，最后一个来源关联的价值将优先级高于其他来源定义的价值。无法更新。\n\n1. /etc/sysconfig/systemd\n\n2. /etc/rc.local\n\n3. /usr/local/bin/echo\n\n4. ~/.bashrc\n\n5. /usr/local/etc/profile.d外壳文件",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
                                                                      }
                                                                  },
                                                                  "image": {
                                                                      "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                                                                      "descriptionCN": "容器图像名称。更多信息：https://kubernetes.io/docs/concepts/containers/images 这个字段是可选的，允许高级配置管理器根据工作负载控制器（如Deployments和StatefulSets）默认或重写容器图像。",
                                                                      "type": "string"
                                                                  },
                                                                  "imagePullPolicy": {
                                                                      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                                                      "descriptionCN": "图片拉取策略。当:latest标签被指定时，将始终使用此策略；否则，则始终使用IfNotPresent策略。不能更新。更多信息：https://kubernetes.io/docs/concepts/containers/images# updating-images",
                                                                      "type": "string"
                                                                  },
                                                                  "lifecycle": {
                                                                      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                                                                      "descriptionCN": "管理系统在应对容器生命周期事件时应采取的行动。不能更新。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
                                                                  },
                                                                  "livenessProbe": {
                                                                      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "descriptionCN": "定期检查容器的生存状态。如果探测器失败，容器将被重新启动。无法进行更新。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                                                                      "descriptionCN": "指定的DNS_LABEL为容器名称。每个pod中的容器必须具有唯一的名称（DNS_LABEL）。不能被更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "ports": {
                                                                      "description": "List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
                                                                      "descriptionCN": "容器中暴露的端口列表。在这里没有指定端口并不会阻止端口被暴露。在容器内部，任何监听默认“0.0.0.0”地址的端口都是可以访问的。通过战略合并补丁修改这个数组可能会破坏数据。更多信息，请参阅https://github.com/kubernetes/kubernetes/issues/108255。不能更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "containerPort",
                                                                          "protocol"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "readinessProbe": {
                                                                      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "descriptionCN": "容器服务准备周期性探测。如果探测失败，则容器将从服务端点移除。无法更新。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "resizePolicy": {
                                                                      "description": "Resources resize policy for the container.",
                                                                      "descriptionCN": "容器资源的resize policy。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "这个容器需要的计算资源无法更新。更多信息：https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
                                                                  },
                                                                  "restartPolicy": {
                                                                      "description": "RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is \"Always\". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.",
                                                                      "descriptionCN": "重启策略定义了Pod中容器的重启行为。这个字段可能仅用于init容器，且仅允许值为\"Always\"。对于非init容器或当此字段未指定时，Pod的重启策略和容器类型决定了容器的行为。将RestartPolicy设置为\"Always\"对init容器的影响是：在退出时，初始化容器将持续重启，直到所有常规容器都终止。一旦所有常规容器完成，具有 RestartPolicy \"Always\" 的所有init容器也将被关闭。这种生命周期与正常init容器不同，并常被称为一个\"子进程\"容器。虽然初始化容器仍然以初始化容器序列开始，但它不等待容器完成后再执行下一个初始化容器。相反，下一个初始化容器会在初始化容器启动后立即开始，或者在任何启动探测器成功完成之前启动。",
                                                                      "type": "string"
                                                                  },
                                                                  "securityContext": {
                                                                      "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                                                      "descriptionCN": "安全上下文定义了容器应该运行的安全选项。如果设置，安全上下文的字段将覆盖PodSecurityContext的相应字段。更多信息：https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
                                                                  },
                                                                  "startupProbe": {
                                                                      "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "descriptionCN": "创业探测器显示Pod已经成功初始化。如果指定，其他探测将不会被执行直到此成功完成。如果该探测失败，Pod将在重启时与liveness探测一样进行。这可用于在Pod的生命周期开始时提供不同的探测参数，当它可能需要长时间加载数据或热缓存时，而此时处于稳定状态操作。\n\n更多详情：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "stdin": {
                                                                      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                                                                      "descriptionCN": "容器是否应该在容器运行时为stdin分配缓冲区。如果不设置，从stdin读取容器将总是返回EOF。默认设置为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "stdinOnce": {
                                                                      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                                                                      "descriptionCN": "容器运行时是否应该在单个连接完成后关闭stdin通道？当stdin为真时，stdin流将持续在同一连接上打开。如果stdinOnce设置为真，则容器启动时打开stdin，直到第一个客户端连接到stdin，并在此期间保持打开并接受数据，直到客户端断开连接，此时stdin将被关闭并保持关闭，直到容器重启。如果这个标志为假，则容器读取stdin的进程永远不会接收到EOF。默认值为假。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "terminationMessagePath": {
                                                                      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                                                                      "descriptionCN": "容器终止信息应写入的文件路径被容器的文件系统挂载。消息旨在提供简短的最终状态，如断言失败消息。如果大于4096字节，则会被节点截断。所有容器之间的总消息长度将受到限制为12KB。默认设置为/dev/termination-log。不能更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "terminationMessagePolicy": {
                                                                      "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                                                                      "descriptionCN": "终止信息应该如何填充？文件将使用终止消息路径的内容来在成功和失败时更新容器状态消息。如果终止消息文件为空，并且容器因错误而退出，那么日志输出的最后一条内容将被用来填充日志输出。日志输出的最大长度为2048字节或80行，两者中较小者为准。默认设置为File。无法进行更改。",
                                                                      "type": "string"
                                                                  },
                                                                  "tty": {
                                                                      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                                                                      "descriptionCN": "这个容器是否应该分配一个TTY，还需要'stdin'为真。默认情况下为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeDevices": {
                                                                      "description": "volumeDevices is the list of block devices to be used by the container.",
                                                                      "descriptionCN": "容器使用的块设备列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "volumeMounts": {
                                                                      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                                                                      "descriptionCN": "容器内的卷应被挂载到文件系统的挂载点。不能更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "workingDir": {
                                                                      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                                                      "descriptionCN": "容器的工作目录。如果没有指定，容器运行时的默认设置将被使用，这可能在容器镜像中配置。无法进行更新。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerImage": {
                                                              "description": "Describe a container image",
                                                              "descriptionCN": "描述一个容器图像",
                                                              "properties": {
                                                                  "names": {
                                                                      "description": "Names by which this image is known. e.g. [\"kubernetes.example/hyperkube:v1.0.7\", \"cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7\"]",
                                                                      "descriptionCN": "图像名称的称呼。例如 [\"kubernetes.example/hyperkube:v1.0.7\", \"cloud-vendor.registry.example/cloud-vendor/hyperkube:v1.0.7\"]",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "sizeBytes": {
                                                                      "description": "The size of the image in bytes.",
                                                                      "descriptionCN": "图片的大小为字节。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerPort": {
                                                              "description": "ContainerPort represents a network port in a single container.",
                                                              "descriptionCN": "容器Port表示单个容器中的网络端口。",
                                                              "properties": {
                                                                  "containerPort": {
                                                                      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                                                                      "descriptionCN": "在pod的IP地址上暴露的端口数量。这个必须是一个有效的端口号，0 < x < 65536。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "hostIP": {
                                                                      "description": "What host IP to bind the external port to.",
                                                                      "descriptionCN": "对外端口的绑定主机IP。",
                                                                      "type": "string"
                                                                  },
                                                                  "hostPort": {
                                                                      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                                                                      "descriptionCN": "主机上暴露的端口数量。如果指定，必须是一个有效的端口号，0 < x < 65536。如果HostNetwork指定，则必须匹配ContainerPort。大多数容器不需要这个。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "name": {
                                                                      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                                                                      "descriptionCN": "如果指定，这必须是一个IANA_SVC_NAME且在Pod中唯一。Pod中的每个命名端口都应具有唯一的名称。服务可以通过命名端口参考的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                                                                      "descriptionCN": "端口协议。必须是UDP、TCP或SCTP。默认为“TCP”。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerResizePolicy": {
                                                              "description": "ContainerResizePolicy represents resource resize policy for the container.",
                                                              "descriptionCN": "容器resizepolicy代表容器的资源 resize 政策。",
                                                              "properties": {
                                                                  "resourceName": {
                                                                      "description": "Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.",
                                                                      "descriptionCN": "该资源的缩放政策适用于哪些资源。支持值：CPU、内存。",
                                                                      "type": "string"
                                                                  },
                                                                  "restartPolicy": {
                                                                      "description": "Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.",
                                                                      "descriptionCN": "重启策略应用于指定资源被重新配置时。如果没有指定，它将默认为不需要。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerState": {
                                                              "description": "ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.",
                                                              "descriptionCN": "容器状态持有容器可能的状态。只能指定其一个成员。如果没有被指定，将默认为ContainerStateWaiting。",
                                                              "properties": {
                                                                  "running": {
                                                                      "description": "Details about a running container",
                                                                      "descriptionCN": "关于运行容器的详细信息",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateRunning"
                                                                  },
                                                                  "terminated": {
                                                                      "description": "Details about a terminated container",
                                                                      "descriptionCN": "关于终止的容器详情",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateTerminated"
                                                                  },
                                                                  "waiting": {
                                                                      "description": "Details about a waiting container",
                                                                      "descriptionCN": "等待容器的详细信息",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateWaiting"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerStateRunning": {
                                                              "description": "ContainerStateRunning is a running state of a container.",
                                                              "descriptionCN": "容器状态运行是一个容器处于运行状态的状态。",
                                                              "properties": {
                                                                  "startedAt": {
                                                                      "description": "Time at which the container was last (re-)started",
                                                                      "descriptionCN": "容器最后一次重新启动的时间（恢复）",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerStateTerminated": {
                                                              "description": "ContainerStateTerminated is a terminated state of a container.",
                                                              "descriptionCN": "容器状态终止是一种容器的状态。",
                                                              "properties": {
                                                                  "containerID": {
                                                                      "description": "Container's ID in the format '<type>://<container_id>'",
                                                                      "descriptionCN": "容器ID的格式为 '<type>://<container_id>'。",
                                                                      "type": "string"
                                                                  },
                                                                  "exitCode": {
                                                                      "description": "Exit status from the last termination of the container",
                                                                      "descriptionCN": "容器的最后终止状态",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "finishedAt": {
                                                                      "description": "Time at which the container last terminated",
                                                                      "descriptionCN": "容器何时终止的时间",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "Message regarding the last termination of the container",
                                                                      "descriptionCN": "关于最后的容器终止通知",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "(brief) reason from the last termination of the container",
                                                                      "descriptionCN": "由于最后的容器终止，原因",
                                                                      "type": "string"
                                                                  },
                                                                  "signal": {
                                                                      "description": "Signal from the last termination of the container",
                                                                      "descriptionCN": "容器上最后一个终端的信号",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "startedAt": {
                                                                      "description": "Time at which previous execution of the container started",
                                                                      "descriptionCN": "之前容器的执行时间",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerStateWaiting": {
                                                              "description": "ContainerStateWaiting is a waiting state of a container.",
                                                              "descriptionCN": "容器状态等待是一种容器的状态。",
                                                              "properties": {
                                                                  "message": {
                                                                      "description": "Message regarding why the container is not yet running.",
                                                                      "descriptionCN": "关于为什么容器尚未启动的消息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "(brief) reason the container is not yet running.",
                                                                      "descriptionCN": "原因容器尚未运行。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ContainerStatus": {
                                                              "description": "ContainerStatus contains details for the current status of this container.",
                                                              "descriptionCN": "容器状态包含当前容器的详细信息。",
                                                              "properties": {
                                                                  "allocatedResources": {
                                                                      "description": "AllocatedResources represents the compute resources allocated for this container by the node. Kubelet sets this value to Container.Resources.Requests upon successful pod admission and after successfully admitting desired pod resize.",
                                                                      "descriptionCN": "分配资源代表节点为这个容器分配的计算资源。Kubelet在成功创建Pod时设置此值，并在成功添加所需Pod大小的Pod后设置。",
                                                                      "type": "object"
                                                                  },
                                                                  "containerID": {
                                                                      "description": "ContainerID is the ID of the container in the format '<type>://<container_id>'. Where type is a container runtime identifier, returned from Version call of CRI API (for example \"containerd\").",
                                                                      "descriptionCN": "容器ID是按照'<type>://<container_id>'的格式得到的，其中：<type>表示容器运行时标识符，从CRI API的版本调用中返回（例如\"containerd\"）。",
                                                                      "type": "string"
                                                                  },
                                                                  "image": {
                                                                      "description": "Image is the name of container image that the container is running. The container image may not match the image used in the PodSpec, as it may have been resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.",
                                                                      "descriptionCN": "图像是容器运行的容器名。容器镜像可能与PodSpec使用的镜像不匹配，因为它可能由运行时解析。更多信息：https://kubernetes.io/docs/concepts/containers/images。",
                                                                      "type": "string"
                                                                  },
                                                                  "imageID": {
                                                                      "description": "ImageID is the image ID of the container's image. The image ID may not match the image ID of the image used in the PodSpec, as it may have been resolved by the runtime.",
                                                                      "descriptionCN": "图像ID是容器镜像的图像ID。图像ID可能与PodSpec中使用的镜像ID不匹配，因为这可能是由运行时解析的。",
                                                                      "type": "string"
                                                                  },
                                                                  "lastState": {
                                                                      "description": "LastTerminationState holds the last termination state of the container to help debug container crashes and restarts. This field is not populated if the container is still running and RestartCount is 0.",
                                                                      "descriptionCN": "容器的最后终止状态保存了容器的最后一个终止状态，以帮助调试容器崩溃和重启。如果容器仍在运行且 RestartCount 为0，则此字段为空。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is a DNS_LABEL representing the unique name of the container. Each container in a pod must have a unique name across all container types. Cannot be updated.",
                                                                      "descriptionCN": "名称是DNS_LABEL，表示容器的唯一名称。一个Pod中的每个容器在所有容器类型中都必须有一个唯一的名称，不能被更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "ready": {
                                                                      "description": "Ready specifies whether the container is currently passing its readiness check. The value will change as readiness probes keep executing. If no readiness probes are specified, this field defaults to true once the container is fully started (see Started field).\n\nThe value is typically used to determine whether a container is ready to accept traffic.",
                                                                      "descriptionCN": "是否容器已通过准备检查？该字段表示当前正在执行准备检查。当准备检查继续执行时，值将发生变化。如果没有准备检查指定，则在容器完全启动（见启动字段）后默认设置为真。\n\n值通常用于确定容器是否准备好接受流量。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources represents the compute resource requests and limits that have been successfully enacted on the running container after it has been started or has been successfully resized.",
                                                                      "descriptionCN": "资源代表在运行容器后成功启用或成功缩放后的计算资源请求和限制。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
                                                                  },
                                                                  "restartCount": {
                                                                      "description": "RestartCount holds the number of times the container has been restarted. Kubelet makes an effort to always increment the value, but there are cases when the state may be lost due to node restarts and then the value may be reset to 0. The value is never negative.",
                                                                      "descriptionCN": "重启计数器表示容器在启动时被重启了多少次。Kubelet尽力始终保持这个值的增加，但有时由于节点重启导致的状态可能会丢失，然后该值可能被重置为0。此值永远不会为负。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "started": {
                                                                      "description": "Started indicates whether the container has finished its postStart lifecycle hook and passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. In both cases, startup probes will run again. Is always true when no startupProbe is defined and container is running and has passed the postStart lifecycle hook. The null value must be treated the same as false.",
                                                                      "descriptionCN": "启动状态表明容器是否已经完成了其启动生命周期钩并成功通过了启动探针。初始化为false，当启动探针被认为是成功的时，会变为true。当容器重新启动或 kubelet 失去状态时，会重置为false。在两者的情况下，都会再次运行启动探针。如果没有启动探针定义且容器正在运行，并且已经通过了启动生命周期钩，则null必须被视为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "state": {
                                                                      "description": "State holds details about the container's current condition.",
                                                                      "descriptionCN": "状态保留了关于容器当前状况的详细信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.DaemonEndpoint": {
                                                              "description": "DaemonEndpoint contains information about a single Daemon endpoint.",
                                                              "descriptionCN": "DaemonEndpoint包含一个单个Daemonendpoint的信息。",
                                                              "properties": {
                                                                  "Port": {
                                                                      "description": "Port number of the given endpoint.",
                                                                      "descriptionCN": "给定端点的端口号。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.DownwardAPIProjection": {
                                                              "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
                                                              "descriptionCN": "代表向下API信息，用于投影到一个投影体积中。请注意，这与默认模式下不相同的向下API体积源相同。",
                                                              "properties": {
                                                                  "items": {
                                                                      "description": "Items is a list of DownwardAPIVolume file",
                                                                      "descriptionCN": "物品是一个列表，包含DownwardAPIVolume文件。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
                                                              "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                                              "descriptionCN": "下载API文件：创建包含pod字段的文件的信息",
                                                              "properties": {
                                                                  "fieldRef": {
                                                                      "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                                                      "descriptionCN": "需要从pod中选择一个字段：仅支持注释、标签、名称和namespace。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
                                                                  },
                                                                  "mode": {
                                                                      "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "不强制，但可以。文件的模式位用来设置权限，必须是8进制值在0000到7777之间，或者是一个 decimal 值在0和511之间。YAML 接受两种类型的模式位值：八进制和十进制。如果没有指定，则使用默认模式位。这可能会与影响文件模式的其他选项（如 fsGroup）产生冲突，结果可能是其他模式位被设置。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "path": {
                                                                      "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                                      "descriptionCN": "所需的：创建文件的相对路径名称。不应是绝对路径或包含 '..' 路径。应为 utf-8 编码。相对路径中的第一项不应该以 '..' 开头。",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceFieldRef": {
                                                                      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                                                      "descriptionCN": "容器中的资源选择：目前仅支持资源限制和请求（CPU限制、内存限制、CPU请求和内存请求）。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
                                                              "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "DownwardAPIVolumeSource表示一个包含向下API信息的体积。向下API存储支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "defaultMode": {
                                                                      "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "默认情况下，创建文件时会使用模式位。必须是一个Optional: 模式位用于设置文件的权限。必须是一个十进制值在0000到0777之间或一个浮点数在0和511之间。YAML接受这两种类型的价值，JSON需要浮点数作为模式位。默认值为0644。路径内的目录不会受到此设置的影响。这可能会与其他影响文件模式的选项（如fsGroup）产生冲突，结果可能设置其他模式位。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of downward API volume file",
                                                                      "descriptionCN": "物品是一个列表，包含向下API流量文件",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EmptyDirVolumeSource": {
                                                              "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表一个用于Pod的空目录。空目录卷支持所有权管理和SELinux重新标签。",
                                                              "properties": {
                                                                  "medium": {
                                                                      "description": "medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "descriptionCN": "\"Medium\" 指的是应为哪个类型的存储介质回溯这个目录。默认设置是空字符串（默认），这意味着使用节点的默认介质。必须是一个空字符串（默认）或内存。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "type": "string"
                                                                  },
                                                                  "sizeLimit": {
                                                                      "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "descriptionCN": "空目录卷的大小限制是这个空目录卷所需的本地存储总量。此限制也适用于内存介质。在内存介质上的最大使用量将取决于指定在这里的大小限制值和所有容器中的最大内存限制之和。默认为nil，这意味着极限未定义。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EndpointAddress": {
                                                              "description": "EndpointAddress is a tuple that describes single IP address.",
                                                              "descriptionCN": "端点地址是一个元组，描述一个单个IP地址。",
                                                              "properties": {
                                                                  "hostname": {
                                                                      "description": "The Hostname of this endpoint",
                                                                      "descriptionCN": "这个端点的主机名。",
                                                                      "type": "string"
                                                                  },
                                                                  "ip": {
                                                                      "description": "The IP of this endpoint. May not be loopback (127.0.0.0/8 or ::1), link-local (169.254.0.0/16 or fe80::/10), or link-local multicast (224.0.0.0/24 or ff02::/16).",
                                                                      "descriptionCN": "这个端口的IP地址。可能不是环回地址（127.0.0.0/8 或 ::1），可能是链路本地地址（169.254.0.0/16 或 fe80::/10），或者是链路本地组播地址（224.0.0.0/24 或 ff02::/16）。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeName": {
                                                                      "description": "Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.",
                                                                      "descriptionCN": "这个端点的Node是托管的。这可以用来确定节点附近的端点。",
                                                                      "type": "string"
                                                                  },
                                                                  "targetRef": {
                                                                      "description": "Reference to object providing the endpoint.",
                                                                      "descriptionCN": "引用提供端点的对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EndpointPort": {
                                                              "description": "EndpointPort is a tuple that describes a single port.",
                                                              "descriptionCN": "端口映射是一个元组，描述了一个单一的端口。",
                                                              "properties": {
                                                                  "appProtocol": {
                                                                      "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
                                                                      "descriptionCN": "这个端口的通信协议。它用于作为实现提供对他们理解的协议更丰富的行为提示。该字段遵循标准的Kubernetes标签语法。有效值可以是：\n\n* 未前缀的协议名称 - 保留为IANA标准服务名称（根据RFC-6335和https://www.iana.org/assignments/service-names）。\n* Kubernetes定义前缀名称：\n  * 'kubernetes.io/h2c' - HTTP/2先前知识的清楚文本描述，见 https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket的清楚文本描述，见 https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket的TLS描述，见 https://www.rfc-editor.org/rfc/rfc6455\n\n其他协议应使用实现自定义前缀名称，如mycompany.com/my-custom-protocol。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.",
                                                                      "descriptionCN": "这个港口的名称。 这必须与对应ServicePort中的'name'字段匹配。 只有当一个端口被定义时才允许设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "The port number of the endpoint.",
                                                                      "descriptionCN": "端口号的终点。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
                                                                      "descriptionCN": "这个端口使用的IP协议必须是UDP、TCP或SCTP。默认情况下，它将使用TCP。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EndpointSubset": {
                                                              "description": "EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:\n\n\t{\n\t  Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t  Ports:     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t}\n\nThe resulting set of endpoints can be viewed as:\n\n\ta: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n\tb: [ 10.10.1.1:309, 10.10.2.2:309 ]",
                                                              "descriptionCN": "端点集是一个包含共同端口地址的集合。扩大后的端点集是Address x Port的笛卡尔积。例如，给定：\n\n```json\n{\n  \"Addresses\": [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n  \"Ports\":     [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n}\n```\n\n结果集的端点可以视作：\n\n- a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],\n- b: [ 10.10.1.1:309, 10.10.2.2:309 ]\n```",
                                                              "properties": {
                                                                  "addresses": {
                                                                      "description": "IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.",
                                                                      "descriptionCN": "提供相关端口的IP地址。这些端点应考虑负载均衡器和客户端使用的安全性。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
                                                                      }
                                                                  },
                                                                  "notReadyAddresses": {
                                                                      "description": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
                                                                      "descriptionCN": "提供相关端口但目前未标记为准备就绪的IP地址最近已经进行了重新启动，或者最近也进行过端口生存检查失败。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
                                                                      }
                                                                  },
                                                                  "ports": {
                                                                      "description": "Port numbers available on the related IP addresses.",
                                                                      "descriptionCN": "在相关的IP地址上可用的端口号。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EndpointPort"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Endpoints": {
                                                              "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n\n\t Name: \"mysvc\",\n\t Subsets: [\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n\t   },\n\t   {\n\t     Addresses: [{\"ip\": \"10.10.3.3\"}],\n\t     Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n\t   },\n\t]",
                                                              "descriptionCN": " endpoints 是实现实际服务的集合。例子：",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的形式的版本化规范。服务器应将可识别的规范转换为内部最新的值，并可能拒绝不可识别人造值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时提供的端点推断出这一点。无法更新。CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "subsets": {
                                                                      "description": "The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
                                                                      "descriptionCN": "所有端点集的并集是所有子集的和。根据它们共享的IP地址，将地址放置到子集中。具有多个端口的单一地址，其中一些端口已准备好，而另一些未准备好（因为它们来自不同的容器），则会导致地址在不同端口中显示为不同的子集。在同一个子集中不存在两个地址和未准备的地址都显示为相同的端口。构成服务的集合地址和端口。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EndpointSubset"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EndpointsList": {
                                                              "description": "EndpointsList is a list of endpoints.",
                                                              "descriptionCN": "端点列表是一个列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化结构。服务器应该将识别的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of endpoints.",
                                                                      "descriptionCN": "端点列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Endpoints"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是表示这个对象所代表的REST资源的一种字符串值。服务器可能通过客户端提交请求时提供的端点推断出此字符串。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EnvFromSource": {
                                                              "description": "EnvFromSource represents the source of a set of ConfigMaps",
                                                              "descriptionCN": "环境源代表一组ConfigMaps的来源。",
                                                              "properties": {
                                                                  "configMapRef": {
                                                                      "description": "The ConfigMap to select from",
                                                                      "descriptionCN": "选择ConfigMap的配置项",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
                                                                  },
                                                                  "prefix": {
                                                                      "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                                                      "descriptionCN": "在ConfigMap中的每个键前添加的一个可选标识符。必须是C_IDENTIFIER类型。",
                                                                      "type": "string"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "The Secret to select from",
                                                                      "descriptionCN": "从中选择的秘密",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EnvVar": {
                                                              "description": "EnvVar represents an environment variable present in a Container.",
                                                              "descriptionCN": "环境变量在容器中。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                                      "descriptionCN": "环境变量名称。必须为C标识符。",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                                                                      "descriptionCN": "变量引用$(VAR_NAME)使用容器中的先前定义的环境变量和服务环境变量进行扩展。如果一个变量无法被解析，输入字符串中的引用将保持不变。双$变为单$，允许替换$(VAR_NAME)$语法中的$(VAR_NAME)$：即\"$$(VAR_NAME)\"将产生\"(VAR_NAME)\"字符串。无论变量是否存在与否，都不会被解压的Escaped references永远不会被展开。默认为空字符串。",
                                                                      "type": "string"
                                                                  },
                                                                  "valueFrom": {
                                                                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                                      "descriptionCN": "环境变量的值来源。如果没有值则不能使用。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EnvVarSource": {
                                                              "description": "EnvVarSource represents a source for the value of an EnvVar.",
                                                              "descriptionCN": "EnvVarSource代表环境变量值的来源。",
                                                              "properties": {
                                                                  "configMapKeyRef": {
                                                                      "description": "Selects a key of a ConfigMap.",
                                                                      "descriptionCN": "选择 ConfigMap 的键。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
                                                                  },
                                                                  "fieldRef": {
                                                                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                                      "descriptionCN": "选择Pod的字段：支持metadata.name、metadata.Namespace、metadata.labels['<KEY>']、metadata.annotations['<KEY>']、spec.nodeName、spec.serviceAccountName、status.hostIP、status.podIP、status.podIPs。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
                                                                  },
                                                                  "resourceFieldRef": {
                                                                      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                                      "descriptionCN": "容器中的资源选择：目前仅支持的资源类型包括限制CPU、内存、ephemeral存储和请求CPU、内存和ephemeral存储。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
                                                                  },
                                                                  "secretKeyRef": {
                                                                      "description": "Selects a key of a secret in the pod's namespace",
                                                                      "descriptionCN": "选择在Pod的命名空间中的一个秘密密钥。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EphemeralContainer": {
                                                              "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.",
                                                              "descriptionCN": "一个瞬间的容器是一个临时的容器，你可以把它添加到现有的Pod中，以便用户触发活动，如调试。瞬时容器没有资源或调度保证，当它们退出或者删除或重启Pod时不会被重新启动。Kubelet可能会移除Pod，如果瞬时容器导致Pod超出其资源分配。\n\n要添加瞬时容器，使用现有的Pod中的瞬时容器子资源。瞬时容器可能无法被移除或重启。",
                                                              "properties": {
                                                                  "args": {
                                                                      "description": "Arguments to the entrypoint. The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "descriptionCN": "命令入口的参数。如果这个不是提供的，图片的CMD就会被使用。变量引用$(VAR_NAME)会根据容器的环境进行扩展。如果一个变量无法被解析，输入字符串中的引用将会保持不变。双等号会被转化为单等号，这允许我们使用$(VAR_NAME)$语法来避免$(VAR_NAME)`：例如\"$$(VAR_NAME)\"将产生字符串形式的$(VAR_NAME)$.无论变量是否存在与否，都无法更新这些引用。不能被更新。更多信息：https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "command": {
                                                                      "description": "Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                                                      "descriptionCN": "入口数组。在shell中没有执行。如果提供的不是这个，该图片的ENTRYPOINT将被使用。变量引用$(VAR_NAME)将使用容器的环境。如果一个变量无法解析，则输入字符串中的引用将保持不变。double $$将以单个$的形式减少，这样就可以避免$(VAR_NAME)语法中的$(VAR_NAME)$：即\"$$(VAR_NAME)\"将产生字符串别名 \"$(VAR_NAME)\". 不管变量是否存在，都会永远解压这些引用。不能更新。更多信息：https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#运行一个命令在shell中",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "env": {
                                                                      "description": "List of environment variables to set in the container. Cannot be updated.",
                                                                      "descriptionCN": "在容器中设置的环境变量列表。不能更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "envFrom": {
                                                                      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                                                                      "descriptionCN": "环境变量的来源列表。源定义中的每个键必须是C标识符。当容器启动时，所有无效的键将被报告为事件。当一个键存在于多个来源中时，值与最后一个来源关联的值将优先级最高。使用环境变量定义具有重复键的值将优先级最高。无法更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
                                                                      }
                                                                  },
                                                                  "image": {
                                                                      "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images",
                                                                      "descriptionCN": "容器图像名称。更多信息：https://kubernetes.io/docs/concepts/containers/images",
                                                                      "type": "string"
                                                                  },
                                                                  "imagePullPolicy": {
                                                                      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                                                      "descriptionCN": "图像拉取策略。始终，永不，如果不在当前（latest）标签中，则默认为始终。无法更新。更多信息：https://kubernetes.io/docs/concepts/containers/images# updating-images",
                                                                      "type": "string"
                                                                  },
                                                                  "lifecycle": {
                                                                      "description": "Lifecycle is not allowed for ephemeral containers.",
                                                                      "descriptionCN": "对于临时容器，生命周期是不允许的。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
                                                                  },
                                                                  "livenessProbe": {
                                                                      "description": "Probes are not allowed for ephemeral containers.",
                                                                      "descriptionCN": "探针是不允许在临时容器中使用的。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.",
                                                                      "descriptionCN": "指定的DNS_label上的持久容器名称。这个名称必须在整个容器、init容器和持久容器中独一无二。",
                                                                      "type": "string"
                                                                  },
                                                                  "ports": {
                                                                      "description": "Ports are not allowed for ephemeral containers.",
                                                                      "descriptionCN": "港口不允许临时使用的容器。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "containerPort",
                                                                          "protocol"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "readinessProbe": {
                                                                      "description": "Probes are not allowed for ephemeral containers.",
                                                                      "descriptionCN": "探针不得用于临时容器。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "resizePolicy": {
                                                                      "description": "Resources resize policy for the container.",
                                                                      "descriptionCN": "容器的资源大小策略。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.",
                                                                      "descriptionCN": "仅供临时使用的容器不允许使用已分配给Pod的备用资源。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
                                                                  },
                                                                  "restartPolicy": {
                                                                      "description": "Restart policy for the container to manage the restart behavior of each container within a pod. This may only be set for init containers. You cannot set this field on ephemeral containers.",
                                                                      "descriptionCN": "容器重新启动策略为Pod中的每个容器管理它们内部容器的重启行为。这可能仅限于init容器。您不能在 ephemeral 容器上设置此字段。",
                                                                      "type": "string"
                                                                  },
                                                                  "securityContext": {
                                                                      "description": "Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.",
                                                                      "descriptionCN": "可选：SecurityContext定义了 ephemeral 容器应该运行的安全选项。如果设置，SecurityContext 的字段将覆盖 PodSecurityContext 的相应字段。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
                                                                  },
                                                                  "startupProbe": {
                                                                      "description": "Probes are not allowed for ephemeral containers.",
                                                                      "descriptionCN": "对于临时容器，探测器是不允许的。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
                                                                  },
                                                                  "stdin": {
                                                                      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                                                                      "descriptionCN": "这个容器是否应该在容器运行时为stdin分配缓冲区？如果没有设置，容器中的读取将始终导致EOF。默认是false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "stdinOnce": {
                                                                      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                                                                      "descriptionCN": "容器运行环境是否应在单个 attach 后关闭标准输入通道？当标准输入为真时，标准输入流将保持在整个 attach 联系中打开。如果 stdinOnce 设置为 true，则在容器启动时打开stdin，直到第一个客户端连接到stdin，并且在此期间保持打开并接受数据，直到客户端断开连接，此时stdin被关闭并且永远关闭，直到容器重启。如果这个标志设置为 false，则从stdin读取的容器进程永远不会接收到EOF。默认为false",
                                                                      "type": "boolean"
                                                                  },
                                                                  "targetContainerName": {
                                                                      "description": "If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.",
                                                                      "descriptionCN": "如果设置，这个EphemeralContainer的目标Pod的名称。EphemeralContainer将在该容器的命名空间（IPC，PID等）中运行。如果没有设置，则使用Podspec配置的命名空间。\n\n容器运行器必须实现对这个功能的支持。如果运行器不支持命名空间引用那么在设置此字段后结果是不确定的。",
                                                                      "type": "string"
                                                                  },
                                                                  "terminationMessagePath": {
                                                                      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                                                                      "descriptionCN": "如果没有额外的信息，请提供要翻译的文件的路径，以便我能够为您提供准确的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "terminationMessagePolicy": {
                                                                      "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                                                                      "descriptionCN": "终止消息应该如何填充？文件将使用终结消息路径中的内容来填充容器状态消息在成功和失败时。如果终端消息文件为空，且容器退出时发生错误，则使用最后一个节的容器日志输出。日志输出的长度限制为2048字节或80行，无论哪个更小。默认设置为File。无法更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "tty": {
                                                                      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                                                                      "descriptionCN": "这个容器是否应该分配一个TTY，还需要'stdin'为真。默认设置为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeDevices": {
                                                                      "description": "volumeDevices is the list of block devices to be used by the container.",
                                                                      "descriptionCN": "容器使用的块设备列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "volumeMounts": {
                                                                      "description": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated.",
                                                                      "descriptionCN": "将卷挂载到容器的文件系统中。对于过期的容器，子路径是不允许的。无法更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "workingDir": {
                                                                      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                                                                      "descriptionCN": "容器的工作目录。如果没有指定，那么容器运行时的默认环境将会被使用，这可能在容器镜像中配置过。不能更新。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EphemeralVolumeSource": {
                                                              "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
                                                              "descriptionCN": "代表一个瞬息万变的存储介质，由正常的存储驱动器处理。",
                                                              "properties": {
                                                                  "volumeClaimTemplate": {
                                                                      "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil.",
                                                                      "descriptionCN": "将被用来创建一个独立的PVC，为该EphemeralVolumeSource提供存储空间。在这个EphemeralVolumeSource嵌入的Pod中，此EphemeralVolumeSource是该PVC的所有者，即该PVC将与Pod一起删除。在PVC名称中使用`PodSpec.Volumes`数组项中的名称。如果聚合的名称不适用于PVC（例如，太长），Pod验证将拒绝Pod。\n\n已存在具有该名称但不在Pod中拥有的PVC不会用于Pod以避免误用无关的存储空间。然后启动Pod直到无关的PVC被移除。如果此类预先创建的PVC是为了Pod而设计的，则必须在Pod存在后更新到Pod的归属引用。这通常不需要，但它可能在手动重建破碎的集群时有用。\n\n这个字段是读取不可更改的，并且在创建PVC后不会对它进行任何更改。\n\n必须不为空。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Event": {
                                                              "description": "Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
                                                              "descriptionCN": "事件是集群中某地发生的报告。  事件具有有限的保留时间，并且触发和消息可能随着时间而变化。  事件消费者不应依赖给定Reason反映一致的底层触发，或基于该Reason持续存在事件的情况。  事件应被视为信息性、尽职调查的数据。",
                                                              "properties": {
                                                                  "action": {
                                                                      "description": "What action was taken/failed regarding to the Regarding object.",
                                                                      "descriptionCN": "关于对象采取或未能采取的行动。",
                                                                      "type": "string"
                                                                  },
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是表示这个对象表示的模型的版本号。服务器应该将识别到的格式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "count": {
                                                                      "description": "The number of times this event has occurred.",
                                                                      "descriptionCN": "这个事件已经发生了多少次。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "eventTime": {
                                                                      "description": "Time when this Event was first observed.",
                                                                      "descriptionCN": "这个事件首次观察的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  },
                                                                  "firstTimestamp": {
                                                                      "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
                                                                      "descriptionCN": "事件首次记录的时间。 (服务器接收时间在TypeMeta类型中)",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "involvedObject": {
                                                                      "description": "The object that this event is about.",
                                                                      "descriptionCN": "这次事件所涉及的对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示此对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时提供的端点推测这个值。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "lastTimestamp": {
                                                                      "description": "The time at which the most recent occurrence of this event was recorded.",
                                                                      "descriptionCN": "最近事件的最末一次记录时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human-readable description of the status of this operation.",
                                                                      "descriptionCN": "此操作的状态描述。",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "reason": {
                                                                      "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
                                                                      "descriptionCN": "这应该是一个简短，机器可理解的字符串，说明转入对象当前状态的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "related": {
                                                                      "description": "Optional secondary object for more complex actions.",
                                                                      "descriptionCN": "这是多余的主要对象，用于更复杂的动作。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "reportingComponent": {
                                                                      "description": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.",
                                                                      "descriptionCN": "控制器发出此事件的名称，例如`kubernetes.io/kubelet`。",
                                                                      "type": "string"
                                                                  },
                                                                  "reportingInstance": {
                                                                      "description": "ID of the controller instance, e.g. `kubelet-xyzf`.",
                                                                      "descriptionCN": "控制器实例ID，例如`kubelet-xyzf`。",
                                                                      "type": "string"
                                                                  },
                                                                  "series": {
                                                                      "description": "Data about the Event series this event represents or nil if it's a singleton Event.",
                                                                      "descriptionCN": "该事件系列所代表的数据或为nil，如果是一个单例事件。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EventSeries"
                                                                  },
                                                                  "source": {
                                                                      "description": "The component reporting this event. Should be a short machine understandable string.",
                                                                      "descriptionCN": "该组件报告此事件。应该是一个简短的机器可读字符串。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of this event (Normal, Warning), new types could be added in the future",
                                                                      "descriptionCN": "该事件的类型（正常/警告），未来可能增加新的类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EventList": {
                                                              "description": "EventList is a list of events.",
                                                              "descriptionCN": "事件列表是一个包含事件的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的结构。服务器应该将可识别的架构转换为内部最新的值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of events",
                                                                      "descriptionCN": "事件列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Event"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，代表这个对象所表示的REST资源。服务器可以根据客户端向端点提交请求时推断出此字段。无法更新。使用驼峰命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EventSeries": {
                                                              "description": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.",
                                                              "descriptionCN": "事件系列包含关于一系列事件的信息，即连续发生一段时间的事物。",
                                                              "properties": {
                                                                  "count": {
                                                                      "description": "Number of occurrences in this series up to the last heartbeat time",
                                                                      "descriptionCN": "这个系列到最近心跳时间的次数",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lastObservedTime": {
                                                                      "description": "Time of the last occurrence observed",
                                                                      "descriptionCN": "最后一次观察的时间",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.EventSource": {
                                                              "description": "EventSource contains information for an event.",
                                                              "descriptionCN": "事件源包含事件的信息。",
                                                              "properties": {
                                                                  "component": {
                                                                      "description": "Component from which the event is generated.",
                                                                      "descriptionCN": "生成事件的组件。",
                                                                      "type": "string"
                                                                  },
                                                                  "host": {
                                                                      "description": "Node name on which the event is generated.",
                                                                      "descriptionCN": "生成事件的节点名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ExecAction": {
                                                              "description": "ExecAction describes a \"run in container\" action.",
                                                              "descriptionCN": "执行行动描述了一个“在容器中运行”的动作。",
                                                              "properties": {
                                                                  "command": {
                                                                      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                                                      "descriptionCN": "命令是在容器内部执行的命令，命令的工作目录是根（/）在容器的文件系统中。命令只是被执行，而不是在shell中运行，所以传统的shell指示符（|等）不会工作。要使用shell，你需要明确地调用那个shell。0的退出状态被视为活/健康的，非零的状态被视为不健康的。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.FCVolumeSource": {
                                                              "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表Fiber Channel卷。Fiber Channel卷只能作为读写一次挂载。Fiber Channel卷支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是挂载的文件系统类型。必须是一个支持主机操作系统文件系统的文件系统类型。默认情况下，会自动推断为“ext4”。",
                                                                      "type": "string"
                                                                  },
                                                                  "lun": {
                                                                      "description": "lun is Optional: FC target lun number",
                                                                      "descriptionCN": "lun 是可选的：FC 目标 lun 号",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "不允许读写：默认为false。这里的ReadOnly会强制在VolumeMounts中设置ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "targetWWNs": {
                                                                      "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                                                                      "descriptionCN": "目标全球网络是可选的：FC目标全球网络",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "wwids": {
                                                                      "description": "wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                                                      "descriptionCN": "wwids 可选：FC的全网唯一标识符（wwids） eitherwwids 或者是 目标WWNs 和 lun 的组合必须设置，但是不能同时设置。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.FlexPersistentVolumeSource": {
                                                              "description": "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.",
                                                              "descriptionCN": "弹性持久卷源表示一种通用的持久卷资源，它是通过执行基于插件的方式进行配置和分配的。",
                                                              "properties": {
                                                                  "driver": {
                                                                      "description": "driver is the name of the driver to use for this volume.",
                                                                      "descriptionCN": "这个文件的司机是用于使用的驱动器的名字。",
                                                                      "type": "string"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType is the Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                                                      "descriptionCN": "文件系统类型是需要挂载的文件系统的类型。必须是操作系统的支持的文件系统类型。例如，“ext4”，“xfs”和“ntfs”。默认的文件系统取决于FlexVolume脚本。",
                                                                      "type": "string"
                                                                  },
                                                                  "options": {
                                                                      "description": "options is Optional: this field holds extra command options if any.",
                                                                      "descriptionCN": "\"options is Optional: this field holds extra command options if any.\"的中文翻译是：\n\n“选项可选：这个字段如果存在，会包含额外的命令选项。”",
                                                                      "type": "object"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "只有读取模式：默认为false（可读写）。在这里，如果将ReadOnly设置为VolumeMounts中的ReadOnly，那么它将强制在VolumeMounts中启用ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                                                      "descriptionCN": "秘密Ref 是可选的： SecretRef 是用于传递敏感信息给插件脚本的秘密对象的参考。如果未指定秘密对象，则为空。如果秘密对象包含多个秘密，所有秘密都会传递给插件脚本。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.FlexVolumeSource": {
                                                              "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                                                              "descriptionCN": "FlexVolume代表一种通用的体积资源，它使用执行基于插件的方式进行配置/绑定。",
                                                              "properties": {
                                                                  "driver": {
                                                                      "description": "driver is the name of the driver to use for this volume.",
                                                                      "descriptionCN": "此卷的驾驶员使用。",
                                                                      "type": "string"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                                                      "descriptionCN": "文件系统类型是需要挂载的文件系统的类型。必须是操作系统支持的文件系统类型。例如：ext4，xfs，ntfs。默认的文件系统取决于FlexVolume脚本。",
                                                                      "type": "string"
                                                                  },
                                                                  "options": {
                                                                      "description": "options is Optional: this field holds extra command options if any.",
                                                                      "descriptionCN": "选项是可选的：这个字段如果有的话会储存额外的命令选项。",
                                                                      "type": "object"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "读写权限是可选的，默认为false。在VolumeMounts中，只允许读取但不允许写入ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
                                                                      "descriptionCN": "秘密Ref是可选的：secretRef是用于传递敏感信息给插件脚本的秘密对象的参考。如果未指定，则为空。如果秘密对象包含多个秘密，所有秘密都将传递给插件脚本。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.FlockerVolumeSource": {
                                                              "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表Flocker从Flocker代理安装的卷。只有datasetName和datasetUUID之一需要设置。Flocker卷不支持所有权管理和SELinux标签更改。",
                                                              "properties": {
                                                                  "datasetName": {
                                                                      "description": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                                                                      "descriptionCN": "datasetName 是用于存储数据集的元数据名称 -> 对Flocker中的数据集名称，应考虑将其视为过时。",
                                                                      "type": "string"
                                                                  },
                                                                  "datasetUUID": {
                                                                      "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                                                                      "descriptionCN": "datasetUUID 是 dataset 的 UUID。这是 Focker 数据集的唯一标识符",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
                                                              "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表Google Compute Engine中的持久磁盘资源。挂载到容器之前，必须先存在一个GCE PD。磁盘也必须在同一个GCE项目和区域的kubelet中。GCE PD只能被挂载一次或读写多次。GCE PD支持所有权管理和SELinux标签化。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "fsType是您想要挂载的卷的文件系统类型。建议：确保该文件系统类型在主机操作系统上被支持。示例：\"ext4\"，\"xfs\"和\"ntfs\"。如果未指定，则自动推断为\"ext4\"。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "type": "string"
                                                                  },
                                                                  "partition": {
                                                                      "description": "partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "分区是您想要挂载的卷的分区。如果没有，默认情况下会根据卷名挂载。例如：对于/dev/sda1，您指定分区为\"1\"。同样，对于/dev/sda的分区为\"0\"（或可以留下空属性）。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "pdName": {
                                                                      "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "pdName 是 GCE PD 资源的唯一名称。它用于在 GCE 中识别磁盘。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "这里的readOnly会强制在VolumeMounts中设置ReadOnly。默认为false。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.GRPCAction": {
                                                              "descriptionCN": "非常抱歉，由于您没有提供需要翻译的文字，我无法为您提供准确的中文翻译。请您提供具体的文字内容或者翻译需求，我会尽力帮助您。",
                                                              "properties": {
                                                                  "port": {
                                                                      "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                                                      "descriptionCN": "gRPC服务的端口号。号码必须在1到65535之间。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "service": {
                                                                      "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                                                      "descriptionCN": "服务是健康检查请求（见 https://github.com/grpc/grpc/blob/master/doc/health-checking.md ）中的服务名称。如果没有指定，默认的行为由 gRPC 定义。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.GitRepoVolumeSource": {
                                                              "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                                                              "descriptionCN": "代表包含git仓库内容的体积。Git仓库卷不支持所有权管理。Git仓库卷支持SELinux标签重命名。\n\n已过时：GitRepo已被废弃。使用git进行容器化，通过git将InitContainer中的空目录挂载到Pod的init-container中，然后将空目录挂载到Pod的container中。",
                                                              "properties": {
                                                                  "directory": {
                                                                      "description": "directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
                                                                      "descriptionCN": "目录的目标目录名称。不能包含或以'.'开头。如果提供，则卷积目录将为git仓库。否则，如果指定，则卷积目录将包含给定名称下的git仓库子目录。",
                                                                      "type": "string"
                                                                  },
                                                                  "repository": {
                                                                      "description": "repository is the URL",
                                                                      "descriptionCN": "仓库是URL。",
                                                                      "type": "string"
                                                                  },
                                                                  "revision": {
                                                                      "description": "revision is the commit hash for the specified revision.",
                                                                      "descriptionCN": "修订是指定版本的提交哈希。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource": {
                                                              "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表Glusterfs挂载，该挂载将在Pod的生命周期内保持。Glusterfs卷不支持所有权管理或SELinux重新标签。",
                                                              "properties": {
                                                                  "endpoints": {
                                                                      "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "端点是描述GlusterFS拓扑的endpoint名称。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "string"
                                                                  },
                                                                  "endpointsNamespace": {
                                                                      "description": "endpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "端点命名空间是包含Glusterfs端点的命名空间。如果该字段为空，则EndpointNamespace默认与绑定的PVC的命名空间相同。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "string"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "路径是GlusterFS卷的路径。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "这里的readOnly属性将强制GlusterFS卷使用只读权限。默认为false。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.GlusterfsVolumeSource": {
                                                              "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表 Glusterfs 驱动器，该驱动器将持续一个 Pod 的生命周期。 Glusterfs 没有支持所有权管理和 SELinux 转换。",
                                                              "properties": {
                                                                  "endpoints": {
                                                                      "description": "endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "终点是描述Glusterfs拓扑的endpoint名称。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "string"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "路径是GlusterFS卷的路径。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#创建一个pod",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "descriptionCN": "这里的readOnly将强制GlusterFS卷以只读权限挂载。默认为false。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.HTTPGetAction": {
                                                              "description": "HTTPGetAction describes an action based on HTTP Get requests.",
                                                              "descriptionCN": "HTTPGetAction 描述了一个基于 HTTP Get 请求的行动。",
                                                              "properties": {
                                                                  "host": {
                                                                      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                                      "descriptionCN": "主机名要连接到，默认设置为Pod的IP。你可能想在httpHeaders中设置\"Host\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "httpHeaders": {
                                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                                      "descriptionCN": "请求中自定义的头部设置。HTTP允许重复的头部设置。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
                                                                      }
                                                                  },
                                                                  "path": {
                                                                      "description": "Path to access on the HTTP server.",
                                                                      "descriptionCN": "访问HTTP服务器的路径。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "descriptionCN": "在容器中访问的端口名称或数字。数字必须在1到65535之间。名称必须是一个IANA_SVC_NAME。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "scheme": {
                                                                      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                                      "descriptionCN": "用于连接主机的网络协议。默认为HTTP。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.HTTPHeader": {
                                                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                              "descriptionCN": "HTTPHeader描述了一个用于HTTP探测的自定义头。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                                      "descriptionCN": "表头字段名。在输出时将进行标准化处理，所以大小写不一致的名称将被视为同一表头。",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "The header field value",
                                                                      "descriptionCN": "头部字段值",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.HostAlias": {
                                                              "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
                                                              "descriptionCN": "主机名存储了IP地址和主机名之间的映射，这些映射将在Pod的hosts文件中作为entry注入。",
                                                              "properties": {
                                                                  "hostnames": {
                                                                      "description": "Hostnames for the above IP address.",
                                                                      "descriptionCN": "对于上述IP地址的主机名。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "ip": {
                                                                      "description": "IP address of the host file entry.",
                                                                      "descriptionCN": "主机文件中IP地址的值。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.HostIP": {
                                                              "description": "HostIP represents a single IP address allocated to the host.",
                                                              "descriptionCN": "主机IP代表为主机分配的一个单个IP地址。",
                                                              "properties": {
                                                                  "ip": {
                                                                      "description": "IP is the IP address assigned to the host",
                                                                      "descriptionCN": "IP地址是主机分配的IP地址。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.HostPathVolumeSource": {
                                                              "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表将主机路径映射到Pod。主机路径卷不支持所有权管理和SELinux重新标签。",
                                                              "properties": {
                                                                  "path": {
                                                                      "description": "path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "descriptionCN": "主机上目录路径。如果路径是一个符号链接，它将跟随链接到真正的路径。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "descriptionCN": "主机路径卷的类型默认为\"\"。更多详情，请参阅：https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ISCSIPersistentVolumeSource": {
                                                              "description": "ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "ISCSIPersistentVolumeSource代表一个iscsi磁盘。iscsi卷只能被挂载一次作为读写。iscsi卷支持所有权管理和selinux重新标签等管理功能。",
                                                              "properties": {
                                                                  "chapAuthDiscovery": {
                                                                      "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                                                                      "descriptionCN": "chapAuthDiscovery 定义了支持 ISCSI 发现 CHAP 认证的能力",
                                                                      "type": "boolean"
                                                                  },
                                                                  "chapAuthSession": {
                                                                      "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                                                                      "descriptionCN": "章节认证会话定义了是否支持IISCSession CHAP认证。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                                                      "descriptionCN": "文件系统类型是您想挂载的卷的文件系统类型。提示：确保该文件系统类型在主机操作系统上被支持。示例：\"ext4\", \"xfs\", \"ntfs\"。如果未指定，则自动推断为\"ext4\"。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                                                      "type": "string"
                                                                  },
                                                                  "initiatorName": {
                                                                      "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                                                                      "descriptionCN": "发起人名称是自定义的iscsi发起者名称。如果发起人名称同时指定了iscsiInterface，新的iscsi接口target portal：<volume name>将被创建用于连接。",
                                                                      "type": "string"
                                                                  },
                                                                  "iqn": {
                                                                      "description": "iqn is Target iSCSI Qualified Name.",
                                                                      "descriptionCN": "IQN 是 Target ISCSI 认证名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "iscsiInterface": {
                                                                      "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                                                      "descriptionCN": "iscsiInterface 是使用 iSCSI 传输的接口名称。默认设置为 'default' (tcp)。",
                                                                      "type": "string"
                                                                  },
                                                                  "lun": {
                                                                      "description": "lun is iSCSI Target Lun number.",
                                                                      "descriptionCN": "Lun是iSCSI Target LUN编号。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "portals": {
                                                                      "description": "portals is the iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                                                      "descriptionCN": "站点是iSCSI Target Portal列表。该页面可能是IP地址或ip_addr:port，如果端口不是默认（通常是860和3260）。\n\n请注意，由于翻译的文本较长，我无法在这里提供全部的内容。如果您有其他问题或需要进一步的信息，请随时告诉我。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                                                                      "descriptionCN": "这里的readOnly将强制VolumeMounts中的ReadOnly设置。默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                                                                      "descriptionCN": "iSCSI目标和发起者的CHAP秘密是SIP的秘密。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "targetPortal": {
                                                                      "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                                                      "descriptionCN": "目标门户是iSCSI目标门户。门户要么是IP地址，要么是ip_addr:port，如果端口不是默认的（通常为TCP端口860和3260）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ISCSIVolumeSource": {
                                                              "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表的是ISCSI磁盘。ISCSI卷只能挂载一次为读写模式。ISCSI卷支持所有权管理和SELinux标签调整。",
                                                              "properties": {
                                                                  "chapAuthDiscovery": {
                                                                      "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                                                                      "descriptionCN": "chapAuthDiscovery定义了是否支持iSCSI Discovery CHAP认证。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "chapAuthSession": {
                                                                      "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                                                                      "descriptionCN": "章节认证session定义了是否支持iSCSI会话chap认证",
                                                                      "type": "boolean"
                                                                  },
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                                                      "descriptionCN": "fsType是您想要挂载的卷的文件系统类型。提示：确保该文件系统类型在主机操作系统上被支持。示例：“ext4”，“xfs”和“ntfs”。如果未指定，则默认为“ext4”。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                                                      "type": "string"
                                                                  },
                                                                  "initiatorName": {
                                                                      "description": "initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
                                                                      "descriptionCN": "初始化器名称是自定义的iscsi发起者名称。如果初始化器名称同时指定为iscsiInterface，将创建一个新的iscsi接口<target portal>:<volume name>连接。",
                                                                      "type": "string"
                                                                  },
                                                                  "iqn": {
                                                                      "description": "iqn is the target iSCSI Qualified Name.",
                                                                      "descriptionCN": "iqn是iscsi合格名称的目标。",
                                                                      "type": "string"
                                                                  },
                                                                  "iscsiInterface": {
                                                                      "description": "iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
                                                                      "descriptionCN": "iscsiInterface 是使用 iSCSI 运输的接口名。默认为 'default'（tcp）。",
                                                                      "type": "string"
                                                                  },
                                                                  "lun": {
                                                                      "description": "lun represents iSCSI Target Lun number.",
                                                                      "descriptionCN": "\"lun\" 是 iSCSI 目标 LUN 的号码。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "portals": {
                                                                      "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                                                      "descriptionCN": " portals 是 iSCSI 目标门户列表。该页面可以是 IP 或者 ip_addr:port 如果它不是默认（通常是 TCP 口 860 和 3260）。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                                                                      "descriptionCN": "在这里，ReadOnly将强制在VolumeMounts中的ReadOnly设置。默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                                                                      "descriptionCN": "SCOPe指的是iSCSI目标和发起者的CHAP安全密钥。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "targetPortal": {
                                                                      "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                                                                      "descriptionCN": "目标portal是iSCSI Target Portal。如果port不是默认的（通常是TCP端口860和3260），则该Portal为IP地址或ip_addr:port。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.KeyToPath": {
                                                              "description": "Maps a string key to a path within a volume.",
                                                              "descriptionCN": "地图字符串键到 volume 中的路径。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "key is the key to project.",
                                                                      "descriptionCN": "关键在于项目。",
                                                                      "type": "string"
                                                                  },
                                                                  "mode": {
                                                                      "description": "mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "模式可选：使用此文件的权限模式位。必须是0000到7777之间的八进制值，或者0到511之间的十进制值。YAML接受八进制和十进制值，JSON需要在模式位中设置Decimal值。如果没有指定，则默认使用卷的默认模式。这可能会与其他影响文件模式的选项（如fsGroup）产生冲突，结果可能是其他模式位被设置。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                                      "descriptionCN": "路径是文件相对于映射键的相对路径。可能不是绝对路径。可能不包含路径元素'.'。可能不以字符串'..'开始。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Lifecycle": {
                                                              "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
                                                              "descriptionCN": "生命周期描述了管理系统在应对容器生命周期事件时应该采取的行动。对于PostStart和PreStop生命周期处理程序，管理系统的容器会直到该操作完成才会被阻塞，除非容器进程失败，否则此处理程序将被终止。",
                                                              "properties": {
                                                                  "postStart": {
                                                                      "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                                                      "descriptionCN": "容器创建后立即触发PostStart，如果处理程序失败，则根据容器的重启策略终止并重新启动。容器的其他管理功能会等待钩子完成后再执行。更多信息：https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
                                                                  },
                                                                  "preStop": {
                                                                      "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                                                      "descriptionCN": "在API请求或管理事件（如liveness、startup探测失败）等导致容器终止的情况下，PreStop会被立即调用。如果容器崩溃或退出，则不会被调用。Pod的终止 grace period countdown 开始前 PreStop hook 被执行。无论 handler 的结果如何，容器最终将在 Pod 的终止 grace period 内期结束。关于容器生命周期钩子的更多信息，请参阅 https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LifecycleHandler": {
                                                              "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
                                                              "descriptionCN": "生命周期处理器定义了一个特定的操作，应该在生命周期钩子中执行。除了TCPSocket之外，其他字段都必须指定。",
                                                              "properties": {
                                                                  "exec": {
                                                                      "description": "Exec specifies the action to take.",
                                                                      "descriptionCN": "执行指定的操作。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
                                                                  },
                                                                  "httpGet": {
                                                                      "description": "HTTPGet specifies the http request to perform.",
                                                                      "descriptionCN": "HTTPGet 是指用于执行 http 请求的方式。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
                                                                  },
                                                                  "sleep": {
                                                                      "description": "Sleep represents the duration that the container should sleep before being terminated.",
                                                                      "descriptionCN": "睡眠代表容器在被终止前应该睡觉的持续时间。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SleepAction"
                                                                  },
                                                                  "tcpSocket": {
                                                                      "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.",
                                                                      "descriptionCN": "已过时。TCPSocket作为生命周期处理器不可用，并保留以支持历史兼容性。此字段未进行验证，当tcp处理器指定时，生命周期钩子将在运行时失败。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LimitRange": {
                                                              "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
                                                              "descriptionCN": "命名空间中每种资源的使用限制都由LimitRange属性设置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化规范。服务器应该将识别的规范转换为最新的内部值，并可能拒绝不被识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是指这个对象所代表的REST资源。服务器可以根据客户端提交请求时使用的端点推测出这个字符串值。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the limits enforced. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "架构规范定义了强制执行的限制。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LimitRangeItem": {
                                                              "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
                                                              "descriptionCN": "限用范围项定义了一个对任何匹配的资源使用限制。",
                                                              "properties": {
                                                                  "default": {
                                                                      "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                                                                      "descriptionCN": "默认资源需求限制值取决于资源名称，如果没有指定，则根据资源限定制。",
                                                                      "type": "object"
                                                                  },
                                                                  "defaultRequest": {
                                                                      "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
                                                                      "descriptionCN": "默认请求是资源名称中未指定的资源需求请求值。",
                                                                      "type": "object"
                                                                  },
                                                                  "max": {
                                                                      "description": "Max usage constraints on this kind by resource name.",
                                                                      "descriptionCN": "类型资源的使用限制",
                                                                      "type": "object"
                                                                  },
                                                                  "maxLimitRequestRatio": {
                                                                      "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                                                                      "descriptionCN": "在指定的情况下，命名资源必须具有请求和限制，且两者的值都非零；当limit除以request的值小于或等于所列举的值时，这代表了命名资源的最大冲击量。",
                                                                      "type": "object"
                                                                  },
                                                                  "min": {
                                                                      "description": "Min usage constraints on this kind by resource name.",
                                                                      "descriptionCN": "这个资源类型使用限制。",
                                                                      "type": "object"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of resource that this limit applies to.",
                                                                      "descriptionCN": "这个限制适用于的资源类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LimitRangeList": {
                                                              "description": "LimitRangeList is a list of LimitRange items.",
                                                              "descriptionCN": "限界范围列表是一个包含限界范围项的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可版本化的架构。服务器应该将识别到的结构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "项是一个限范围对象的列表。更多信息：https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.LimitRange"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示该对象所代表的 REST 资源的一个字符串值。服务器可以根据客户端提交请求时所使用的端点来推测这个值。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LimitRangeSpec": {
                                                              "description": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
                                                              "descriptionCN": "限界规则是用于指定资源类型匹配时的最大使用限制。",
                                                              "properties": {
                                                                  "limits": {
                                                                      "description": "Limits is the list of LimitRangeItem objects that are enforced.",
                                                                      "descriptionCN": "限制是用于强制执行LimitRangeItem对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeItem"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LoadBalancerIngress": {
                                                              "description": "LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.",
                                                              "descriptionCN": "负载均衡器入站端口表示负载均衡器入站点的状态：将要发送到入站点的流量。",
                                                              "properties": {
                                                                  "hostname": {
                                                                      "description": "Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)",
                                                                      "descriptionCN": "主机名设置为基于DNS的负载均衡入口点。这通常是AWS负载均衡器。",
                                                                      "type": "string"
                                                                  },
                                                                  "ip": {
                                                                      "description": "IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)",
                                                                      "descriptionCN": "IP地址将被设置为基于IP的负载均衡器入站点。这通常指的是GCE或OpenStack的负载均衡器。",
                                                                      "type": "string"
                                                                  },
                                                                  "ipMode": {
                                                                      "description": "IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to \"VIP\" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to \"Proxy\" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.",
                                                                      "descriptionCN": "IPMode是指负载均衡器的IP行为方式，只有当ip字段被指定时才可能被设置。将其设置为VIP表示将流量发送到具有目的地设置为负载均衡器的IP和端口的节点。将其设置为Proxy表示将流量发送到具有目的地设置为节点的IP、节点的端口或pod的IP和端口。服务实现可以利用此信息调整流量路由。",
                                                                      "type": "string"
                                                                  },
                                                                  "ports": {
                                                                      "description": "Ports is a list of records of service ports If used, every port defined in the service should have an entry in it",
                                                                      "descriptionCN": "港口是一个服务端口的记录列表。如果使用，每一个定义在服务中的端口都应该有一个条目。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PortStatus"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LoadBalancerStatus": {
                                                              "description": "LoadBalancerStatus represents the status of a load-balancer.",
                                                              "descriptionCN": "负载均衡器状态表示负载均衡器的状态。",
                                                              "properties": {
                                                                  "ingress": {
                                                                      "description": "Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.",
                                                                      "descriptionCN": "接入是负载均衡器的访问点列表。为服务分配的服务流量应发送到这些接入点。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerIngress"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LocalObjectReference": {
                                                              "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                                                              "descriptionCN": "本地对象引用包含了足够的信息，让你可以在同一个命名空间中找到被引用的对象。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考对象的名字。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.LocalVolumeSource": {
                                                              "description": "Local represents directly-attached storage with node affinity (Beta feature)",
                                                              "descriptionCN": "本地代表直接关联存储，节点归属（Beta功能）",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a filesystem if unspecified.",
                                                                      "descriptionCN": "文件系统类型是指挂载在该路径上的文件系统类型。只有当Path为块设备时，才适用。必须是支持主机操作系统运行的操作系统平台提供的文件系统类型。例如：“ext4”，“xfs”，“ntfs”。默认情况下，如果没有指定，则自动选择一个文件系统。",
                                                                      "type": "string"
                                                                  },
                                                                  "path": {
                                                                      "description": "path of the full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).",
                                                                      "descriptionCN": "该路径表示在节点上的全路径卷。它可以是目录或块设备（硬盘、分区等）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ModifyVolumeStatus": {
                                                              "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation",
                                                              "descriptionCN": "修改卷存状态代表Controller 修改卷存操作的状态对象",
                                                              "properties": {
                                                                  "status": {
                                                                      "description": "status is the status of the ControllerModifyVolume operation. It can be in any of following states:\n - Pending\n   Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as\n   the specified VolumeAttributesClass not existing.\n - InProgress\n   InProgress indicates that the volume is being modified.\n - Infeasible\n  Infeasible indicates that the request has been rejected as invalid by the CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass needs to be specified.\nNote: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.",
                                                                      "descriptionCN": "状态是控制器修改卷的当前状态。它可以处于以下任何一种状态下：\n - 待处理\n待处理表示由于未满足要求，例如指定的VolumeAttributesClass不存在。\n - 进行中\n进行中表示正在修改卷。\n - 不可行\n不可行表示请求已被CSI驱动器拒绝为无效。为了解决错误，需要指定有效的VolumeAttributesClass。\n请注意：未来可能会添加新的状态。消费者应检查未知的状态并适当失败。",
                                                                      "type": "string"
                                                                  },
                                                                  "targetVolumeAttributesClassName": {
                                                                      "description": "targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled",
                                                                      "descriptionCN": "目标体积属性类class_name是正在调整的PVC当前正在处理的VolumeAttributesClass的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NFSVolumeSource": {
                                                              "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表一个NFS挂载，该挂载项在Pod的生命周期中持续存在。NFS卷不支持所有权管理或SELinux标签更改。",
                                                              "properties": {
                                                                  "path": {
                                                                      "description": "path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "descriptionCN": "NFS服务器上导出的路径。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "descriptionCN": "这里的readOnly属性将强制NFS export以只读权限挂载。默认为false。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "type": "boolean"
                                                                  },
                                                                  "server": {
                                                                      "description": "server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "descriptionCN": "服务器是NFS服务器的主机名或IP地址。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Namespace": {
                                                              "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional.",
                                                              "descriptionCN": "命名空间为名称提供了一个范围。使用多个命名空间是可选的。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此表示对象的可变架构版本。服务器应该将识别的结构转换为最新的内部值，如果拒绝未识别的值，则可能返回错误信息。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示该对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时提供的端点推测出这个值。不能被更新。在CamelCase格式下，更多信息可以在https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds中找到。",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the behavior of the Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "标准化定义了命名空间的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status describes the current status of a Namespace. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态描述当前命名空间的状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NamespaceCondition": {
                                                              "description": "NamespaceCondition contains details about state of namespace.",
                                                              "descriptionCN": "NamespaceCondition包含关于命名空间状态的信息。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "descriptionCN": "非常抱歉，由于您没有提供需要翻译的文字，我无法为您完成这个任务。请您提供需要翻译的文字，我会尽我所能将其准确地翻译成中文。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "descriptionCN": "非常抱歉，您的原文无法提供。请您重新输入或提供更多上下文信息以便我更好地为您提供服务。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "descriptionCN": "当然可以，但是您还没有提供需要翻译的文字。请您把文字内容粘贴到这里，我会尽力为您提供准确的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "条件的状态，真、假、未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of namespace controller condition.",
                                                                      "descriptionCN": "类型名控制器条件。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NamespaceList": {
                                                              "description": "NamespaceList is a list of Namespaces.",
                                                              "descriptionCN": "NamespaceList 是一个 Namespaces 列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化表示形式。服务器应该将识别到的规范转换为内部的最新值，如果拒绝未知的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                                      "descriptionCN": "Items 是 List 中的 namespace 对象列表。更多信息： https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Namespace"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind”是表示此对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时的端点推测此值。不能更新。在CamelCase命名空间中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NamespaceSpec": {
                                                              "description": "NamespaceSpec describes the attributes on a Namespace.",
                                                              "descriptionCN": "命名空间规范描述了命名空间中的属性。",
                                                              "properties": {
                                                                  "finalizers": {
                                                                      "description": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
                                                                      "descriptionCN": "最终者是一个不可见的列表，必须为空才能永久删除存储对象。更多信息：https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NamespaceStatus": {
                                                              "description": "NamespaceStatus is information about the current status of a Namespace.",
                                                              "descriptionCN": "Namespace状态是关于当前Namespace的状况信息。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a namespace's current state.",
                                                                      "descriptionCN": "代表当前命名空间的状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "phase": {
                                                                      "description": "Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
                                                                      "descriptionCN": "阶段是命名空间的当前生命周期阶段。更多信息：https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Node": {
                                                              "description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).",
                                                              "descriptionCN": "Node 是 Kubernetes 中的一个工作节点。每个节点将在缓存（即 etcd）中具有唯一的标识符（即 id）。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别到的结构转换为内部值的最新状态，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示该对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时所指向的端点来推测此。不能更新。以CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the behavior of a node. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "协议定义了一个节点的行为。https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Most recently observed status of the node. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "最近观察到节点的状态。由系统提供。只读的。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeAddress": {
                                                              "description": "NodeAddress contains information for the node's address.",
                                                              "descriptionCN": "节点地址包含该节点的地址信息。",
                                                              "properties": {
                                                                  "address": {
                                                                      "description": "The node address.",
                                                                      "descriptionCN": "节点地址。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
                                                                      "descriptionCN": "Node 地址类型，其中可以是 Hostname、ExternalIP 或 InternalIP。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeAffinity": {
                                                              "description": "Node affinity is a group of node affinity scheduling rules.",
                                                              "descriptionCN": "节点集合理论是一种关于节点集合理论的设定。",
                                                              "properties": {
                                                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                      "descriptionCN": "调度器会选择符合这个字段指定的affinity表达式的节点进行 scheduling，但它可能会选择一个违反其中一个或多个表达式的节点。在满足所有调度要求（资源请求、要求在执行期间分配的affinity表达式等）的情况下，通过迭代这个字段中的每个元素，并将 \"weight\" 添加到和中，如果节点匹配相应的matchExpressions，则将该节点添加到具有最高权重的节点列表中。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
                                                                      }
                                                                  },
                                                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                      "descriptionCN": "如果该字段指定的偏好要求在调度时间未能满足，则Pod将不会被分配到节点。如果该字段在Pod执行过程中（例如，由于更新）在某些时刻不再满足偏好要求（例如，系统可能会或可能不尝试最终移除Pod从其节点），系统可能会或可能不试图最终移除Pod从其节点。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeCondition": {
                                                              "description": "NodeCondition contains condition information for a node.",
                                                              "descriptionCN": "NodeCondition 包含一个节点的条件信息。",
                                                              "properties": {
                                                                  "lastHeartbeatTime": {
                                                                      "description": "Last time we got an update on a given condition.",
                                                                      "descriptionCN": "上次我们得到了关于某个条件的更新。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transit from one status to another.",
                                                                      "descriptionCN": "上次状态从一种状态转变为另一种状态。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "Human readable message indicating details about last transition.",
                                                                      "descriptionCN": "可读人类级别的消息，指示上一次过渡的详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "(brief) reason for the condition's last transition.",
                                                                      "descriptionCN": "疾病的原因最后的过渡。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "条件状态，真/假/未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of node condition.",
                                                                      "descriptionCN": "节点状态类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeConfigSource": {
                                                              "description": "NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil. This API is deprecated since 1.22",
                                                              "descriptionCN": "NodeConfigSource指定了配置节点的来源。至少有一个子字段（不包括元数据）必须是非空的。此API从1.22开始过时。",
                                                              "properties": {
                                                                  "configMap": {
                                                                      "description": "ConfigMap is a reference to a Node's ConfigMap",
                                                                      "descriptionCN": "ConfigMap是一个指向Node的ConfigMap的引用。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapNodeConfigSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeConfigStatus": {
                                                              "description": "NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.",
                                                              "descriptionCN": "NodeConfigStatus 描述 Node 规划的配置（由 NodeSpec.ConfigSource 分配）的状态。",
                                                              "properties": {
                                                                  "active": {
                                                                      "description": "Active reports the checkpointed config the node is actively using. Active will represent either the current version of the Assigned config, or the current LastKnownGood config, depending on whether attempting to use the Assigned config results in an error.",
                                                                      "descriptionCN": "活动报告节点正在积极使用检查点配置。活动状态表示当前分配的配置版本，或者尝试使用分配配置时是否产生的错误。\n\n请注意，这是简化的翻译版本。原文中还可能包含更多的细节和语法用法。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
                                                                  },
                                                                  "assigned": {
                                                                      "description": "Assigned reports the checkpointed config the node will try to use. When Node.Spec.ConfigSource is updated, the node checkpoints the associated config payload to local disk, along with a record indicating intended config. The node refers to this record to choose its config checkpoint, and reports this record in Assigned. Assigned only updates in the status after the record has been checkpointed to disk. When the Kubelet is restarted, it tries to make the Assigned config the Active config by loading and validating the checkpointed payload identified by Assigned.",
                                                                      "descriptionCN": "分配的报告指定了节点将尝试使用的校验配置。当NodeSpec.ConfigSource更新时，节点会将关联的配置payload保存到本地磁盘，并记录意图配置。该节点使用此记录来选择其配置校验，然后在Assigned中报告此记录。Assign只有在记录被写入磁盘后才更新状态。当Kubelet重启时，它试图通过加载和验证确认后的payload来使Assigned配置变为Active配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
                                                                  },
                                                                  "error": {
                                                                      "description": "Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.",
                                                                      "descriptionCN": "错误描述了配置源与活跃配置之间的不一致。例如，尝试将配置源本地化为分配记录进行备份，尝试检查关联于配置源的payload进行备份，尝试加载或验证分配配置等。在同步配置时可能产生不同点的错误。在后续同步过程中，早期错误（如下载或备份错误）不会导致回滚到Last Known Good，而可能会在整个Kubelet重试中解决。后期错误（如加载或验证已备份的配置）会导致回滚到Last Known Good。在这种情况下，通常可以通过修复配置源分配中的错误来解决问题。您可以通过搜索Kubelet日志以查找错误消息中的更多信息来进行调试。错误是人类可读的描述其错误状态的描述；机器可以检查是否为空，但不应依赖错误文本在Kubelet版本间的稳定性。",
                                                                      "type": "string"
                                                                  },
                                                                  "lastKnownGood": {
                                                                      "description": "LastKnownGood reports the checkpointed config the node will fall back to when it encounters an error attempting to use the Assigned config. The Assigned config becomes the LastKnownGood config when the node determines that the Assigned config is stable and correct. This is currently implemented as a 10-minute soak period starting when the local record of Assigned config is updated. If the Assigned config is Active at the end of this period, it becomes the LastKnownGood. Note that if Spec.ConfigSource is reset to nil (use local defaults), the LastKnownGood is also immediately reset to nil, because the local default config is always assumed good. You should not make assumptions about the node's method of determining config stability and correctness, as this may change or become configurable in the future.",
                                                                      "descriptionCN": "上次知道好的报告了节点在尝试使用分配配置时遇到错误时会恢复到的状态。分配配置在节点确定它是稳定和正确的之后，就会成为上次知道好的。这目前通过本地记录分配配置更新的10分钟浸泡期来实现。如果分配配置在这期间保持活跃，那么它就会成为上次知道好的。请注意，如果Spec.ConfigSource设置为nil（使用本地默认），那么上次知道好的也会立即被重置为nil，因为本地默认配置总是被认为是好的。你不能假设节点决定配置稳定性或正确性的方法，因为未来可能会发生变化或可配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeDaemonEndpoints": {
                                                              "description": "NodeDaemonEndpoints lists ports opened by daemons running on the Node.",
                                                              "descriptionCN": "NodedaemonEndpoints列出了节点上运行的daemons（守护进程）打开的所有端口。",
                                                              "properties": {
                                                                  "kubeletEndpoint": {
                                                                      "description": "Endpoint on which Kubelet is listening.",
                                                                      "descriptionCN": "Kubelet监听的端口。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.DaemonEndpoint"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeList": {
                                                              "description": "NodeList is the whole list of all Nodes which have been registered with master.",
                                                              "descriptionCN": "NodeList 是所有注册到 master 的节点的全部。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将可识别的规范转换为内部最新的值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of nodes",
                                                                      "descriptionCN": "节点列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Node"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，代表这个对象所表示的 REST 资源。服务器可以根据客户端提交请求时的 endpoint 推断出这个值。不能被更新。在 camelCase 之下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeSelector": {
                                                              "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
                                                              "descriptionCN": "节点选择器表示在一个集合中对多个标签查询的结果的联合；也就是说，它表示由节点选择器术语代表的或（）。",
                                                              "properties": {
                                                                  "nodeSelectorTerms": {
                                                                      "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                      "descriptionCN": "必需。一个节点选择器术语列表。这些术语是并列的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeSelectorRequirement": {
                                                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                              "descriptionCN": "节点选择器需求是一个包含值、键和关联键和值的操作符的selector。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "descriptionCN": "被选中的选项对应的标签键。",
                                                                      "type": "string"
                                                                  },
                                                                  "operator": {
                                                                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                      "descriptionCN": "代表键与其值之间的关系。有效的运算符包括In, NotIn, Exists, DoesNotExist. Greater Than（大于），Less Than（小于）。",
                                                                      "type": "string"
                                                                  },
                                                                  "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                      "descriptionCN": "一串字符串值数组。如果运算符是In或NotIn，数组必须非空。如果运算符是Exists或DoesNotExist，数组必须为空。如果运算符是Gt或Lt，数组必须只有一个元素，这个元素将被解释为一个整数。此数组在战略合并补丁过程中被替换。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeSelectorTerm": {
                                                              "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                              "descriptionCN": "节点选择器选项为空或空的匹配没有对象。他们的要求是AND的。TopologySelectorTerm类型实现了NodeSelectorTerm的一个子集。",
                                                              "properties": {
                                                                  "matchExpressions": {
                                                                      "description": "A list of node selector requirements by node's labels.",
                                                                      "descriptionCN": "关于节点标签的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
                                                                      }
                                                                  },
                                                                  "matchFields": {
                                                                      "description": "A list of node selector requirements by node's fields.",
                                                                      "descriptionCN": "Node的字段属性列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeSpec": {
                                                              "description": "NodeSpec describes the attributes that a node is created with.",
                                                              "descriptionCN": "NodeSpec 是 Node.js 模块描述如何创建节点的属性。",
                                                              "properties": {
                                                                  "configSource": {
                                                                      "description": "Deprecated: Previously used to specify the source of the node's configuration for the DynamicKubeletConfig feature. This feature is removed.",
                                                                      "descriptionCN": "之前的使用方式是用来指定节点配置的来源，以支持动态kubelet。这个功能已经被移除。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
                                                                  },
                                                                  "externalID": {
                                                                      "description": "Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966",
                                                                      "descriptionCN": "已过时。并非所有Kubernetes节点都设置此字段。请在1.13之后移除此字段。查看：https://jira.k8s.io/61966",
                                                                      "type": "string"
                                                                  },
                                                                  "podCIDR": {
                                                                      "description": "PodCIDR represents the pod IP range assigned to the node.",
                                                                      "descriptionCN": "PodCIDR表示为节点分配的pod IP范围。",
                                                                      "type": "string"
                                                                  },
                                                                  "podCIDRs": {
                                                                      "description": "podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.",
                                                                      "descriptionCN": "PodCIDRs表示节点为使用Pod的IP范围分配给该节点。如果这个字段被指定，0号条目必须匹配podCIDR字段。它可以包含IPv4和IPv6中的最多1个值。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "providerID": {
                                                                      "description": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>",
                                                                      "descriptionCN": "云提供者为节点分配的ID格式：<ProviderName>://<ProviderSpecificNodeID>",
                                                                      "type": "string"
                                                                  },
                                                                  "taints": {
                                                                      "description": "If specified, the node's taints.",
                                                                      "descriptionCN": "如果指定，节点的taints。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Taint"
                                                                      }
                                                                  },
                                                                  "unschedulable": {
                                                                      "description": "Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration",
                                                                      "descriptionCN": "不可调度的控制节点：新的Pod的调度性。默认情况下，节点是可调度的。更多信息：https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeStatus": {
                                                              "description": "NodeStatus is information about the current status of a node.",
                                                              "descriptionCN": "节点状态是关于当前节点状态的信息。",
                                                              "properties": {
                                                                  "addresses": {
                                                                      "description": "List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See https://pr.k8s.io/79391 for an example. Consumers should assume that addresses can change during the lifetime of a Node. However, there are some exceptions where this may not be possible, such as Pods that inherit a Node's address in its own status or consumers of the downward API (status.hostIP).",
                                                                      "descriptionCN": "节点可达地址列表。根据云提供商查询，如果可用。更多信息：https://kubernetes.io/docs/concepts/nodes/node/#addresses 注意：此字段声明为可合并的，但合并的关键字并不足够独特，可能会在合并时导致数据损坏。请使用完整的替换修复。查看https://pr.k8s.io/79391以获取示例。消费者应假设地址可以在节点生命周期期间更改。然而，有一些例外情况可能无法实现，例如Pods在其自身的状态中继承节点的地址，以及从下降API（status.hostIP）的消费者。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAddress"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "allocatable": {
                                                                      "description": "Allocatable represents the resources of a node that are available for scheduling. Defaults to Capacity.",
                                                                      "descriptionCN": "可分配资源指的是节点上的可用资源，，默认值为容量。",
                                                                      "type": "object"
                                                                  },
                                                                  "capacity": {
                                                                      "description": "Capacity represents the total resources of a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
                                                                      "descriptionCN": "容量是指节点的总资源。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
                                                                      "type": "object"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition",
                                                                      "descriptionCN": "条件是一个当前观察到节点状态的数组。更多信息：https://kubernetes.io/docs/concepts/nodes/node/#condition",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.NodeCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "config": {
                                                                      "description": "Status of the config assigned to the node via the dynamic Kubelet config feature.",
                                                                      "descriptionCN": "动态Kubelet配置功能分配给节点的配置状态。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigStatus"
                                                                  },
                                                                  "daemonEndpoints": {
                                                                      "description": "Endpoints of daemons running on the Node.",
                                                                      "descriptionCN": "节点上的守护进程的端点。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeDaemonEndpoints"
                                                                  },
                                                                  "images": {
                                                                      "description": "List of container images on this node",
                                                                      "descriptionCN": "在节点上列出的容器映像列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerImage"
                                                                      }
                                                                  },
                                                                  "nodeInfo": {
                                                                      "description": "Set of ids/uuids to uniquely identify the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#info",
                                                                      "descriptionCN": "设置一组唯一的标识符/UUID，以唯一地识别节点。更多信息：https://kubernetes.io/docs/concepts/nodes/node/#info",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSystemInfo"
                                                                  },
                                                                  "phase": {
                                                                      "description": "NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.",
                                                                      "descriptionCN": "NodePhase 是最近观察到的节点生命周期阶段。更多信息：https://kubernetes.io/docs/concepts/nodes/node/#phase 那个字段从未被填充，现在已经被废弃。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumesAttached": {
                                                                      "description": "List of volumes that are attached to the node.",
                                                                      "descriptionCN": "附件到节点的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.AttachedVolume"
                                                                      }
                                                                  },
                                                                  "volumesInUse": {
                                                                      "description": "List of attachable volumes in use (mounted) by the node.",
                                                                      "descriptionCN": "已安装的可附件卷数（挂载）在节点上的列表。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.NodeSystemInfo": {
                                                              "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node.",
                                                              "descriptionCN": "NodeSystemInfo是一个用于唯一标识节点的集合id/uuid。",
                                                              "properties": {
                                                                  "architecture": {
                                                                      "description": "The Architecture reported by the node",
                                                                      "descriptionCN": "节点报告的架构。",
                                                                      "type": "string"
                                                                  },
                                                                  "bootID": {
                                                                      "description": "Boot ID reported by the node.",
                                                                      "descriptionCN": "节点报告的boot ID。",
                                                                      "type": "string"
                                                                  },
                                                                  "containerRuntimeVersion": {
                                                                      "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).",
                                                                      "descriptionCN": "通过运行时远程API（例如：containerd://1.4.2）报告的容器Runtime版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "kernelVersion": {
                                                                      "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).",
                                                                      "descriptionCN": "node上从'uname -r'获取的Kernel版本（例如：3.16.0-0.bpo.4-amd64）。",
                                                                      "type": "string"
                                                                  },
                                                                  "kubeProxyVersion": {
                                                                      "description": "KubeProxy Version reported by the node.",
                                                                      "descriptionCN": "KubeProxy 的版本信息已从节点报告。",
                                                                      "type": "string"
                                                                  },
                                                                  "kubeletVersion": {
                                                                      "description": "Kubelet Version reported by the node.",
                                                                      "descriptionCN": "Kubelet 版本由节点报告。",
                                                                      "type": "string"
                                                                  },
                                                                  "machineID": {
                                                                      "description": "MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html",
                                                                      "descriptionCN": "该节点报告的机器ID。在集群中，此字段优先用于唯一性的机器标识。从man(5)机器-id页面了解更多：http://man7.org/linux/man-pages/man5/machine-id.5.html",
                                                                      "type": "string"
                                                                  },
                                                                  "operatingSystem": {
                                                                      "description": "The Operating System reported by the node",
                                                                      "descriptionCN": "该节点操作系统报告",
                                                                      "type": "string"
                                                                  },
                                                                  "osImage": {
                                                                      "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).",
                                                                      "descriptionCN": "操作系统镜像由从 /etc/os-release 文件中获取（例如 Debian GNU/Linux 7 (wheezy)）。",
                                                                      "type": "string"
                                                                  },
                                                                  "systemUUID": {
                                                                      "description": "SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
                                                                      "descriptionCN": "节点报告的系统UUID。对于唯一的机器标识，MachineID更优先。此字段是特定于Red Hat主机 https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ObjectFieldSelector": {
                                                              "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
                                                              "descriptionCN": "对象字段选择器选择对象中的一个API版本化字段。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                      "descriptionCN": "字段路径的格式写法为，默认为\"v1\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "fieldPath": {
                                                                      "description": "Path of the field to select in the specified API version.",
                                                                      "descriptionCN": "指定API版本中的领域选择路径。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ObjectReference": {
                                                              "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                                                              "descriptionCN": "对象引用包含足够的信息，可以让你检查或修改所关联的对象。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "API version of the referent.",
                                                                      "descriptionCN": "参照资源的API版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "fieldPath": {
                                                                      "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
                                                                      "descriptionCN": "如果指的是一个对象的部分而不是整个对象，这个字符串应该包含一个有效的JSON/Go字段访问语句，如desiredState.manifest.containers[2]。例如，如果对象引用的是在一个pod中的容器，这将呈现出值为：\"spec.containers[name]\"（其中\"name\"是指触发事件的容器的名字）或如果没有容器名，则为：\"spec.containers[2]\"（在这个pod中索引为2的容器）。这种语法只是为了有一个明确的方式来引用对象的一部分。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "这是指类型和变体。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "命名的参照。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                                      "descriptionCN": "命名空间是对象的上下文。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceVersion": {
                                                                      "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                      "descriptionCN": "在此引用的特定资源版本。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                                      "descriptionCN": "参考对象的uid。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolume": {
                                                              "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
                                                              "descriptionCN": "持久卷是一种由管理员提供的存储资源。它类似于节点。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的版本化结构。服务器应该将识别的结构转换为内部的最新值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个表示此对象所代表的 REST 资源的字符串值。服务器可能根据客户端提交请求时所使用的端点推测出这个 value。不能被更新。CamelCase 美观且易读，更多详情见：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec defines a specification of a persistent volume owned by the cluster. Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
                                                                      "descriptionCN": "\"spec\"定义了一个由集群所有者拥有且由管理员配置的持久卷的规范。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status represents the current information/status for the persistent volume. Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
                                                                      "descriptionCN": "状态表示持久卷的当前信息状态。由系统维护。只读。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaim": {
                                                              "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
                                                              "descriptionCN": "持久卷积是用户请求并申请持久卷的请求。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别的格式转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一种表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时提供的端点推断出这一点。不能更新。在驼峰命名法中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "descriptionCN": "\"Spec\"是指 Pod 主机要求的 volume 的期望特性和详细信息。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "descriptionCN": "状态代表持久卷请求的当前信息/状态。只读。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimCondition": {
                                                              "description": "PersistentVolumeClaimCondition contains details about state of pvc",
                                                              "descriptionCN": "持久性VolumeClaimCondition包含有关pvc状态的详细信息。",
                                                              "properties": {
                                                                  "lastProbeTime": {
                                                                      "description": "lastProbeTime is the time we probed the condition.",
                                                                      "descriptionCN": "上次探测时间是我们探查条件的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastTransitionTime": {
                                                                      "description": "lastTransitionTime is the time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后转换时间是状态从一种状态过渡到另一种状态的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message is the human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "消息是表示上一次转换细节的人类可读的消息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
                                                                      "descriptionCN": "原因是一个独特且可机器理解的字符串，用于描述条件的最后过渡的原因。如果它报告\"ResizeStarted\"，这意味着底层持久卷正在被重新调整。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供需要翻译的文字，我会尽力帮助您将其准确地翻译为中文。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "descriptionCN": "当然可以，但是我需要知道你要翻译的文字内容是什么。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimList": {
                                                              "description": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
                                                              "descriptionCN": "持久性卷积请求列表是一个持久性卷积请求项的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的schema。服务器应该将识别到的 schema 转换为内部最新的值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "descriptionCN": "\"items\" 是一个持久卷的列表。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时提供的端点推测此属性。无法更新。以CamelCase的形式呈现更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
                                                              "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                                                              "descriptionCN": "持久卷项配置描述了存储设备的常见属性，并允许源提供特定属性。",
                                                              "properties": {
                                                                  "accessModes": {
                                                                      "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                                                      "descriptionCN": "访问模式包含应该拥有的所需的访问模式。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "dataSource": {
                                                                      "description": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                                                      "descriptionCN": "数据源字段可以用来指定： * 如果提供者或外部控制器支持指定的数据源，将根据指定的数据源的内容创建一个新的卷。当AnyVolumeDataSource功能门限被启用时，数据源内容将复制到dataSourceRef，而 dataSourceRef内容将不复制到dataSourceRef如果namespace被指定，则dataSourceRef不会复制到dataSource。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
                                                                  },
                                                                  "dataSourceRef": {
                                                                      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                                                      "descriptionCN": "数据源指定了从其中填充数据的对象，如果需要一个非空的存储空间。这可以是任何非空API组（非核心对象）或持久性VolumeClaim对象。当这个字段被指定时，如果所指定的对象类型与安装的某个类型的 Volume Provider 或 Dynamic Provisioner 类型匹配，volume binding 将成功进行。该字段将替换 dataSource 字段的功能，并因此，如果这两个字段都为空，则它们必须具有相同的值。为了兼容性，请在 dataSourceRef 中不指定 namespace 时设置 dataSource 和 dataSourceRef 的所有字段。当 namespace 在 dataSourceRef 中设置时，如果其中一个字段为空并且另一个字段不为空，则dataSource 不会被设置为相同的值。以下是 dataSource 和 dataSourceRef 的三个重要区别： * dataSource 只允许两种特定类型的对象，而 dataSourceRef 允许任何非核心对象，包括 PersistentVolumeClaim 对象。 * dataSource 看似忽略不允许的值（丢弃它们），但 dataSourceRef 保留所有值，并在提供不允许的值时生成错误。 * dataSource 只允许本地对象，而 dataSourceRef 能够在任意命名空间中。 （beta）使用此字段需要 AnyVolumeDataSource 功能开关启用。 （alpha）使用 dataSourceRef 中的 namespace 地址需启用 CrossNamespaceVolumeDataSource 功能开关。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.TypedObjectReference"
                                                                  },
                                                                  "resources": {
                                                                      "description": "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                                                      "descriptionCN": "资源代表的是容器应该拥有的最低资源。如果RecoverVolumeExpansionFailure功能被启用，用户可以指定比之前值更低但仍然高于容器状态字段记录的容量要求。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.VolumeResourceRequirements"
                                                                  },
                                                                  "selector": {
                                                                      "description": "selector is a label query over volumes to consider for binding.",
                                                                      "descriptionCN": "selector 是对卷来考虑绑定的标签查询。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "storageClassName": {
                                                                      "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                                                      "descriptionCN": "存储类名称是claim所需的StorageClass的名称。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeAttributesClassName": {
                                                                      "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.",
                                                                      "descriptionCN": "可以使用volumeAttributesClassName设置这个claim使用的VolumeAttributesClass。如果指定，CSI驱动程序将创建或更新具有相应VolumeAttributesClass定义的卷。这与其存储ClassName的目的不同，可以在创建 claim 之后更改。一个空字符串值表示不将VolumeAttributesClass应用于该claim，但一旦设置为空字符串，就不能将其字段设为空字符串。\n\n如果没有指定并且 PersistentVolumeClaim未绑定，则由持久化控制器根据是否存在默认的VolumeAttributesClass来设置此字段。如果资源引用的VolumeAttributesClass不存在，则将该PersistentVolumeClaim设置为Pending状态，反映在修改volumeStatus字段上，直到存在这样的资源为止。\n\n更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass (Alpha) 使用此字段需要 VolumeAttributesClass 特性开关启用。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeMode": {
                                                                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                                                                      "descriptionCN": "“volumeMode”定义了要求哪种类型的卷，如果没有包含在声明中，则假设使用的文件系统是。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeName": {
                                                                      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                                                      "descriptionCN": "volumeName是这个声称的持久卷的绑定引用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
                                                              "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
                                                              "descriptionCN": "持久性卷积请求状态是持久性卷积请求的当前状态。",
                                                              "properties": {
                                                                  "accessModes": {
                                                                      "description": "accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                                                      "descriptionCN": "访问模式包含挂载于 PVC 实际访问模式。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "allocatedResourceStatuses": {
                                                                      "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                                                      "descriptionCN": "资源状态存储正在为给定的PVC分配资源的状态。键名遵循标准Kubernetes标签语法。有效值可以是：\n- 不带前缀的键：\n  - storage -卷的容量。\n  - 自定义资源必须使用实现定义前缀如\"example.com/my-custom-resource\"\n 除了上述值外，无前缀或带有kube.io前缀的键被认为是保留的，因此可能不能使用。\n\n ClaimResourceStatus 可以处于以下任何一种状态之一：\n- ControllerResizeInProgress：当resize controller启动缩放卷在控制平面中时。\n- ControllerResizeFailed：当resize失败时，resize controller具有终端错误。\n- NodeResizePending：当resize controller完成缩放卷但在节点上进一步缩放卷需要更多的操作时。\n- NodeResizeInProgress：当kubelet开始缩放卷时。\n- NodeResizeFailed：当resize失败时，kubelet具有终端错误。临时错误不会设置NodeResizeFailed。\n例如：如果扩大PVC的容量，这个字段可以处于以下状态之一：\n- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\n当此字段未设置时，这意味着对于给定的PVC，没有正在进行的缩放操作。\n\n控制器接收到先前未知的resourceName或ClaimResourceStatus更新时，应忽略该更新，因为它是在其设计目的下进行的。\n例如，一个只负责卷的容量扩展的控制器应该忽略有关PVC更新的情况。",
                                                                      "type": "object"
                                                                  },
                                                                  "allocatedResources": {
                                                                      "description": "allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                                                      "descriptionCN": "资源分配跟踪给PVC（包括其容量）的资源分配。以下是最标准的Kubernetes标签语法的关键名称。有效值可以是：\n- 不预定义的键：存储 - 座储卷的容量。\n- 自定义资源必须使用实现定义的前缀名称，如\"example.com/my-custom-resource\"\n除了上述值 - 未预定义或 Kubernetes.io 前缀的键被视为保留资源，并可能无法使用。\n\n在这里报告的容量可能会大于实际容量，当要求扩大规模时。对于存储空间，分配资源和 PVC.spec.resources 中较大的值被使用。如果分配资源未设置，则仅在正在进行扩张操作且实际存储容量等于或低于请求容量的情况下降低PVC.spec.resources 的大小。 如果要降低规模扩展容量的需求，仅需检查正在进行中的扩张操作以及实际存储容量是否等于或更低于请求容量。此为 alpha 版本，并需要启用 RecoverVolumeExpansionFailure 功能。",
                                                                      "type": "object"
                                                                  },
                                                                  "capacity": {
                                                                      "description": "capacity represents the actual resources of the underlying volume.",
                                                                      "descriptionCN": "容量表示底层体积的真正资源。",
                                                                      "type": "object"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
                                                                      "descriptionCN": "条件是当前持久卷使用情况。如果底层持久卷正在被重新尺寸，则设置Condition为'ResizeStarted'。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "currentVolumeAttributesClassName": {
                                                                      "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim This is an alpha field and requires enabling VolumeAttributesClass feature.",
                                                                      "descriptionCN": "当前VolumeAttributesClassName是该PersistentVolumeClaim正在使用的VolumeAttributesClass的当前名称。当未设置时，将不会为这个PersistentVolumeClaim应用任何VolumeAttributeClass。这是一个alpha字段，并且需要启用VolumeAttributesClass功能。",
                                                                      "type": "string"
                                                                  },
                                                                  "modifyVolumeStatus": {
                                                                      "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted. This is an alpha field and requires enabling VolumeAttributesClass feature.",
                                                                      "descriptionCN": "修改卷积状态代表控制器修改卷积操作的状态对象。当此未设置时，正在尝试进行的修改卷积操作不存在。这是一个alpha字段，需要启用VolumeAttributesClass功能。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ModifyVolumeStatus"
                                                                  },
                                                                  "phase": {
                                                                      "description": "phase represents the current phase of PersistentVolumeClaim.",
                                                                      "descriptionCN": "\"阶段\"代表持久卷标当前的阶段。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
                                                              "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
                                                              "descriptionCN": "持久性卷标模板用于作为EphemeralVolumeSource中的持久性卷标对象的生成。",
                                                              "properties": {
                                                                  "metadata": {
                                                                      "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
                                                                      "descriptionCN": "可能包含标签和注释，这些会被复制到PVC中。在验证期间不允许添加其他字段，并且将被拒绝。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
                                                                      "descriptionCN": "持久卷积Claim的规格。整个内容被复制到从这个模板创建的PVC中，同样在持久卷积Claim中的字段也是有效的。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
                                                              "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
                                                              "descriptionCN": "持久性VolumeClaimVolumeSource引用用户的PVC在同一个命名空间。这个卷找到绑定的PV，并将该卷挂载到Pod上。基本上，持久性VolumeClaimVolumeSource是一个由其他人（系统）拥有的另一种类型的卷的包装器。",
                                                              "properties": {
                                                                  "claimName": {
                                                                      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "descriptionCN": "要将文本翻译为中文，请不要遗漏细节。正文如下： claimName 是同一命名空间中 pod 中使用的持久卷Claim 的名称。更多信息： https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
                                                                      "descriptionCN": "“readOnly”将强制在VolumeMounts中设置ReadOnly。默认为false。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeList": {
                                                              "description": "PersistentVolumeList is a list of PersistentVolume items.",
                                                              "descriptionCN": "持久卷列表是一个持久卷项的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的结构化版本。服务器应该将识别到的规范转换为最新的内部值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
                                                                      "descriptionCN": "\"items\" 是一个持久卷列表。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolume"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端向其提交请求的端点推断出这个值。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeSpec": {
                                                              "description": "PersistentVolumeSpec is the specification of a persistent volume.",
                                                              "descriptionCN": "持久卷标是持久卷的规格。",
                                                              "properties": {
                                                                  "accessModes": {
                                                                      "description": "accessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
                                                                      "descriptionCN": "accessModes是一个存储卷的可用方式。更多信息可以在这里：https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "awsElasticBlockStore": {
                                                                      "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "descriptionCN": "AWS Elastic Block Store（EBS）代表了一个AWS磁盘资源，该资源被绑定到kubernetes主机机器上，并暴露给Pod。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
                                                                  },
                                                                  "azureDisk": {
                                                                      "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                                                      "descriptionCN": "Azure Disk表示主机上的Azure Data Disk挂载，并绑定到Pod。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
                                                                  },
                                                                  "azureFile": {
                                                                      "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                                                      "descriptionCN": "AzureFile代表主机上的Azure File Service挂载，并与Pod绑定。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource"
                                                                  },
                                                                  "capacity": {
                                                                      "description": "capacity is the description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
                                                                      "descriptionCN": "容量是持久卷的资源描述，更多信息可以在 https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity 进行查看。",
                                                                      "type": "object"
                                                                  },
                                                                  "cephfs": {
                                                                      "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                                                      "descriptionCN": "cephFS代表主机上的Ceph fs挂载，该挂载共享pod的生命周期。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource"
                                                                  },
                                                                  "cinder": {
                                                                      "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "Cinder代表的是Kubelet主机上的cinder卷。更多信息：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource"
                                                                  },
                                                                  "claimRef": {
                                                                      "description": "claimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
                                                                      "descriptionCN": " claimRef 是一个双向绑定，它将 PersistentVolume 和 PersistentVolumeClaim 之间的关系连接起来。当 bind 配置完成时，claim 的 VolumeName 应该是 PV 和 PVC 之间的主导地位的明确绑定。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "csi": {
                                                                      "description": "csi represents storage that is handled by an external CSI driver (Beta feature).",
                                                                      "descriptionCN": "“CSI”代表由外部CSI驱动器处理的存储。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource"
                                                                  },
                                                                  "fc": {
                                                                      "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                                                      "descriptionCN": "FC代表一个光纤通道资源，它被附加到Kubelet主机上，并且暴露给Pod。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
                                                                  },
                                                                  "flexVolume": {
                                                                      "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                                                                      "descriptionCN": "弹性体积表示一个通用的体积资源，通过exec-based plugin进行部署/绑定。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource"
                                                                  },
                                                                  "flocker": {
                                                                      "description": "flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
                                                                      "descriptionCN": "Focker是一个Flocker卷附着在Kubelet主机上，然后暴露给Pod用于使用。这取决于Facter服务是否运行。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
                                                                  },
                                                                  "gcePersistentDisk": {
                                                                      "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "GCE PersistentDisk是一个挂在Kubelet主机上的GCE Disk资源，然后暴露给Pod。由管理员配置的。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
                                                                  },
                                                                  "glusterfs": {
                                                                      "description": "glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
                                                                      "descriptionCN": "GlusterFS是一种Glusterfs卷，它被附加到主机并暴露给Pod。管理员配置的。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource"
                                                                  },
                                                                  "hostPath": {
                                                                      "description": "hostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "descriptionCN": "主机路径代表主机上的目录。由开发人员或测试人员预先配置的。这是为单节点开发和测试服务而特别有用的！在任何方式下，主机存储都不支持，并且将不会在多节点集群中工作。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
                                                                  },
                                                                  "iscsi": {
                                                                      "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
                                                                      "descriptionCN": "iscsi代表的是ISCSI磁盘资源，它被主机机器上的kubelet绑定，并暴露给pod。由管理员配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource"
                                                                  },
                                                                  "local": {
                                                                      "description": "local represents directly-attached storage with node affinity",
                                                                      "descriptionCN": "\"local\"代表直接附加存储，节点偏好的方式。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalVolumeSource"
                                                                  },
                                                                  "mountOptions": {
                                                                      "description": "mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options",
                                                                      "descriptionCN": "mountOptions 是存储卷的选项列表，例如 [\"ro\", \"软\"]。 不验证 - 如果其中一个不合法，则挂载将失败。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "nfs": {
                                                                      "description": "nfs represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "descriptionCN": "NFS代表主机上的NFS挂载。由管理员预先配置的。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
                                                                  },
                                                                  "nodeAffinity": {
                                                                      "description": "nodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.",
                                                                      "descriptionCN": "NodeAffinity 指定约束，限制这个卷的可访问节点。此字段影响使用该卷的Pod的调度。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.VolumeNodeAffinity"
                                                                  },
                                                                  "persistentVolumeReclaimPolicy": {
                                                                      "description": "persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
                                                                      "descriptionCN": "持久卷回收策略定义了当从其认领时持久卷发生什么。有效的选项是保留（默认情况下手动创建的持久卷），删除（默认情况下动态部署的持久卷），和再利用（已弃用）。再利用必须由该持久卷基类下面的volume plugin支持。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
                                                                      "type": "string"
                                                                  },
                                                                  "photonPersistentDisk": {
                                                                      "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "光盘：PhotonController持久挂载的Photon持续磁盘，托管在Kubelet主机机器上",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
                                                                  },
                                                                  "portworxVolume": {
                                                                      "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "portworxVolume 是一个 portworx volume 附加并挂载在 kubelet 主机上的东西。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
                                                                  },
                                                                  "quobyte": {
                                                                      "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                                                      "descriptionCN": "Quobyte代表主机上共享pod生命周期的Quobyte山。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
                                                                  },
                                                                  "rbd": {
                                                                      "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
                                                                      "descriptionCN": "RBD代表了一个Kubernetes Pod在主机上的Rados Block Device挂载。更多信息：https://examples.k8s.io/volumes/rbd/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource"
                                                                  },
                                                                  "scaleIO": {
                                                                      "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                                                      "descriptionCN": "ScaleIO代表了一个安装在Kubernetes节点上的 ScaleIO持久卷。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource"
                                                                  },
                                                                  "storageClassName": {
                                                                      "description": "storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.",
                                                                      "descriptionCN": "存储类名称是这个持久卷所属的 StorageClass 的名称。空值表示这个卷不属于任何 StorageClass。",
                                                                      "type": "string"
                                                                  },
                                                                  "storageos": {
                                                                      "description": "storageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md",
                                                                      "descriptionCN": "存储OS（StorageOS Volume）代表与kubelet主机的共享存储，被挂载到Pod中。更多信息：https://examples.k8s.io/volumes/storageos/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource"
                                                                  },
                                                                  "volumeAttributesClassName": {
                                                                      "description": "Name of VolumeAttributesClass to which this persistent volume belongs. Empty value is not allowed. When this field is not set, it indicates that this volume does not belong to any VolumeAttributesClass. This field is mutable and can be changed by the CSI driver after a volume has been updated successfully to a new class. For an unbound PersistentVolume, the volumeAttributesClassName will be matched with unbound PersistentVolumeClaims during the binding process. This is an alpha field and requires enabling VolumeAttributesClass feature.",
                                                                      "descriptionCN": "卷标属性类归属该持久存储的属性。空值不允许。当此字段未设置时，表明此存储不隶属于任何卷标属性类。此字段可变，成功更新到新的类后，可根据CSI驱动器对其进行更改。对于未绑定的持久存储，卷标属性类名在绑定过程中将与未绑定的 PersistentVolumeClaims 对应。这是一个 alpha 字段，需要启用卷标属性类功能。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeMode": {
                                                                      "description": "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.",
                                                                      "descriptionCN": "卷管理器定义了是否希望使用格式化的文件系统还是保持在块状态。当不在规范中包含时，文件系统的值就被暗示了。",
                                                                      "type": "string"
                                                                  },
                                                                  "vsphereVolume": {
                                                                      "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "VSphere Volume表示挂载在Kubelet主机上的VSphere卷",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PersistentVolumeStatus": {
                                                              "description": "PersistentVolumeStatus is the current status of a persistent volume.",
                                                              "descriptionCN": "持久卷标是当前持久卷的当前状态。",
                                                              "properties": {
                                                                  "lastPhaseTransitionTime": {
                                                                      "description": "lastPhaseTransitionTime is the time the phase transitioned from one to another and automatically resets to current time everytime a volume phase transitions. This is an alpha field and requires enabling PersistentVolumeLastPhaseTransitionTime feature.",
                                                                      "descriptionCN": "最后阶段转换时间是指从一种状态到另一种状态的过渡过程中所经历的时间，并在每次将卷积阶段转换为当前时间时自动重置。这是一个偏振场，需要启用持久性卷积最后一个阶段转换时间功能。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message is a human-readable message indicating details about why the volume is in this state.",
                                                                      "descriptionCN": "消息是一个人类可读的指示说明有关为什么卷处于这种状态的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "phase": {
                                                                      "description": "phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase",
                                                                      "descriptionCN": "阶段表示一个卷是否可用，绑定到索赔或由索赔释放。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.",
                                                                      "descriptionCN": "原因是一个简短的CamelCase字符串，用于描述任何失败，并且被设计用来在CLI中进行机器解析和整洁显示。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
                                                              "description": "Represents a Photon Controller persistent disk resource.",
                                                              "descriptionCN": "代表了一个持续的光子控制器磁盘资源。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是需要挂载的文件系统的类型。必须是主机操作系统支持的文件系统类型。例如，\"ext4\", \"xfs\", \"ntfs\"等。如果没有明确指定，则自动推断为\"ext4\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "pdID": {
                                                                      "description": "pdID is the ID that identifies Photon Controller persistent disk",
                                                                      "descriptionCN": "pdID 是指用于识别 Phantomas Controller 持久磁盘的 ID。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Pod": {
                                                              "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.",
                                                              "descriptionCN": "Pod是一种可以运行在主机上的容器集合。这种资源是由客户端创建并分配到主机的。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是表示这个表示对象的版本的表单化结构。服务器应该将识别的 schema 转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示该对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时提交的端点推测出这个值。无法被更新。在CamelCase格式中。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "《期望的Pod行为规范》\n\n在Kubernetes中，Pod是资源容器化的实体。Pod的行为规范主要包括定义Pod的核心功能和运行状态，并确保Pod正常工作。\n\n1. 定义Pod的核心功能：Pod的主要功能是承载容器以及为其分配资源（如CPU、内存等）。因此，需要明确Pod的核心功能，并进行相应的设计和实现。\n\n2. 确保Pod正常运行：Pod的状态由一系列指标来衡量，包括但不限于CPU使用率、内存使用量、磁盘空间等。因此，需要建立一套完善的监控系统，对Pod的各种运行状态进行实时监测，并及时发现并处理问题。\n\n3. 实现Pod的部署和管理：Pod可以通过kubectl命令或可视化工具进行部署和管理。其中，kubectl命令可以方便地管理和调度Pod的生命周期，而可视化工具则可以帮助用户直观地了解Pod的运行情况。\n\n详细信息可参考https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Most recently observed status of the pod. This data may not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "最近观察的Pod状态。该数据可能不准确。由系统填充。读取模式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodAffinity": {
                                                              "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
                                                              "descriptionCN": "\"Pod affinity\" 是一组跨 Pod 相关性调度规则。",
                                                              "properties": {
                                                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                      "descriptionCN": "调度器倾向于将Pods分配到节点，这些节点满足此字段指定的affinity表达式。但它可能选择一个违反其中任何一个或多个表达式的节点。最优先的选择是具有最大权重的那个，即对于每个满足所有调度需求（资源请求、要求在Scheduling affinity表达式中等）的节点，通过迭代该字段中的元素并将其“权重”加到总和中，如果节点上有匹配的podAffinityTerm的Pod；具有最大权重的节点是最优先的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
                                                                      }
                                                                  },
                                                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                      "descriptionCN": "如果该字段指定的偏好需求在计划时间未得到满足，该Pod将不会被调度到节点上。如果这个字段在Pod执行过程中的一些时刻（例如由于pod标签更新）不再满足偏好要求，系统可能会或可能不尝试最终从其节点中移除Pod。当有多个元素时，每个PodAffinityTerm对应的节点列表进行交集，即所有术语必须满足。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodAffinityTerm": {
                                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                              "descriptionCN": "为该Pod定义一组Pod（即与给定命名空间中的标签Selector相对应的Pod）其应该与其相关联或不相关联。定义co-located的含义是在节点值中匹配<topologyKey>的标签的任何节点上运行的Pod上的运行环境，其中co-located是指在节点值中匹配<topologyKey>的标签的任何节点上运行的Pod上的运行环境",
                                                              "properties": {
                                                                  "labelSelector": {
                                                                      "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                      "descriptionCN": "在一组资源中进行标签查询，例如Pods。如果它是null，则此PodAffinityTerm匹配与没有Pods。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "descriptionCN": "MatchLabelKeys 是一组 pod 标签键，用于选择哪些Pod将被考虑。这些键用于从接收到的pod标签中查找值，这些key-value标签通过 `LabelSelector` 的 key in (value) 方法合并为现有Pod的组（anti）Affinity中的一个键。如果在接收到的pod标签中不存在该键，则忽略。默认值为空。在同一 MatchLabelKeys 和 LabelSelector 中，同一键不允许存在。此外，当LabelSelector不设置时，不能设置 MatchLabelKeys。这是一个 alpha 特性，并需要启用 MatchLabelKeysInPodAffinity 功能关件。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "mismatchLabelKeys": {
                                                                      "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "descriptionCN": "映射标签键是一个包含一系列Pod标签键的集合，用于选择哪些Pod将被考虑。这些键用于从接收到的Pod标签中查找值，其中key-value标签作为`key notin (value)`来选择那些当前Pod中的Pod(反) affinity。如果没有在接收到的Pod标签中找到该键，则忽略它。默认值为空。同样地，映射标签键和LabelSelector不能同时设置。此外，在LabelSelector未设置时也无法设置映射标签键。这是一个alpha字段，需要启用MatchLabelKeysInPodAffinity功能开关。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                      "descriptionCN": "标签查询对于所选术语的命名空间集。该术语应用于这个字段和列出在namespaces字段中的那些命名空间的选择中所选的所有命名空间。空筛选器（{}）匹配所有的命名空间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "namespaces": {
                                                                      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                      "descriptionCN": "命名空间指定了静态的命名空间列表，该列表中的术语应用于。术语应用于此字段中列出的命名空间和namespaceSelector所选名称的所有实体之间。null或空命名空间列表和null namespaceSelector意味着“这个Pod的命名空间”。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "topologyKey": {
                                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                      "descriptionCN": "这个Pod应该与其匹配的标签Selector所属命名空间中的Pod一起（配对）或分开（分离）。配对定义为运行在一个节点上，该节点具有 topologyKey 的值与在选择的Pod中任何节点运行的所有节点的 topologyKey 相匹配。空的 topologyKey 不允许。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodAntiAffinity": {
                                                              "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
                                                              "descriptionCN": "\"Pod anti affinity\" 是一组跨 Pod 非吸引力调度规则。",
                                                              "properties": {
                                                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                      "descriptionCN": "调度器会选择满足这个字段指定的反向亲和性表达式的一个或多个节点，但可能会选择一个违反其中一个或多个表达式的节点。权重最大的节点是所有要求的调度需求（资源请求、要求在执行时的反向亲和性表达式等）中计算和加上“权重”到总和中的节点。权重最大的节点就是最优先的节点。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
                                                                      }
                                                                  },
                                                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                      "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                      "descriptionCN": "如果该字段指定的反Affinity要求在调度时间没有满足，该Pod将不会被调度到节点上。 如果该字段在Pod执行过程中（例如由于Pod标签更新）在某个时刻停止满足，则系统可能或可能不尝试最终从其节点中移除Pod。 当有多个元素时，与每个PodAffinityTerm对应的节点列表进行交集，即所有项都必须满足。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodCondition": {
                                                              "description": "PodCondition contains details for the current condition of this pod.",
                                                              "descriptionCN": "PodCondition包含这个pod当前的状态的详细信息。",
                                                              "properties": {
                                                                  "lastProbeTime": {
                                                                      "description": "Last time we probed the condition.",
                                                                      "descriptionCN": "上次我们调查了这个问题。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次的状态发生了转变。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "Human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "可供人类阅读的信息表示关于最近的过渡。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "这个情况的最后过渡的唯一原因就是 camelCase。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "descriptionCN": "状态是状态的状况。可以为真、假或未知。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "descriptionCN": "类型是条件的类型。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodDNSConfig": {
                                                              "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
                                                              "descriptionCN": "PodDNSConfig定义了一个 Pod 中的 DNS 参数，以及从 DNSPolicy 集成生成的 DNS 参数。",
                                                              "properties": {
                                                                  "nameservers": {
                                                                      "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
                                                                      "descriptionCN": "DNS域名服务器的IP地址列表。此信息将附加到由DNSPolicy生成的基础名称服务器中。重复的名称服务器将被删除。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "options": {
                                                                      "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
                                                                      "descriptionCN": "DNS 解决器选项列表。这将与 DNSPolicy 中的基线选项合并在一起。重复项将被删除。在 Options 字段中给出的解析选项将超过出现在 Base DNSPolicy 中的选项。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
                                                                      }
                                                                  },
                                                                  "searches": {
                                                                      "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
                                                                      "descriptionCN": "主机名查询的DNS搜索域名列表。这将附加到从DNSPolicy生成的基础搜索路径中。重复的搜索路径将被删除。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodDNSConfigOption": {
                                                              "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                                              "descriptionCN": "PodDNSConfigOption定义了Pod中的DNS解析器选项。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Required.",
                                                                      "descriptionCN": "您需要什么？",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodIP": {
                                                              "description": "PodIP represents a single IP address allocated to the pod.",
                                                              "descriptionCN": "PodIP代表一个分配给Pod的单个IP地址。",
                                                              "properties": {
                                                                  "ip": {
                                                                      "description": "IP is the IP address assigned to the pod",
                                                                      "descriptionCN": "IP是分配给pod的IP地址",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodList": {
                                                              "description": "PodList is a list of Pods.",
                                                              "descriptionCN": "PodList是一个Pod列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是一个定义这个对象表示形式的版本化规范。服务器应该将识别的规范转换为最新的内部值，且可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                                                                      "descriptionCN": "以下是一个列表，包含 Kubernetes 的 Pod 信息。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示该对象所代表的REST资源的字符串值。服务器可以从客户端提交请求时推测此属性。不能更新。以CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodOS": {
                                                              "description": "PodOS defines the OS parameters of a pod.",
                                                              "descriptionCN": "PodOS为 Pod 定义了 Pod 参数。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name is the name of the operating system. The currently supported values are linux and windows. Additional value may be defined in future and can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration Clients should expect to handle additional values and treat unrecognized values in this field as os: null",
                                                                      "descriptionCN": "操作系统名称。目前支持的值为Linux和Windows。未来可以定义额外的值，并且可以选择：https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration 客户端应该期望处理额外的值，并且在这一字段中处理未识别的值视为os: null",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodReadinessGate": {
                                                              "description": "PodReadinessGate contains the reference to a pod condition",
                                                              "descriptionCN": "PodReadinessGate包含一个pod条件的参考。",
                                                              "properties": {
                                                                  "conditionType": {
                                                                      "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
                                                                      "descriptionCN": "条件类型是指Pod的条件列表中匹配类型的条件。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodResourceClaim": {
                                                              "description": "PodResourceClaim references exactly one ResourceClaim through a ClaimSource. It adds a name to it that uniquely identifies the ResourceClaim inside the Pod. Containers that need access to the ResourceClaim reference it with this name.",
                                                              "descriptionCN": "PodResourceClaim关联的资源claim只有通过 ClaimSource 才唯一。它为该资源claim添加一个独特的名字，以标识 Pod 中的资源claim。需要访问该资源claim引用该名称的容器会使用这个名字。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.",
                                                                      "descriptionCN": "在Pod中，资源标记（即DNS_LABEL）具有唯一标识这个资源请求的功能。",
                                                                      "type": "string"
                                                                  },
                                                                  "source": {
                                                                      "description": "Source describes where to find the ResourceClaim.",
                                                                      "descriptionCN": "资源管理器的位置在哪里可以找到资源请求？",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ClaimSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodResourceClaimStatus": {
                                                              "description": "PodResourceClaimStatus is stored in the PodStatus for each PodResourceClaim which references a ResourceClaimTemplate. It stores the generated name for the corresponding ResourceClaim.",
                                                              "descriptionCN": "PodResourceClaimStatus被存储在每个PodResourceClaim中，这个PodResourceClaim引用一个ResourceClaimTemplate。它存储对应于该ResourceClaim的生成名称。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name uniquely identifies this resource claim inside the pod. This must match the name of an entry in pod.spec.resourceClaims, which implies that the string must be a DNS_LABEL.",
                                                                      "descriptionCN": "资源名在Pod中的唯一标识。这必须与Pod.spec.resourceClaims中的名称匹配，这意味着字符串必须是DNS_LABEL。",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceClaimName": {
                                                                      "description": "ResourceClaimName is the name of the ResourceClaim that was generated for the Pod in the namespace of the Pod. It this is unset, then generating a ResourceClaim was not necessary. The pod.spec.resourceClaims entry can be ignored in this case.",
                                                                      "descriptionCN": "\"ResourceClaimName\" 是为 Pod 的 namespace 中的 Pod 生成的 ResourceClaim 的名称。如果它未设置，那么生成 ResourceClaim 就没有必要了。在这种情况下，pod.spec.resourceClaims 视图可以被忽略。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodSchedulingGate": {
                                                              "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
                                                              "descriptionCN": "PodScheduling Gate 是用于保护 Pod 的调度的。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of the scheduling gate. Each scheduling gate must have a unique name field.",
                                                                      "descriptionCN": "调度门名。每扇调度门都必须有一个唯一的名称字段。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodSecurityContext": {
                                                              "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
                                                              "descriptionCN": "PodSecurityContext 保存了 pod 级别的安全属性和通用容器设置。有些字段在容器的安全上下文中也存在。容器的安全上下文字段的值优于 Pod 安全上下文字段的值。",
                                                              "properties": {
                                                                  "fsGroup": {
                                                                      "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "一种附加的特殊组，只适用于 Pod中的所有容器。一些类型的空间允许Kubelet改变该空间的所有者为Pod。\n\n1. 所有拥有者的 GID 将是FSGroup 2. setgid bit 设置（在volume中创建的新文件将由FSGroup拥有）。 3. 允许权限位或 rwx\n\n如果没有设置，则Kubelet不会修改任何卷的所有者和权限。请注意，此字段不能在spec.os.name为Windows时设置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "fsGroupChangePolicy": {
                                                                      "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "fsGroupChangePolicy定义了在Pod暴露前更改volume的所有权和权限的行为。此字段只适用于支持fsGroup为基础的所有权和权限的卷类型。它将对如secret, configmaps和emptydir等非持久性卷类型的VolumeType无影响。有效值为\"OnRootMismatch\"和\"Always\"。如果没有指定，则使用\"Always\"。需要注意的是，当spec.os.name是Windows时，这个字段不能被设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "runAsGroup": {
                                                                      "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "这个GID是容器进程的入口点。如果未设置，则使用运行时默认值。也可以在SecurityContext中设置。如果同时设置在SecurityContext和PodSecurityContext中，SecurityContext中的值将优先于PodSecurityContext中的值。需要注意的是，当spec.os.name为Windows时，这个字段不能被设置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "runAsNonRoot": {
                                                                      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                                      "descriptionCN": "此表明容器必须以非root用户运行。如果为真，则Kubelet将在运行时验证图像，以确保它不会以uid 0（root）运行，并在开始容器时失败。如果未设置或为假，则将不进行此类验证。也可能在SecurityContext中设置。如果同时在SecurityContext和PodSecurityContext中设置，安全上下文指定的值应优先于PodSecurityContext中的值。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "runAsUser": {
                                                                      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "容器进程的入口点运行者UID。默认为用户在图像元数据中指定的值，如果未指定则设置为SecurityContext中的值。可以同时设置在SecurityContext和PodSecurityContext中。如果设置在两者中，安全上下文指定的值将优先于PodSecurityContext中的值。当spec.os.name为Windows时，此字段不能被设置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "seLinuxOptions": {
                                                                      "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "所有的容器都应用SELinux上下文。如果没有指定，容器运行时会为每个容器分配一个随机的SELinux上下文。也可以在SecurityContext中设置此字段。如果在SecurityContext和PodSecurityContext中设置此字段，则SecurityContext中的值将优先于PodSecurityContext中的值。需要注意的是，当操作系统名称为\"Windows\"时，这个字段不能被设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
                                                                  },
                                                                  "seccompProfile": {
                                                                      "description": "The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "这个Pod内的容器使用的seccomp选项。请注意，当spec.os.name为Windows时，此字段不能被设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
                                                                  },
                                                                  "supplementalGroups": {
                                                                      "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "容器运行的第一个进程的列表，以及每个容器的主GID、fsGroup（如果指定）和定义在容器镜像中对于container进程uid的组别。如果没有指定，则将不会在任何容器中添加额外的组。注意，定义在容器镜像中对于container进程uid的组别仍然有效，即使它们没有被包含在这个列表中。此字段不能在以windows为os.name时设置。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "sysctls": {
                                                                      "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "系统级（System）配置项包含用于pod的命名空间级别的sysctls。对于不支持的sysctls（由容器运行时实现），可能无法启动Pod。需要注意的是，当spec.os.name为windows时，这个字段不能设置。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
                                                                      }
                                                                  },
                                                                  "windowsOptions": {
                                                                      "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
                                                                      "descriptionCN": "所有容器的Windows特定设置。如果没有指定，容器的安全上下文中的选项将被使用。如果设置在安全上下文和PodSecurityContext中，则安全上下文中的值应优先于PodSecurityContext中的值。请注意，此字段不能在命名为linux时设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodSpec": {
                                                              "description": "PodSpec is a description of a pod.",
                                                              "descriptionCN": "PodSpec 是 pod 的描述。",
                                                              "properties": {
                                                                  "activeDeadlineSeconds": {
                                                                      "description": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.",
                                                                      "descriptionCN": "如果不使用， Pod 可能在开始时间之前在节点上保持活动的秒数。值必须是一个正整数。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "affinity": {
                                                                      "description": "If specified, the pod's scheduling constraints",
                                                                      "descriptionCN": "如果指明，该Pod的调度限制",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
                                                                  },
                                                                  "automountServiceAccountToken": {
                                                                      "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
                                                                      "descriptionCN": "自动挂载ServiceAccountToken表明是否应该自动挂载服务账户令牌。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "containers": {
                                                                      "description": "List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
                                                                      "descriptionCN": "该Pod内的容器列表。当前无法添加或移除容器。必须至少有一个容器在Pod中。无法更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Container"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "dnsConfig": {
                                                                      "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
                                                                      "descriptionCN": "指定Pod的DNS参数。此处指定的参数将根据DNSPolicy进行合并生成DNS配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
                                                                  },
                                                                  "dnsPolicy": {
                                                                      "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
                                                                      "descriptionCN": "设置Pod的DNS政策。默认为\"ClusterFirst\"。有效值包括'ClusterFirstWithHostNet'、'ClusterFirst'、'Default'或'None'。在DNSConfig中提供的DNS参数将与选择的DNSPolicy进行合并。为了同时设置主机网络和DNS选项，您需要明确地指定DNSPolicy为\"ClusterFirstWithHostNet\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "enableServiceLinks": {
                                                                      "description": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.",
                                                                      "descriptionCN": "启用ServiceLinks指示是否应该将关于服务的信息注入到Pod的环境变量中，与Docker链接的语法匹配。可选：默认为true。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "ephemeralContainers": {
                                                                      "description": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.",
                                                                      "descriptionCN": "在该pod中运行的临时容器列表。临时容器可能被运行在已存在的Pod中，以执行用户主动操作（如调试）。创建Pod时无法指定此列表，更新Podspec也不能修改此列表。要将临时容器添加到已存在的Pod中，请使用Pod的 ephemeralcontainers子资源。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralContainer"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "hostAliases": {
                                                                      "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.",
                                                                      "descriptionCN": "主机别名是一种可选的主机和IP列表，如果指定的话，将在Pod的主机文件中注入。这只适用于非主机网络Pod。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "hostIPC": {
                                                                      "description": "Use the host's ipc namespace. Optional: Default to false.",
                                                                      "descriptionCN": "使用主机的IPC命名空间。可选：默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "hostNetwork": {
                                                                      "description": "Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
                                                                      "descriptionCN": "主机网络请求此 Pod。使用主机的网络命名空间。如果这个选项被设置，将使用的端口必须被指定。默认为 false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "hostPID": {
                                                                      "description": "Use the host's pid namespace. Optional: Default to false.",
                                                                      "descriptionCN": "使用主机的pid命名空间。可选：默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "hostUsers": {
                                                                      "description": "Use the host's user namespace. Optional: Default to true. If set to true or not present, the pod will be run in the host user namespace, useful for when the pod needs a feature only available to the host user namespace, such as loading a kernel module with CAP_SYS_MODULE. When set to false, a new userns is created for the pod. Setting false is useful for mitigating container breakout vulnerabilities even allowing users to run their containers as root without actually having root privileges on the host. This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.",
                                                                      "descriptionCN": "使用容器的用户命名空间。可选：默认为true。如果设置为true或不存在，将运行在主机用户命名空间中，当pod需要仅限于主机用户命名空间中的特性时（如加载内核模块 CAP_SYS_MODULE），如果设置为false，将创建一个新的用户命名空间。设置为false有助于即使允许用户以root权限运行他们的容器，也能有效防止容器爆炸漏洞，即使允许用户以root权限运行他们的容器。这个字段处于alpha级别，并只由启用UserNamespacesSupport功能的服务器才能支持。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "hostname": {
                                                                      "description": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
                                                                      "descriptionCN": "如果没有指定，Pod的主机名将被设置为系统定义的值。",
                                                                      "type": "string"
                                                                  },
                                                                  "imagePullSecrets": {
                                                                      "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
                                                                      "descriptionCN": "ImagePullSecrets 是一个可选的用于在同一命名空间中使用任何使用的图像引用列表。如果指定，这些秘密将被传递给单个拉取器实现，以便它们使用。更多信息：https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "initContainers": {
                                                                      "description": "List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                                                                      "descriptionCN": "Pod 初始化容器的列表。初始化容器在启动容器之前顺序执行。如果任何初始化容器失败，认为该 Pod 已经失败并根据其重启策略处理。初始化容器或正常容器的名称必须与其他容器唯一。初始化容器可能不包含生命周期操作、 readiness 检测、 liveness 检测或 startup 检测。初始化容器的需求/限制是在调度时考虑资源类型的最高请求/限制，并使用该值的最大值或所有正常容器的总和进行累加。对于初始化容器，其需求/限制也被类似的方式应用于。目前无法添加或删除。不能更新。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Container"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "nodeName": {
                                                                      "description": "NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
                                                                      "descriptionCN": "NodeName 是一个请求将此Pod调度到特定的节点。如果它是非空的，调度器只是将其调度到那个节点，假设它符合资源需求。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeSelector": {
                                                                      "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                      "descriptionCN": "NodeSelector 是一个必须为 Pod 确保在节点上运行的 selector。Pod 要被调度到某个节点上，该节点的标签需要匹配 pod 的标签。更多信息：https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                      "type": "object"
                                                                  },
                                                                  "os": {
                                                                      "description": "Specifies the OS of the containers in the pod. Some pod and container fields are restricted if this is set.\n\nIf the OS field is set to linux, the following fields must be unset: -securityContext.windowsOptions\n\nIf the OS field is set to windows, following fields must be unset: - spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup",
                                                                      "descriptionCN": "这个配置决定了Pod中的容器OS。如果设置为linux，以下字段必须被设置：-securityContext.windowsOptions 如果设置为windows，以下字段必须被设置：- spec.hostPID - spec.hostIPC - spec.hostUsers - spec.securityContext.seLinuxOptions - spec.securityContext.seccompProfile - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy - spec.securityContext.sysctls - spec.shareProcessNamespace - spec.securityContext.runAsUser - spec.securityContext.runAsGroup - spec.securityContext.supplementalGroups - spec.containers[*].securityContext.seLinuxOptions - spec.containers[*].securityContext.seccompProfile - spec.containers[*].securityContext.capabilities - spec.containers[*].securityContext.readOnlyRootFilesystem - spec.containers[*].securityContext.privileged - spec.containers[*].securityContext.allowPrivilegeEscalation - spec.containers[*].securityContext.procMount - spec.containers[*].securityContext.runAsUser - spec.containers[*].securityContext.runAsGroup",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodOS"
                                                                  },
                                                                  "overhead": {
                                                                      "description": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md",
                                                                      "descriptionCN": "上行表示为运行给定RuntimeClass的Pod所需的资源 overhead。此字段在 Admission controller 的引入时自动填充。如果 RuntimeClass admission controller 是启用的，那么 pod 创建请求中的 overhead 不应被设置。RuntimeClass admission controller 会拒绝 pod create 请求，其中 overhead 已经设置。如果 RuntimeClass 在 PodSpec 中被配置和选择，那么 overhead 将设置到对应的 RuntimeClass 中定义的值，否则它将保持未设置且被视为零。更多信息：https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md",
                                                                      "type": "object"
                                                                  },
                                                                  "preemptionPolicy": {
                                                                      "description": "PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
                                                                      "descriptionCN": "预优先策略是为降低优先级的Pod预先调度。当未设置时，默认为降优先级。",
                                                                      "type": "string"
                                                                  },
                                                                  "priority": {
                                                                      "description": "The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
                                                                      "descriptionCN": "优先级值。各种系统组件使用这个字段来找到Pod的优先级。当Priority Admission Controller启用时，它阻止用户设置这个字段。 admission controller会将PriorityClassName字段填充到该字段中。值越高，优先级越高。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "priorityClassName": {
                                                                      "description": "If specified, indicates the pod's priority. \"system-node-critical\" and \"system-cluster-critical\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
                                                                      "descriptionCN": "如果指定，表示该Pod的优先级。\"system-node-critical\"和\"system-cluster-critical\"是两个特殊关键字，其中前者是最高的优先级。其他名称必须通过创建一个PriorityClass对象来定义。如果没有指定，则Pod的优先级将默认或为零，如果有默认，则默认优先级为零。",
                                                                      "type": "string"
                                                                  },
                                                                  "readinessGates": {
                                                                      "description": "If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \"True\" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates",
                                                                      "descriptionCN": "如果指定，所有准备关会检查Pod的准备状态。当Pod的所有容器都准备好，并且根据 readiness gates 中指定的状态为\"True\"时，Pod是准备就绪的更多信息：https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
                                                                      }
                                                                  },
                                                                  "resourceClaims": {
                                                                      "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start. The resources will be made available to those containers which consume them by name.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable.",
                                                                      "descriptionCN": "资源 claims 定义了Pod允许开始前需要分配和保留的资源 claim。这些资源将通过名称被消耗容器所使用。\n\n这是一个 alpha 属性，需要开启 DynamicResourceAllocation 功能门来启用。\n\n这个属性是不可变的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaim"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge,retainKeys"
                                                                  },
                                                                  "restartPolicy": {
                                                                      "description": "Restart policy for all containers within the pod. One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
                                                                      "descriptionCN": "重启所有Pod内的容器。可以设置为“Always”，“OnFailure”或“Never”。在某些情况下，仅允许选择其中一部分值。默认设置为始终。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
                                                                      "type": "string"
                                                                  },
                                                                  "runtimeClassName": {
                                                                      "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
                                                                      "descriptionCN": "运行类名称指的是在node.k8s.io组中的RuntimeClass对象，它应该用于运行这个Pod。如果没有找到匹配的运行类资源，Pod将不会运行。如果未设置或为空，\"legacy\"运行类将被使用，这是一个隐式类，其定义为空，并使用默认的运行处理程序。更多信息：https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
                                                                      "type": "string"
                                                                  },
                                                                  "schedulerName": {
                                                                      "description": "If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.",
                                                                      "descriptionCN": "如果指定，该Pod将由指定调度器进行调度。如果没有指定，该Pod将默认由默认调度器进行调度。",
                                                                      "type": "string"
                                                                  },
                                                                  "schedulingGates": {
                                                                      "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod. If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the scheduler will not attempt to schedule the pod.\n\nSchedulingGates can only be set at pod creation time, and be removed only afterwards.\n\nThis is a beta feature enabled by the PodSchedulingReadiness feature gate.",
                                                                      "descriptionCN": "调度门是一个模糊的值列表，如果指定将阻止调度Pod。如果调度门不为空，Pod将在调度门的状态中保持待机状态，并且调度器不会尝试调度Pod。\n\n调度门只能在Pod创建时间设置，而且只能在之后删除。\n\n这是 PodSchedulingReadiness 功能门的 beta 特性启用的功能。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodSchedulingGate"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "securityContext": {
                                                                      "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
                                                                      "descriptionCN": "安全上下文包含了pod级别的安全属性和常见的容器设置。可选：默认为空。见类型描述以每个字段的默认值为示例。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
                                                                  },
                                                                  "serviceAccount": {
                                                                      "description": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.",
                                                                      "descriptionCN": "已过时的ServiceAccount 是服务账号别名。已弃用：使用serviceAccountName代替。",
                                                                      "type": "string"
                                                                  },
                                                                  "serviceAccountName": {
                                                                      "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                                                      "descriptionCN": "服务账户名称是用于运行此pod的ServiceAccount的名称。更多信息：https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                                                      "type": "string"
                                                                  },
                                                                  "setHostnameAsFQDN": {
                                                                      "description": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.",
                                                                      "descriptionCN": "如果真的，pod的主机名会被配置为pod的FQDN，而不是叶子名称（默认）。在Linux容器中，这意味着将FQDN设置为kernel（utsname结构体中的nodename字段）的主机名字段。在Windows容器中，这意味着将hostname设置为HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters的值为FQDN。如果pod没有FQDN，这不会有任何影响。默认设置为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "shareProcessNamespace": {
                                                                      "description": "Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.",
                                                                      "descriptionCN": "在容器内的所有Pod中的共享进程命名空间。当此设置时，容器将能够查看和信号来自其他容器在同一Pod中的进程，并每个容器的第一个进程不会被分配PID 1。HostPID 和 ShareProcessNamespace 都不能都设置。可选：默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "subdomain": {
                                                                      "description": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the pod will not have a domainname at all.",
                                                                      "descriptionCN": "如果指定，全名的Pod主机名将是 \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". 如果未指定，则该 Pod 将没有域名。",
                                                                      "type": "string"
                                                                  },
                                                                  "terminationGracePeriodSeconds": {
                                                                      "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                                                                      "descriptionCN": "若Pod需要优雅地终止，则应有至少秒的额外时间。删除请求可能减少该值。值必须为非负整数。零表示立即通过kill信号停止（无机会关闭）。如果此值为nil，将使用默认的超时期代替。超时期是运行在Pod中的进程收到终止信号并使用kill信号强制停止的时间。设置这个值大于预期的清理时间。默认为30秒。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "tolerations": {
                                                                      "description": "If specified, the pod's tolerations.",
                                                                      "descriptionCN": "如果指定，pod的tolerations。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
                                                                      }
                                                                  },
                                                                  "topologySpreadConstraints": {
                                                                      "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.",
                                                                      "descriptionCN": "拓扑扩散约束描述了小组的Pod应该如何在拓扑域中分布。调度器将以遵循这些约束的方式安排Pods。所有拓扑扩散约束都是AND的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "topologyKey",
                                                                          "whenUnsatisfiable"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "volumes": {
                                                                      "description": "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes",
                                                                      "descriptionCN": "\"List of volumes that can be mounted by containers belonging to the pod.\"",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge,retainKeys"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodStatus": {
                                                              "description": "PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.",
                                                              "descriptionCN": "PodStatus表示关于Pod状态的信息。状态可能滞后于系统的真实状态，特别是如果主机托管Pod的节点无法与控制平面通信时。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "descriptionCN": "当前Pod的状态。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "containerStatuses": {
                                                                      "description": "The list has one entry per container in the manifest. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                                                                      "descriptionCN": "manifest文件中的每个容器都有一个名为`entrypoint`的字段，具体如下：\n\n```\nentrypoint: \"your_container_entrypoint\"\n```\n\n更多信息，请参阅：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status\n\n这表示该容器将在运行时启动，并使用给定的`entrypoint`。\"your_container_entrypoint\"需要替换为实际的容器入口点。\n\n例如，如果你有一个名为`my-app`的应用，它的容器将被设置为在容器启动时运行以下命令：\n\n```bash\nentrypoint: [\"python\", \"-m SimpleHTTPServer 8080\"]\n```\n\n这意味着当你的应用程序启动时，它将运行Python脚本并监听8080端口。\n\n请注意，如果你正在运行的是Kubernetes集群的守护进程（如NodeController或Controller），那么这个字段可能并不适用，因为这些守护进程不需要启动任何容器。相反，它们应该运行在它们所在的主机上，并且可以通过运行以下命令来启动和停止：\n\n```bash\nkubectl run my-app --image=your_image_name --restart=Never\n```\n\n或者\n\n```bash\nkubectl delete pod my-app\n```",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
                                                                      }
                                                                  },
                                                                  "ephemeralContainerStatuses": {
                                                                      "description": "Status for any ephemeral containers that have run in this pod.",
                                                                      "descriptionCN": "在这个Pod中运行的任何临时容器的状态。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
                                                                      }
                                                                  },
                                                                  "hostIP": {
                                                                      "description": "hostIP holds the IP address of the host to which the pod is assigned. Empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns mean that HostIP will not be updated even if there is a node is assigned to pod",
                                                                      "descriptionCN": "主机IP是用于为Pod分配的主机地址。如果Pod尚未启动，则为空。Pod可以被分配给具有kubelet问题的节点，这会导致HostIP即使有节点已分配给Pod也不会更新。",
                                                                      "type": "string"
                                                                  },
                                                                  "hostIPs": {
                                                                      "description": "hostIPs holds the IP addresses allocated to the host. If this field is specified, the first entry must match the hostIP field. This list is empty if the pod has not started yet. A pod can be assigned to a node that has a problem in kubelet which in turns means that HostIPs will not be updated even if there is a node is assigned to this pod.",
                                                                      "descriptionCN": "主机IPs包含了分配给主机的IP地址。如果这个字段被指定，那么第一个条目必须与主机IP字段匹配。如果没有在 pod 开始时分配过这个 Pod，则这个列表为空。Pod 可以分配到节点上，该节点kubelet出现故障，这意味着即使 node 被分配给这个 Pod，HostIPs 也不会更新。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.HostIP"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "initContainerStatuses": {
                                                                      "description": "The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                                                                      "descriptionCN": "清单中每个init容器只有一个初始化进程。最近成功启动的init容器将准备为真，最近开始的容器将设置启动时间。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
                                                                      }
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about why the pod is in this condition.",
                                                                      "descriptionCN": "人类可读的指示表明该pod处于这种状况的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "nominatedNodeName": {
                                                                      "description": "nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.",
                                                                      "descriptionCN": "在预调入其他节点的Pod被创建之前，提名节点名仅设置一次。但由于预调入受害者将获得优雅终止期，因此该字段无法立即调度。在此字段上，它并不能保证该Pod将在该节点上运行。调度器可能会决定将Pod放在其他可用节点的地方。调度器还可以决定将此节点上的资源分配给一个更高的优先级创建后的Pod。因此，在该Pod被计划时，该字段可能与PodSpec.nodeName不同。",
                                                                      "type": "string"
                                                                  },
                                                                  "phase": {
                                                                      "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:\n\nPending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.\n\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase",
                                                                      "descriptionCN": "Pod阶段是一个简单且高层概述，说明 Pod 在生命周期中的位置。条件数组、原因和消息字段以及单个容器状态数组包含了关于 Pod 状态的更多详细信息。有五个可能的阶段值：\n\n等待：Pod 已经被 Kubernetes 系统接受，但至少一个容器的图像尚未创建。这包括在计划时以及在网络下载图像所需的时间。\n\n运行：Pod 已绑定到节点，并且所有容器都已经创建。至少有一个容器仍然运行，或正在启动或重启。\n\n成功：Pod 中的所有容器都已成功终止，不会重新启动。\n\n失败：Pod 中的所有容器都已终止，至少有一个容器已经终止为失败。\n\n容器要么以非零状态退出，要么是由系统自动终止。\n\n未获得有关 pod 状态的原因的更多信息。通常是因为与 pod 主机通信过程中出现错误。",
                                                                      "type": "string"
                                                                  },
                                                                  "podIP": {
                                                                      "description": "podIP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.",
                                                                      "descriptionCN": "为Pod分配的Pod地址。在集群内至少可路由。如果尚未分配，为空。",
                                                                      "type": "string"
                                                                  },
                                                                  "podIPs": {
                                                                      "description": "podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.",
                                                                      "descriptionCN": "PodIPs 确保为 Pod 提供分配的 IP 地址。如果此字段指定，则 0 号元素必须匹配 Pod 的 IP 地址。每个 IPv4 和 IPv6 前缀最多可以分配给一个 pod 操作数。如果没有分配任何 IP，请此列表为空。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodIP"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "qosClass": {
                                                                      "description": "The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/#quality-of-service-classes",
                                                                      "descriptionCN": "根据资源需求分配的QOS分类。见PodQOSClass类型，以获取可用的QOS类更多信息。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'",
                                                                      "descriptionCN": "E桶通知中的简单CamelCase消息，包括有关为什么该Pod处于这种状态的原因。例如：\"Evicted\"",
                                                                      "type": "string"
                                                                  },
                                                                  "resize": {
                                                                      "description": "Status of resources resize desired for pod's containers. It is empty if no resources resize is pending. Any changes to container resources will automatically set this to \"Proposed\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "resourceClaimStatuses": {
                                                                      "description": "Status of resource claims.",
                                                                      "descriptionCN": "资源声称的状态。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaimStatus"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge,retainKeys"
                                                                  },
                                                                  "startTime": {
                                                                      "description": "RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.",
                                                                      "descriptionCN": "RFC 3339日期和时间，在Kubelet接收到该对象之前被承认。这发生在Kubelet从Pod中拉取容器镜像之前。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodTemplate": {
                                                              "description": "PodTemplate describes a template for creating copies of a predefined pod.",
                                                              "descriptionCN": "PodTemplate 是用来创建预定义 pod 的模板。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别的架构转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时的端点推断这一点。无法更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "template": {
                                                                      "description": "Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "模板定义了从此PodTemplate创建的Pod。https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodTemplateList": {
                                                              "description": "PodTemplateList is a list of PodTemplates.",
                                                              "descriptionCN": "PodTemplateList是一个PodTemplate的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的模型。服务器应该将识别的模式转换为内部的最新值，如果接受不到不识别的值，则可能拒绝它。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of pod templates",
                                                                      "descriptionCN": "Pod模板列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplate"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一个表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推断出这一点。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PodTemplateSpec": {
                                                              "description": "PodTemplateSpec describes the data a pod should have when created from a template",
                                                              "descriptionCN": "PodTemplateSpec 是描述创建 Pod 时模板应该包含的数据。",
                                                              "properties": {
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "对期望的行为的描述。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PortStatus": {
                                                              "descriptionCN": "当然可以，但是我需要您提供要翻译的文字。",
                                                              "properties": {
                                                                  "error": {
                                                                      "description": "Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.",
                                                                      "descriptionCN": "错误是记录服务端口问题的。错误格式应符合以下规则： - 自定义错误值应在此文件中指定，并使用CamelCase命名方式。 - 云提供商特定错误值必须有名称，以遵循foo.example.com/CamelCase格式。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "Port is the port number of the service port of which status is recorded here",
                                                                      "descriptionCN": "\"Port\"是指服务端口的端口号，其中的状态信息被记录在这里。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "Protocol is the protocol of the service port of which status is recorded here The supported values are: \"TCP\", \"UDP\", \"SCTP\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PortworxVolumeSource": {
                                                              "description": "PortworxVolumeSource represents a Portworx volume resource.",
                                                              "descriptionCN": "PortworxVolumeSource代表一个Portworx卷资源。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "FSType代表挂载的文件系统类型。必须是主机操作系统支持的文件系统类型。例如：\"ext4\", \"xfs\"。如果未指定则自动推断为：\"ext4\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "默认情况下，readOnly是false（可读/写）。在这里，ReadOnly会强制将VolumeMounts中的ReadOnly设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "volumeID": {
                                                                      "description": "volumeID uniquely identifies a Portworx volume",
                                                                      "descriptionCN": "VolumeID 是一个唯一标识 Portworx 存储空间的数字。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.PreferredSchedulingTerm": {
                                                              "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                              "descriptionCN": "默认优先调度术语与所有隐含权重为0的对象匹配。空首选调度术语与无对象匹配（也称为无效）。",
                                                              "properties": {
                                                                  "preference": {
                                                                      "description": "A node selector term, associated with the corresponding weight.",
                                                                      "descriptionCN": "节点选择器术语，与对应的权重相关联。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
                                                                  },
                                                                  "weight": {
                                                                      "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                      "descriptionCN": "匹配节点SelectorTerm的权重在1-100之间。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Probe": {
                                                              "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                                              "descriptionCN": "探测器描述了一项健康检查，用于检查容器以确定它是否还活着或准备接收流量。",
                                                              "properties": {
                                                                  "exec": {
                                                                      "description": "Exec specifies the action to take.",
                                                                      "descriptionCN": "执行者指定要采取的行动。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
                                                                  },
                                                                  "failureThreshold": {
                                                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                                      "descriptionCN": "在成功后连续失败的次数最少为3次。默认值为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "grpc": {
                                                                      "description": "GRPC specifies an action involving a GRPC port.",
                                                                      "descriptionCN": "GRPC 提供了一个涉及 GRPC 通道的操作。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
                                                                  },
                                                                  "httpGet": {
                                                                      "description": "HTTPGet specifies the http request to perform.",
                                                                      "descriptionCN": "HTTPGet 方法指定要执行的 HTTP 请求。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
                                                                  },
                                                                  "initialDelaySeconds": {
                                                                      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "descriptionCN": "容器启动后多久开始执行liveness probes？更多详情：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "periodSeconds": {
                                                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                                                                      "descriptionCN": "探测器的运行频率（秒）。默认设置为10秒。最小值应为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "successThreshold": {
                                                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                                                      "descriptionCN": "探测器在失败后连续成功所需的最小次数。默认值为1。必须为1，用于存活和启动。最低值为1。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "tcpSocket": {
                                                                      "description": "TCPSocket specifies an action involving a TCP port.",
                                                                      "descriptionCN": "TCP套接字指定一个涉及TCP端口的操作。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
                                                                  },
                                                                  "terminationGracePeriodSeconds": {
                                                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                                                      "descriptionCN": "如果Pod在被探测到失败时需要优雅地终止，那么该Pod需要有至少秒的超时。此超时是运行在Pod中的进程发送一个强制停止信号后（即Pod开始执行相应的操作）经过的时间。在这个时间段内，这些进程将被强行中断。设置这个值应大于预期清理时间的长度。如果这个值为nil，则Pod的终止GracePeriodSeconds将使用。否则，这个值会覆盖Pod配置中提供的值。必须是非负整数。零表示立即通过kill信号结束（没有关闭的可能）。这是一个Beta字段，并需要启用ProbeTerminationGracePeriod功能开关。最小值是1。spec.terminationGracePeriodSeconds用于如果没有设置，则使用。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "timeoutSeconds": {
                                                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "descriptionCN": "探测器将在多少秒后超时。默认为1秒。最小值为1。更多信息：https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ProjectedVolumeSource": {
                                                              "description": "Represents a projected volume source",
                                                              "descriptionCN": "代表一个待估的体积源",
                                                              "properties": {
                                                                  "defaultMode": {
                                                                      "description": "defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "默认模式是用于设置创建文件时默认权限的模式位。必须是一个从0000到0777或从0到511的八进制值。YAML接受两种八进制和 decimal 值，JSON需要 decimal 值用于模式位。路径内的目录不会受到这个设置的影响。这可能与影响文件模式的其他选项（如 fsGroup）产生冲突，结果可能是其他模式位被设置。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "sources": {
                                                                      "description": "sources is the list of volume projections",
                                                                      "descriptionCN": "资源是卷轴的列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.QuobyteVolumeSource": {
                                                              "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
                                                              "descriptionCN": "代表了一个Quobyte挂载，其寿命可与Pod的生命周期相同。Quobyte卷不支持所有权管理或SELinux重新标签。",
                                                              "properties": {
                                                                  "group": {
                                                                      "description": "group to map volume access to Default is no group",
                                                                      "descriptionCN": "默认组下访问权限表的容量为0",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                                                                      "descriptionCN": "这里的readOnly将强制Quobyte卷将其挂载为只读权限。默认值是false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "registry": {
                                                                      "description": "registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                                                                      "descriptionCN": "注册是一个单一或多个Quobyte Registry服务指定的字符串（主机:端口对）作为单个或多个项，这些项以逗号分隔，并在后台注册为整个卷。",
                                                                      "type": "string"
                                                                  },
                                                                  "tenant": {
                                                                      "description": "tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                                                      "descriptionCN": "租户拥有提供的Quobyte块在后台使用，值由插件设置",
                                                                      "type": "string"
                                                                  },
                                                                  "user": {
                                                                      "description": "user to map volume access to Defaults to serivceaccount user",
                                                                      "descriptionCN": "用户将访问volume访问设置为默认的服务账户。",
                                                                      "type": "string"
                                                                  },
                                                                  "volume": {
                                                                      "description": "volume is a string that references an already created Quobyte volume by name.",
                                                                      "descriptionCN": "体积是一个指向已经创建的Quobyte卷名的字符串。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.RBDPersistentVolumeSource": {
                                                              "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表一个Rados Block Device设备映射，它可以持续整个Pod的生命周期。RBD卷支持所有权管理和SELinux标签重新分配。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                                                      "descriptionCN": "文件系统类型是您想要挂载的卷的文件系统类型。提示：确保您的文件系统类型支持主机操作系统。示例：\"ext4\", \"xfs\", \"ntfs\"。如果没有被指定，自动推断为\"ext4\"。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                                                      "type": "string"
                                                                  },
                                                                  "image": {
                                                                      "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "\"image\" 是 Rados 的名称。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它。",
                                                                      "type": "string"
                                                                  },
                                                                  "keyring": {
                                                                      "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "键环是RBDUser使用的路径，默认设置为/etc/ceph/keyring。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "string"
                                                                  },
                                                                  "monitors": {
                                                                      "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "监控器是一组Ceph监控。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "pool": {
                                                                      "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "\"pool是rados pool的名称。默认使用rbd。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它\"",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "这个字段的值会强制将RBD的ReadOnly设置改为false。默认情况下，它应该是false。更多信息可以在《如何使用》章节中找到。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "RBDUser的认证秘密名为secretRef。如果提供，则重写keyring键。默认为nil。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "user": {
                                                                      "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "用户名是rados。默认为admin。更多信息可以在https://examples.k8s.io/volumes/rbd/README.md#如何使用它。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.RBDVolumeSource": {
                                                              "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "代表一个Rados块设备挂载，该挂载器将持续一个Pod的寿命。RBD卷支持所有权管理和SELinux标签重新定义。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                                                      "descriptionCN": "文件系统类型是您想要挂载的卷的文件系统类型。提示：确保该文件系统类型支持主机操作系统。示例：\"ext4\"、\"xfs\"、\"ntfs\"。默认情况下假设为“ext4”。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                                                      "type": "string"
                                                                  },
                                                                  "image": {
                                                                      "description": "image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "图像是rados的名称。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "string"
                                                                  },
                                                                  "keyring": {
                                                                      "description": "keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "键圈是RBDUser的路径到键圈。默认设置为/etc/ceph/keyring。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "string"
                                                                  },
                                                                  "monitors": {
                                                                      "description": "monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "监视器是一系列的Ceph监控。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "pool": {
                                                                      "description": "pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "池是rados的名称。默认为rdbd。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "这里的readOnly将强制 VolumeMounts 中的 ReadOnly 设置。默认为 false。更多信息：https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "RBDUser中auth secret的名称是secretRef。如果提供，则会覆盖默认keyring。默认情况下为nil。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "user": {
                                                                      "description": "user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                                                      "descriptionCN": "用户名是 rados。默认值为 admin。更多信息：https://examples.k8s.io/volumes/rbd/README.md#如何使用它",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ReplicationController": {
                                                              "description": "ReplicationController represents the configuration of a replication controller.",
                                                              "descriptionCN": "副本控制器表示一个副本控制器的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别的模式转换为最新的内部值，如果遇到未知值，则拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示该对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时使用的端点推断出这个值。不能被更新。在 camelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "如果复制控制器的标签为空，它们将被默认设置为管理该复制控制器的Pods的标签。标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the specification of the desired behavior of the replication controller. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "Replication controller的规格定义了其期望的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is the most recently observed status of the replication controller. This data may be out of date by some window of time. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是最近观察到的复制控制器的状态。这个数据可能会在一段时间内过时。由系统维护并只读。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ReplicationControllerCondition": {
                                                              "description": "ReplicationControllerCondition describes the state of a replication controller at a certain point.",
                                                              "descriptionCN": "ReplicationControllerCondition 描述了一个 Replication Controller 在某个特定点的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "The last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后一次状态转换的时机。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human readable message indicating details about the transition.",
                                                                      "descriptionCN": "一个可读的人工消息，表明过渡的细节。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "The reason for the condition's last transition.",
                                                                      "descriptionCN": "条件的最后转变原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况，真、假、未知之一。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type of replication controller condition.",
                                                                      "descriptionCN": "类型复制控制器条件。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ReplicationControllerList": {
                                                              "description": "ReplicationControllerList is a collection of replication controllers.",
                                                              "descriptionCN": "复制控制器列表是一个包含复制控制器的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化结构。服务器应该将识别的规范转换为内部最近的值，并可能拒绝不熟悉的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
                                                                      "descriptionCN": "\"replication controllers列表。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller\"",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationController"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一种表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时使用的端点推测这一点。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ReplicationControllerSpec": {
                                                              "description": "ReplicationControllerSpec is the specification of a replication controller.",
                                                              "descriptionCN": "复制控制器规范是关于复制控制器的规范。",
                                                              "properties": {
                                                                  "minReadySeconds": {
                                                                      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)",
                                                                      "descriptionCN": "创建的新Pod需要在没有容器崩溃的情况下等待的最小时间长度，以使其被视为可用。默认设置为0（一旦Pod准备好，它就会被认为是可用的）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
                                                                      "descriptionCN": "复制数量是期望的副本的数量。这是一把指针，用来区分明确的0和不确定的值。默认为1。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#什么是replicationcontroller",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "selector": {
                                                                      "description": "Selector is a label query over pods that should match the Replicas count. If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "descriptionCN": "选择器是Pod标签查询，应该匹配Replicas数量。如果选择器为空，则默认为Pod模板上的标签。如果选择器中必须匹配的键和值为空，则默认为Pod模板上的标签。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
                                                                      "type": "object"
                                                                  },
                                                                  "template": {
                                                                      "description": "Template is the object that describes the pod that will be created if insufficient replicas are detected. This takes precedence over a TemplateRef. The only allowed template.spec.restartPolicy value is \"Always\". More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "descriptionCN": "模板是用于描述创建副本时如果发现不足的副本将创建的对象。这优于TemplateRef。允许的template.spec.restartPolicy值为\"Always\"。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ReplicationControllerStatus": {
                                                              "description": "ReplicationControllerStatus represents the current status of a replication controller.",
                                                              "descriptionCN": "ReplicationControllerStatus 表示一个复制控制器的当前状态。",
                                                              "properties": {
                                                                  "availableReplicas": {
                                                                      "description": "The number of available replicas (ready for at least minReadySeconds) for this replication controller.",
                                                                      "descriptionCN": "这个复制控制器可用的复制品数量（至少minReadySeconds秒）",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "Represents the latest available observations of a replication controller's current state.",
                                                                      "descriptionCN": "代表了复制控制器当前状态的最新可用观察。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerCondition"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "fullyLabeledReplicas": {
                                                                      "description": "The number of pods that have labels matching the labels of the pod template of the replication controller.",
                                                                      "descriptionCN": "具有标签匹配于replication controller pod template的Pod的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "ObservedGeneration reflects the generation of the most recently observed replication controller.",
                                                                      "descriptionCN": "观察到的泛化表示最近观察到的replication controller的生成。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "readyReplicas": {
                                                                      "description": "The number of ready replicas for this replication controller.",
                                                                      "descriptionCN": "这个复制控制器可用的可重用副本的数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "replicas": {
                                                                      "description": "Replicas is the most recently observed number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
                                                                      "descriptionCN": "复制是最近观察到的复制数量。更多信息：https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#什么是复制控制器",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceClaim": {
                                                              "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                                              "descriptionCN": "资源claim引用PodSpec.ResourceClaims中的一个条目。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                                                                      "descriptionCN": "字段应与 Pod 中 pod.spec.resourceClaims 的 pod 名称匹配。这意味着该资源可在容器中可用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceFieldSelector": {
                                                              "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
                                                              "descriptionCN": "ResourceFieldSelector 代表容器资源（CPU、内存）及其输出格式。",
                                                              "properties": {
                                                                  "containerName": {
                                                                      "description": "Container name: required for volumes, optional for env vars",
                                                                      "descriptionCN": "容器名称：为卷积需要，可选环境变量。",
                                                                      "type": "string"
                                                                  },
                                                                  "divisor": {
                                                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                      "descriptionCN": "",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  },
                                                                  "resource": {
                                                                      "description": "Required: resource to select",
                                                                      "descriptionCN": "需要的资源：选择资源",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceQuota": {
                                                              "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
                                                              "descriptionCN": "资源限配器设置每个命名空间的汇总限配限制",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示的对象的序列化版本。服务器应该将识别到的格式转换为内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个字符串值，代表这个对象所表示的 REST 资源。服务器可能从客户端提交请求时推测出此属性。无法被更新。 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the desired quota. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "规范定义了所需的配额。https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status defines the actual enforced quota and its current usage. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态定义了实际强制配额及其当前使用情况。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceQuotaList": {
                                                              "description": "ResourceQuotaList is a list of ResourceQuota items.",
                                                              "descriptionCN": "资源限额列表是一个包含ResourceQuota项的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的规范。服务器应该将识别的规范转换为内部值，且可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "descriptionCN": "物品是一个资源限制列表。更多信息：https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuota"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个表示此对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求时提交给 endpoint 的方式推测这一点。不能被更新。使用 CamelCase 进行命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceQuotaSpec": {
                                                              "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
                                                              "descriptionCN": "资源限额规范定义了用于强制执行的期望硬限制。",
                                                              "properties": {
                                                                  "hard": {
                                                                      "description": "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "descriptionCN": "硬性限制是指每个命名资源都希望达到的期望值。更多信息：https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "type": "object"
                                                                  },
                                                                  "scopeSelector": {
                                                                      "description": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.",
                                                                      "descriptionCN": "权限筛选器也是与quota表达式配合使用的组合过滤器集合，它必须匹配被跟踪的每个对象。对于一个资源来说，它和权限筛选器（如果在spec中指定）都必须匹配。\n\n这是关于如何将给定的文字翻译为中文的完整描述：\n\n权限筛选器也是与quota表达式配合使用的组合过滤器集合，它必须匹配被跟踪的每个对象。对于一个资源来说，它和权限筛选器（如果在spec中指定）都必须匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ScopeSelector"
                                                                  },
                                                                  "scopes": {
                                                                      "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
                                                                      "descriptionCN": "集合的过滤器，必须匹配追踪到每个限额的对象。如果没有指定，限额会匹配所有对象。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceQuotaStatus": {
                                                              "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
                                                              "descriptionCN": "资源配额状态定义了强制硬限和观察使用的约束。",
                                                              "properties": {
                                                                  "hard": {
                                                                      "description": "Hard is the set of enforced hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "descriptionCN": "硬限制是指为每个命名资源设置的强制性硬限。更多信息：https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                                                                      "type": "object"
                                                                  },
                                                                  "used": {
                                                                      "description": "Used is the current observed total usage of the resource in the namespace.",
                                                                      "descriptionCN": "当前观察到的资源在命名空间中的总使用量。",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ResourceRequirements": {
                                                              "description": "ResourceRequirements describes the compute resource requirements.",
                                                              "descriptionCN": "资源需求描述了计算资源的需求。",
                                                              "properties": {
                                                                  "claims": {
                                                                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                                                      "descriptionCN": "\"声明\"列将指定在spec.resourceClaims中定义的资源名称，这些资源用于此容器。这是一个alpha字段，需要启用DynamicResourceAllocation功能开关。\n\n这个字段是不可变的。它只能被设置为容器。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "limits": {
                                                                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "\"限制\"描述了允许的计算资源的最大量。更多信息：https://kubernetes.io/docs/concepts/configure/Manage-Resources-Containers/",
                                                                      "type": "object"
                                                                  },
                                                                  "requests": {
                                                                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "请求描述了最小的计算资源需求。如果请求被忽略用于容器，那么默认情况下是当此属性被明确指定时的限制，否则是实现定义的一个值。 请求不能超过限制。更多信息：https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SELinuxOptions": {
                                                              "description": "SELinuxOptions are the labels to be applied to the container",
                                                              "descriptionCN": "SELinuxOptions 是要应用于容器的标签。",
                                                              "properties": {
                                                                  "level": {
                                                                      "description": "Level is SELinux level label that applies to the container.",
                                                                      "descriptionCN": "级别是 SELinux 的标签，它应用于容器。",
                                                                      "type": "string"
                                                                  },
                                                                  "role": {
                                                                      "description": "Role is a SELinux role label that applies to the container.",
                                                                      "descriptionCN": "角色是SELinux的角色标签，应用于容器。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type is a SELinux type label that applies to the container.",
                                                                      "descriptionCN": "类型是SELinux类型标签，应用于容器。",
                                                                      "type": "string"
                                                                  },
                                                                  "user": {
                                                                      "description": "User is a SELinux user label that applies to the container.",
                                                                      "descriptionCN": "用户是SELinux的用户标签，应用于容器。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource": {
                                                              "description": "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume",
                                                              "descriptionCN": "ScaleIOPersistentVolumeSource代表一个持久的 ScaleIO 随机存储源",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "gateway": {
                                                                      "description": "gateway is the host address of the ScaleIO API Gateway.",
                                                                      "descriptionCN": " ScaleIO API Gateway 主机地址是 gateway。",
                                                                      "type": "string"
                                                                  },
                                                                  "protectionDomain": {
                                                                      "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                                                                      "descriptionCN": "保护域是配置存储的ScaleIO保护域名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "默认情况下，readOnly 是 false。如果将 readOnly 设置为 true，则会在 VolumeMounts 中强制启用ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                                                                      "descriptionCN": "秘密引用的秘密用户和其他敏感信息。如果没有提供，登录操作将失败。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
                                                                  },
                                                                  "sslEnabled": {
                                                                      "description": "sslEnabled is the flag to enable/disable SSL communication with Gateway, default false",
                                                                      "descriptionCN": "SSLEnabled 是启用/禁用与 Gateway 的 SSL 通信的标志，默认为 false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "storageMode": {
                                                                      "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                                                                      "descriptionCN": "存储模式指示一个卷的存储应为深优先还是浅优先。默认是浅优先。",
                                                                      "type": "string"
                                                                  },
                                                                  "storagePool": {
                                                                      "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                                                                      "descriptionCN": "存储池是与保护域相关的ScaleIO存储池。",
                                                                      "type": "string"
                                                                  },
                                                                  "system": {
                                                                      "description": "system is the name of the storage system as configured in ScaleIO.",
                                                                      "descriptionCN": "系统的名称是 ScaleIO 自动配置的存储系统。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeName": {
                                                                      "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
                                                                      "descriptionCN": "卷名是已经在ScaleIO系统中创建的该卷源关联的已创建卷的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ScaleIOVolumeSource": {
                                                              "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
                                                              "descriptionCN": "ScaleIOVolumeSource表示一个持久的ScaleIO卷",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
                                                                      "descriptionCN": "文件系统类型是需要挂载的文件系统的类型。必须是主机操作系统支持的文件系统类型。例如：\"ext4\"，\"xfs\"，\"ntfs\"。默认为\"xfs\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "gateway": {
                                                                      "description": "gateway is the host address of the ScaleIO API Gateway.",
                                                                      "descriptionCN": " gateway 是 ScaleIO API Gateway 的主机地址。",
                                                                      "type": "string"
                                                                  },
                                                                  "protectionDomain": {
                                                                      "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                                                                      "descriptionCN": "保护域是配置存储时使用的 ScaleIO 保护域名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "只有读取的设置，不支持写入。在这个情况下，ReadOnly将强制在VolumeMounts中启用 ReadOnly 设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
                                                                      "descriptionCN": "秘密Ref用于ScaleIO用户和其他敏感信息。如果没有提供，登录操作将失败。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "sslEnabled": {
                                                                      "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                                                                      "descriptionCN": "\"sslEnabled\" 标志设置 SSL 通信是否启用，默认为 false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "storageMode": {
                                                                      "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
                                                                      "descriptionCN": "存储模式表示卷的存储方式应为厚分区还是薄分区。默认情况下，它是薄分区。",
                                                                      "type": "string"
                                                                  },
                                                                  "storagePool": {
                                                                      "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                                                                      "descriptionCN": "存储池是保护域中的ScaleIO Storage Pool。",
                                                                      "type": "string"
                                                                  },
                                                                  "system": {
                                                                      "description": "system is the name of the storage system as configured in ScaleIO.",
                                                                      "descriptionCN": "系统是 ScaleIO 设备上配置的存储系统的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeName": {
                                                                      "description": "volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.",
                                                                      "descriptionCN": "卷名称是 ScaleIO 系统中已创建的该源卷的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ScopeSelector": {
                                                              "description": "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.",
                                                              "descriptionCN": "scope selector代表着 scoped-resource selector 需求的 AND。",
                                                              "properties": {
                                                                  "matchExpressions": {
                                                                      "description": "A list of scope selector requirements by scope of the resources.",
                                                                      "descriptionCN": "资源范围的资源选择要求列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ScopedResourceSelectorRequirement": {
                                                              "description": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
                                                              "descriptionCN": "权限筛选器需求是一个包含值、scope名称和关联范围名称的操作符的 selector。",
                                                              "properties": {
                                                                  "operator": {
                                                                      "description": "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
                                                                      "descriptionCN": "代表一个范围与一组值的关系。有效的运算符包括In、NotIn、Exists和DoesNotExist。",
                                                                      "type": "string"
                                                                  },
                                                                  "scopeName": {
                                                                      "description": "The name of the scope that the selector applies to.",
                                                                      "descriptionCN": "被选择样式的范围的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "descriptionCN": "一个字符串值的数组。如果运算符是In或NotIn，则值数组必须非空。如果运算符是Exists或DoesNotExist，则值数组必须为空。此数组在战略合并补丁中被替换。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SeccompProfile": {
                                                              "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
                                                              "descriptionCN": "SeccompProfile定义了一个pod容器的seccomp profile设置。只能有一个配置源被设置。",
                                                              "properties": {
                                                                  "localhostProfile": {
                                                                      "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.",
                                                                      "descriptionCN": "本地主机上的Profile指示了一个文件在节点上定义的profile应该使用。这个profile必须预先配置在节点上工作。它必须是递归相对于kubelet的配置seccomp profile的位置。如果类型为\"Localhost\"，它必须被设置，但不能设置其他类型的。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                                                      "descriptionCN": "类型指示将应用于哪种类型的seccomp profile。有效选项包括：\n\nlocalhost - 以节点上的文件定义的本地策略应使用。RuntimeDefault - 应用容器运行时默认策略。Unconfined - 不应用任何策略。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Secret": {
                                                              "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
                                                              "descriptionCN": "秘密含的秘密数据类型。Data字段中的总字节数必须小于MaxSecretSize字节。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的数据结构。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "data": {
                                                                      "description": "Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
                                                                      "descriptionCN": "数据包含秘密数据。每个键必须由字母数字字符、减号、下划线或点组成。秘密数据的序列化形式是一个base64编码字符串，表示这里的任意非字符串值。见https://tools.ietf.org/html/rfc4648#section-4",
                                                                      "type": "object"
                                                                  },
                                                                  "immutable": {
                                                                      "description": "Immutable, if set to true, ensures that data stored in the Secret cannot be updated (only object metadata can be modified). If not set to true, the field can be modified at any time. Defaulted to nil.",
                                                                      "descriptionCN": "不可变，如果设置为true，则确保在Secret中存储的数据（只有对象元数据可以修改）不能被更新。如果没有设置为true，则可以在任何时间对该字段进行修改。默认值为nil。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是表示此对象所代表的 REST 资源的字符串值。服务器可能根据客户端向该端点提交请求时推断出这一点。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "stringData": {
                                                                      "description": "stringData allows specifying non-binary secret data in string form. It is provided as a write-only input field for convenience. All keys and values are merged into the data field on write, overwriting any existing values. The stringData field is never output when reading from the API.",
                                                                      "descriptionCN": "字符串数据允许在字符串形式中指定非二进制秘密数据。作为方便使用，它被提供为一个只读输入字段。所有键和值在写入时合并到数据字段中，覆盖任何现有的值。在从API阅读时，字符串数据永远不会输出。",
                                                                      "type": "object"
                                                                  },
                                                                  "type": {
                                                                      "description": "Used to facilitate programmatic handling of secret data. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                      "descriptionCN": "用于处理秘密数据的程序化处理。更多信息：https://kubernetes.io/docs/concepts/configuration/secret/#secret-types",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretEnvSource": {
                                                              "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
                                                              "descriptionCN": "秘密环境源选择一个秘密来填充环境变量。目标Secret的数据字段的内容将表示键值对作为环境变量。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考对象的名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "Specify whether the Secret must be defined",
                                                                      "descriptionCN": "“是否必须定义秘密”",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretKeySelector": {
                                                              "description": "SecretKeySelector selects a key of a Secret.",
                                                              "descriptionCN": "秘密密钥选择器会选择一个Secret中的密钥。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                      "descriptionCN": "秘密的关键在于选择。必须是一个有效的秘密密钥。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "被参考对象的名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "Specify whether the Secret or its key must be defined",
                                                                      "descriptionCN": "明确秘密或其密钥是否需要定义。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretList": {
                                                              "description": "SecretList is a list of Secret.",
                                                              "descriptionCN": "秘密清单是一份秘密的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是表示此对象表示形式的版本化结构。服务器应将识别到的规范转换为内部的最新值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret",
                                                                      "descriptionCN": "物品是一个秘密对象的列表。更多信息：https://kubernetes.io/docs/concepts/configuration/secret",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Secret"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个表示这个对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时提交给它的端点推断出此。不能更新。在 camelCase 下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretProjection": {
                                                              "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
                                                              "descriptionCN": "将秘密转化为投影体积。目标秘密的数据字段的内容将以数据字段中的键作为文件名的形式呈现为投影体积。请注意，这与默认模式相同，但没有隐藏的权限。",
                                                              "properties": {
                                                                  "items": {
                                                                      "description": "items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                      "descriptionCN": "如果未指定，请将Data字段中引用的Secret中的每个键值对投影到该体积作为文件，其名称为键和内容。如果指定，则列出的键将被投影到指定的路径上，而未列出的键不会出现在路径中。如果指定了未在Secret中出现的键，设置体积时如果未标记为可选，将产生错误。路径必须是相对的，并且可能不包含 .. 路径或以 .. 开头。\n\n总的来说，这个逻辑主要是用于提供一个抽象的数据结构，其中可以存储多个不同的数据项（key-value pair），并且这些数据项可以在多个位置（包括 Secret 中）进行插入和删除。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                                                                      }
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "参考名称。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "optional": {
                                                                      "description": "optional field specify whether the Secret or its key must be defined",
                                                                      "descriptionCN": "可选字段指定秘密或其密钥是否必须被定义。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretReference": {
                                                              "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace",
                                                              "descriptionCN": "秘密引用代表一个秘密引用。它有足够的信息来检索任何命名空间中的秘密。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is unique within a namespace to reference a secret resource.",
                                                                      "descriptionCN": "在一个命名空间中，一个名字是唯一可以引用秘密资源的。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "namespace defines the space within which the secret name must be unique.",
                                                                      "descriptionCN": "“namespace”定义了必须唯一的秘密名称的空间。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecretVolumeSource": {
                                                              "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
                                                              "descriptionCN": "将目标秘密的内容转换为体积。\n\n使用Data字段中的键作为文件名，目标秘密的Data字段内容将以文件形式呈现到体积中。Secret volumes支持所有权管理和SELinux标签化。",
                                                              "properties": {
                                                                  "defaultMode": {
                                                                      "description": "defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                                      "descriptionCN": "默认模式是可选的：设置创建文件时默认权限的方式。必须是一个八进制值在0000到0777之间或一个十进制值在0和511之间。YAML接受这两种类型的价值，JSON需要使用模式位。默认为0644。路径内部的目录不受此设置的影响。这可能与其他选项影响文件模式（如fsGroup）的结果可能是其他模式位被设置。\n\n请注意，这里的\"mode bits\"可能指的是不同的事物，例如FSGroup、FSGroup模式位等等。因此，我假设这里是指fsGroup模式位。如果是这样的话，请将这段话中的\"fsGroup\"替换为具体的名称。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "items": {
                                                                      "description": "items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
                                                                      "descriptionCN": "如果未指定，则指向参考秘钥的Data字段中的每个键值对都将被推送到名为key的文件中。如果指定，列出的键将被推送到指定路径，而不列出的键不会存在。如果键未在参考秘密中指定，则卷设置将错误，除非标记为可选。路径必须是相对的，并且不应包含 '..' 路径或以 '..' 开头。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
                                                                      }
                                                                  },
                                                                  "optional": {
                                                                      "description": "optional field specify whether the Secret or its keys must be defined",
                                                                      "descriptionCN": "可选字段指定秘密或其密钥是否需要定义",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretName": {
                                                                      "description": "secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                      "descriptionCN": "秘密名称是 Pod 的命名空间中使用的秘密。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SecurityContext": {
                                                              "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
                                                              "descriptionCN": "安全上下文包含应用于容器的安全配置。有些字段同时存在于 SecurityContext 和 PodSecurityContext 中。当两者都设置时， SecurityContext 的值将优先于 PodSecurityContext 的值。",
                                                              "properties": {
                                                                  "allowPrivilegeEscalation": {
                                                                      "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "允许特权提升控制进程是否能获得比其父进程更多的权限。该布尔值直接控制容器进程的no_new_privs标志是否会被设置。当容器运行为特权或具有CAP_SYS_ADMIN权限时，始终启用允许特权提升。但是，在系统名称为Windows的情况下，这个字段不能被设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "capabilities": {
                                                                      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "当运行容器时添加或删除能力。默认情况下，由容器运行时提供的默认能力集。请注意，此字段不能在名为“window”的规格属性中设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
                                                                  },
                                                                  "privileged": {
                                                                      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "使用特权模式运行容器。在特权容器中运行的进程实际上相当于主机上的根用户。默认为false。需要注意的是，当spec.os.name为windows时，这个字段不能被设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "procMount": {
                                                                      "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "进程挂载是指使用的进程挂载类型。默认是DefaultProcMount，它使用容器运行时的默认 readonly 和 masked 路径。这需要 ProcMountType 特性开关被启用。注意，当 spec.os.name 是 Windows 时，这个字段不能设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnlyRootFilesystem": {
                                                                      "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "这个容器是否有读取只的根文件系统。默认是false。需要注意的是，此字段不能在指定的操作系统.name为windows的情况下设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "runAsGroup": {
                                                                      "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "负责容器进程的入口点运行。如果未设置则使用默认值。可能在PodSecurityContext中设置。如果同时在SecurityContext和PodSecurityContext中设置，SecurityContext中的值将优先级高于PodSecurityContext中的值。注意，当spec.os.name为windows时，此字段不能被设置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "runAsNonRoot": {
                                                                      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                                      "descriptionCN": "表示容器必须作为非root用户运行。如果为真，Kubelet将在运行时验证镜像以确保它不会以uid 0（root）运行，并且在运行容器时失败。如果没有设置或false，则不会进行此类验证。也可以在PodSecurityContext中设置。如果同时在安全策略和PodSecurityContext中设置，安全策略指定的值将优先于PodSecurityContext中的值。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "runAsUser": {
                                                                      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "容器进程的入口点UID。如果没有指定，默认会使用image metadata中指定的用户。也可以在PodSecurityContext中设置。如果既在SecurityContext中也设置了PodSecurityContext，那么 SecurityContext 中的值将优先于 PodSecurityContext 中的值。\n\n在spec.os.name为windows的情况下，这个字段无法被设置。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "seLinuxOptions": {
                                                                      "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "在容器中应用的SELinux上下文。如果没有指定，容器的运行时将为每个容器分配一个随机的SELinux上下文。也可以在PodSecurityContext中设置此字段。如果在 SecurityContext 和 PodSecurityContext 中都设置了此字段，则SecurityContext 的值应具有优先级。需要注意的是，在OS名称为\"windows\"的情况下，此字段不能被设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
                                                                  },
                                                                  "seccompProfile": {
                                                                      "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.",
                                                                      "descriptionCN": "这个容器使用的seccomp选项。如果两者级别都提供了seccomp选项，那么容器的选项会覆盖pod的选项。请注意，当spec.os.name为windows时，这个字段不能被设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
                                                                  },
                                                                  "windowsOptions": {
                                                                      "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
                                                                      "descriptionCN": "在所有容器中使用的Windows特定设置。如果没有指定， PodSecurityContext中的选项将被使用。如果在安全上下文和PodSecurityContext中都设置了此字段，则安全上下文中的值将优先于PodSecurityContext中的值。请注意，在\"os.name\"为linux的情况下，此字段不能设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Service": {
                                                              "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
                                                              "descriptionCN": "服务是一种由软件服务（例如，mysql）的本地端口组成的抽象。代理监听在该端口上，并决定哪些Pod将回应通过代理发送的请求。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将识别的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求时的端点推测这个值。无法被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "标准定义了一个服务的行为。https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "最近观察的服务状态。系统中运行。只读。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ServiceStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceAccount": {
                                                              "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
                                                              "descriptionCN": "服务账户结合：* 用户可理解的名字，以及可能由外围系统或外围设备提供，用于身份 * 可被认证和授权的主账号 * 一组秘密",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化结构。服务器应该将识别到的规范转换为内部的最新值，并可能拒绝不识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "automountServiceAccountToken": {
                                                                      "description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.",
                                                                      "descriptionCN": "\"AutomountServiceAccountToken\" 表示运行此服务帐户的Pod是否应该自动将API Token 存储在其中。可以在 Pod 的级别上进行重置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "imagePullSecrets": {
                                                                      "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                                                                      "descriptionCN": "ImagePullSecrets是一个命名空间内的引用到秘密的列表，用于在pods中提取任何依赖于这个ServiceAccount的图像。ImagePullSecrets与 Secrets 是不同的，因为 Secrets 可以被容器挂载在Pod上，但 ImagePullSecrets 只由Kubelet访问。更多信息：https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可以从客户端提交请求的端点推测出这一点。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "secrets": {
                                                                      "description": "Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use. Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token secrets for use outside of pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret",
                                                                      "descriptionCN": "秘密是一份在同命名空间中运行的Pod使用的同一namespace的秘密列表。如果这个ServiceAccount具有\"kubernetes.io/enforce-mountable-secrets\"标注设置为\"true\"，Pod只能在这个列表范围内受限。此字段不应用于外部使用自动生成的服务账户令牌秘密，而应通过TokenRequest API直接请求服务账户令牌秘密或手动创建服务账户令牌秘密。更多信息：https://kubernetes.io/docs/concepts/configuration/secret",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceAccountList": {
                                                              "description": "ServiceAccountList is a list of ServiceAccount objects",
                                                              "descriptionCN": "服务账户列表是一个包含ServiceAccount对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别的规范转换为最新的内部值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                                                      "descriptionCN": "服务帐户列表。更多信息：https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccount"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求的端点来推测这一点。不能被更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
                                                              "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
                                                              "descriptionCN": "服务账户令牌投影代表了一个推断的服务帐户令牌体积。这个投影可以用来将服务帐户的令牌插入到Pods的运行文件系统中，以便在API（Kubernetes API Server或其他）上使用。\n\n服务帐户凭证是用来提供访问和操作特定资源的能力的一个集合。它们被封装在JSON对象中，并且可以被任何程序或操作系统使用来执行各种操作，例如从API获取数据、更新配置、检查健康状况等。\n\n将服务帐户凭证转换为膨胀token也是常见的做法，即将每个令牌的数量乘以一个固定的比例，以便更好地控制令牌的大小。膨胀后的令牌可以在应用程序内部使用，而不会像原始令牌那样导致权限问题。\n\n膨胀token的主要优点是它提供了更大的灵活性和安全性。由于每次使用的令牌都是固定数量的，因此可以更轻松地管理令牌的生命周期。此外，通过膨胀token，还可以实现更加严格的权限控制。\n\n然而，膨胀token也存在一些缺点。首先，随着令牌的数量增加，膨胀后的令牌可能会变得过大，难以存储或管理。其次，如果攻击者能够获取到膨胀token，他们可能会用这些令牌来篡改API请求，从而对应用造成严重的损害。\n\n总的来说，服务帐户令牌投影是一个有用的工具，可以用于管理和保护应用程序中的服务帐户令牌。然而，应谨慎使用膨胀token，并确保有足够的安全措施来防止滥用。",
                                                              "properties": {
                                                                  "audience": {
                                                                      "description": "audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
                                                                      "descriptionCN": "目标受众是令牌的预定接收者。接收令牌的用户必须根据令牌指定的接受者身份进行识别，否则应拒绝令牌。默认情况下，令牌的接受者为apiserver的标识符。",
                                                                      "type": "string"
                                                                  },
                                                                  "expirationSeconds": {
                                                                      "description": "expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
                                                                      "descriptionCN": "服务账户令牌的有效期是该服务帐户令牌请求的期限。随着令牌的临近到期，kubelet卷插件将主动轮询服务帐户令牌。如果令牌的时间活期超过80%，或令牌的时间活期超过24小时，则 kubelet 将开始尝试旋转令牌。默认情况下为1小时，至少应为10分钟。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is the path relative to the mount point of the file to project the token into.",
                                                                      "descriptionCN": "路径是将文件与项目所选目录关联的相对路径。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceList": {
                                                              "description": "ServiceList holds a list of services.",
                                                              "descriptionCN": "服务列表包含了一系列的服务。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的结构。服务器应该将识别的结构转换为最新的内部值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "List of services",
                                                                      "descriptionCN": "服务列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Service"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个字符串值，代表这个对象所代表的 REST 资源。服务器可能从客户端提交请求的端点推断出这一点。无法更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServicePort": {
                                                              "description": "ServicePort contains information on service's port.",
                                                              "descriptionCN": "服务端包含服务的端口信息。",
                                                              "properties": {
                                                                  "appProtocol": {
                                                                      "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
                                                                      "descriptionCN": "对于这个端口的应用协议。这是用于为那些理解它们所使用的协议提供更丰富行为的暗示。这个字段遵循标准Kubernetes标签语法。有效值可以是：\n\n* 不带前缀的协议名称 - 保留由IANA定义的标准服务名（根据RFC-6335和https://www.iana.org/assignments/service-names）。\n\n* Kubernetes定义的前缀名称：\n  * 'kubernetes.io/h2c' - HTTP/2预先了解的明文，描述在https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-。\n  * 'kubernetes.io/ws'  - WebSocket以明文形式使用描述在https://www.rfc-editor.org/rfc/rfc6455。\n  * 'kubernetes.io/wss' -WebSocket使用TLS形式进行描述在https://www.rfc-editor.org/rfc/rfc6455。\n\n其他协议应使用实现定义的前缀名称，如mycompany.com/my-custom-protocol。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
                                                                      "descriptionCN": "此服务内的港口名称。这是DNS_LABEL。所有在ServiceSpec中的端口都必须有独特的名字。在考虑Service的端点时，这必须匹配EndpointPort中的\"name\"字段。如果没有定义ServicePort，则可选。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodePort": {
                                                                      "description": "The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
                                                                      "descriptionCN": "当服务的类型为NodePort或LoadBalancer时，每个节点上的该服务暴露的端口。系统通常会分配这些端口。如果值被指定且在有效范围内（不使用），那么操作将失败。如果没有指定，如果服务需要一个端口，则会分配一个端口。如果创建的服务中没有包含这个字段，更新服务将失败。此字段将在服务不再需要它（例如从NodePort更改为ClusterIP）后被擦除。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "port": {
                                                                      "description": "The port that will be exposed by this service.",
                                                                      "descriptionCN": "这项服务将开放的港口。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.",
                                                                      "descriptionCN": "这个端口的IP协议。支持TCP、UDP和SCTP。默认是TCP。",
                                                                      "type": "string"
                                                                  },
                                                                  "targetPort": {
                                                                      "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
                                                                      "descriptionCN": "服务目标Pod中的端口编号或名称。编号必须在1到65535之间。名称必须是IANA_SVC_NAME。如果这是一个字符串，那么它将被映射为目标Pod容器端口的命名端口。如果不指定，'port'字段的值（一个身份映射）将使用。对于没有clusterIP属性的服务，这个字段应该被忽略，并且应该设置为'port'字段的值。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceSpec": {
                                                              "description": "ServiceSpec describes the attributes that a user creates on a service.",
                                                              "descriptionCN": "服务描述用户在服务上创建的属性。",
                                                              "properties": {
                                                                  "allocateLoadBalancerNodePorts": {
                                                                      "description": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
                                                                      "descriptionCN": "分配负载均衡器节点端口定义了如果服务类型为 LoadBalancer 的 NodePorts 是否会自动分配。默认为 \"true\"。如果集群的负载均衡器不依赖于 NodePorts，可能设置为 \"false\"。如果客户请求特定的 NodePorts (通过指定一个值)，这些请求将得到尊重，无论 this 字段是否被设置。这个字段只能用于类型的 LoadBalancer，一旦其类型被更改为其他任何类型，它就会被清除。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "clusterIP": {
                                                                      "description": "clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address. Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "descriptionCN": "节点IP是服务的IP地址，通常是随机分配的。如果手动指定地址，处于系统配置范围（如根据系统配置），并且未被使用，将分配给服务；否则创建服务将失败。此字段可能在更新时不会更改，除非类型字段也进行更改（如果类型字段为ExternalName，则需要此字段为空）或类型字段也进行更改（在这种情况下，可以指定此字段，以描述上面的情况）。有效值是\"None\"、空字符串（\"\"）或有效的IP地址。将其设置为\"None\"将创建一个\"无虚拟IP\"的服务（优先使用直接端口连接，不必要地代理），这是有用的，当直接端口连接优先且不需要代理时。\n\n只适用于ClusterIP、NodePort和LoadBalancer类型的服务。如果在此字段中创建 ExternalName 类型的服务，创建将会失败。该字段在更新服务到 ExternalName 类型时会删除。\n\n更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "type": "string"
                                                                  },
                                                                  "clusterIPs": {
                                                                      "description": "ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "descriptionCN": "\"集群IPs\"是一个为这个服务分配的IP地址列表，通常是随机分配的。如果手动指定一个地址，它在范围（根据系统配置）内且未使用，它将被分配给该服务；否则创建该服务将会失败。此字段可能不会通过更新更改除非类型字段也进行更改或类型字段变为ExternalName（在这种情况下，此字段可选项），并且type字段的值可以是ExternalName（如果没有，这字段可以有描述性的额外设置）。有效值包括“None”，空字符串（\"\"），和有效的IP地址。将其设置为“None”会使得这是一个“无虚拟IP”的“空头服务”，当直接端口连接优先于代理时尤其有用。只适用于类型ClusterIP、NodePort和LoadBalancer。如果在此字段被用于类型ExternalName的服务创建时失败，则创建失败。该字段在更新为类型ExternalName的服务时会被擦除。如果没有指定，则初始化为clusterIP字段。如果有指定，则客户端必须确保clusterIP[0]和clusterIP具有相同的值。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "externalIPs": {
                                                                      "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
                                                                      "descriptionCN": "外部IPs是一个包含哪些节点将接受此服务的IP地址列表。这些IP地址不是由Kubernetes管理的。用户负责确保流量到达具有该IP地址的节点。一个常见的例子是不在Kubernetes系统中的外部负载均衡器。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "externalName": {
                                                                      "description": "externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".",
                                                                      "descriptionCN": "外部名称是发现机制返回的作为此服务（如DNS CNAME记录）的外部参考。不会涉及代理。 必须是一个 lowercase RFC-1123 命名（https://tools.ietf.org/html/rfc1123），并且需要 `type` 属性为 \"ExternalName\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "externalTrafficPolicy": {
                                                                      "description": "externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.",
                                                                      "descriptionCN": "外部流量策略描述了节点在其中的一个服务的“对外部可见”地址（NodePorts，ExternalIPs和LoadBalancer IP）上接收的服务流量的分配方式。如果设置为\"本地\",代理将配置服务的方式，以假设外部负载平衡器将在节点之间处理服务流量的平衡，因此每个节点都将只向服务的本地端口交付流量，而不会伪装客户端源IP。错误发送到没有端口的节点的流量将被丢弃。默认值，“集群”，使用路由的标准行为对所有端点均匀分布（可能由拓扑和其他特性修改）。请注意，从集群内部的外部IP或负载均衡器IP发送的数据流总是得到\"集群\"的含义，但来自集群内部的NodePort的客户端发送的数据流量政策可能需要在选择节点时考虑。",
                                                                      "type": "string"
                                                                  },
                                                                  "healthCheckNodePort": {
                                                                      "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.",
                                                                      "descriptionCN": "健康检查节点端口为服务的健康检查节点端口。当类型设置为负载均衡且外部流量策略设置为本地时，此只适用于。如果指定，则在有效范围内，并未使用，则将使用。如果不指定，则自动分配值。外部系统（如负载均衡器）可以使用此端口确定给定节点是否承载了该服务的所有端点。当创建一个不需要此字段的服务时，创建将失败。此字段在更新服务以不再需要它（例如更改类型）时会被擦除。一旦设置后，无法进行更新。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "internalTrafficPolicy": {
                                                                      "description": "InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).",
                                                                      "descriptionCN": "内部交通政策描述了节点如何在ClusterIP上分配服务流量。如果设置为“本地”，代理将假设Pod只希望与该Pod在同一节点上的服务端口进行通信，如果没有本地端口，则丢弃流量。默认值是“Cluster”，使用路由的普遍行为（可能通过拓扑和其他特性进行修改）均匀地向所有端口广播。",
                                                                      "type": "string"
                                                                  },
                                                                  "ipFamilies": {
                                                                      "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.",
                                                                      "descriptionCN": "IPFamilies是一个IP家庭列表（例如IPv4，IPv6）。这个字段通常根据集群配置自动分配，而ipFamilyPolicy字段也可以。如果该字段手动指定，则请求的家庭在集群中可用，并且ipFamilyPolicy允许其使用；否则服务创建将失败。此字段是可变的：它可以添加或删除子网，但不能改变服务的主网段。有效值为\"IPv4\"和\"IPv6\"。此字段只适用于类型ClusterIP、NodePort和LoadBalancer的服务，并且只适用于\"无头\"服务。当更新服务类型为ExternalName时，该字段将被擦除。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "ipFamilyPolicy": {
                                                                      "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.",
                                                                      "descriptionCN": "IPFamilyPolicy 表示此服务所需或要求的双栈特性。如果没有值提供，该字段将被设置为 SingleStack。服务可以是 \"SingleStack\" (一个单 IP 家族), \"PreferDualStack\" (双栈配置的双 IP 家族集群或单 IP 家族集群)，或者 \"Require DualStack\" (双栈配置的双 IP 家族集群，否则失败)。ipFamilies 和 clusterIPs 字段取决于此字段的值。当更新服务类型为 ExternalName 时，该字段会被擦除。",
                                                                      "type": "string"
                                                                  },
                                                                  "loadBalancerClass": {
                                                                      "description": "loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.",
                                                                      "descriptionCN": "负载均衡器类是服务所属的负载均衡实现类。如果指定，此字段的值必须为标签样式标识符（可选前缀），例如“内部VIP”或“example.com内部VIP”。无前缀名称保留给最终用户。此字段只能在Service类型为\"LoadBalancer\"时设置。如果没有设置，通常通过云提供商集成使用，但应适用于任何默认实现。如果设置，则假设正在监视具有匹配类的服务。任何默认负载均衡实现（如云提供商）应忽略该字段。此字段只能在创建或更新Service到Type=\"LoadBalancer\"时设置。一旦设置，就不能改变。此字段将被删除，当服务更新到非\"LoadBalancer\"类型时。",
                                                                      "type": "string"
                                                                  },
                                                                  "loadBalancerIP": {
                                                                      "description": "Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations. Using it is non-portable and it may not support dual-stack. Users are encouraged to use implementation-specific annotations when available.",
                                                                      "descriptionCN": "仅适用于Service Type：LoadBalancer。此功能取决于云提供商是否支持在创建负载均衡器时指定loadBalancerIP。如果云提供商不支持该功能，则此字段将被忽略。已过时：此字段未被明确指定，其含义在实现中可能有所不同。使用它并不便携，且可能无法支持双栈。用户应根据可用的实现特定注解来使用它。",
                                                                      "type": "string"
                                                                  },
                                                                  "loadBalancerSourceRanges": {
                                                                      "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
                                                                      "descriptionCN": "如果平台支持并被指定，这将限制通过云提供商负载均衡器传输的流量。此字段将忽略云提供商不支持该功能的信息。\n更多信息：https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "ports": {
                                                                      "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "descriptionCN": "这个服务暴露的端口列表。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "port",
                                                                          "protocol"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "publishNotReadyAddresses": {
                                                                      "description": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
                                                                      "descriptionCN": "未准备好地址表明，处理服务端点的任何代理都应忽略准备/不准备的指示。设置此字段的主要用途是在StatefulSet的Headless服务中为Pod传播SRV DNS记录以进行 Peer Discovery。用于Service生成Endpoint和EndpointSlice资源的Kubernetes控制器将此理解为所有端点都被认为是“准备”的，即使Pod本身也并非如此。通过Endpoint或EndpointSlice资源消费Kubernetes生成的端点的代理可以安全地假设这种行为。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "selector": {
                                                                      "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
                                                                      "descriptionCN": "服务流量路由到带有标签键和值匹配此筛选器的Pod。如果为空或不存在，服务被假设有一个外部进程管理其端点，这将不会更改Kubernetes。只适用于类型为ClusterIP、NodePort和LoadBalancer。如果类型是ExternalName，则不适用。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/",
                                                                      "type": "object"
                                                                  },
                                                                  "sessionAffinity": {
                                                                      "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "descriptionCN": "支持 \"ClientIP\" 和 \"None\"。用于维持会话关联性。基于客户端 IP 实现会话关联性。必须是 ClientIP 或 None。默认为 None。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                                                                      "type": "string"
                                                                  },
                                                                  "sessionAffinityConfig": {
                                                                      "description": "sessionAffinityConfig contains the configurations of session affinity.",
                                                                      "descriptionCN": "\"sessionAffinityConfig\" 是一个配置项，它包含了 session affinity 的相关配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"
                                                                  },
                                                                  "type": {
                                                                      "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
                                                                      "descriptionCN": "类型决定了服务如何暴露。默认为ClusterIP。可选值包括ExternalName、ClusterIP、NodePort和LoadBalancer。\"ClusterIP\"分配一个用于负载平衡到端点的集群内部IP地址。端点由选择器确定，或者如果没有指定，由手动创建的Endpoint对象或EndpointSlice对象确定。如果clusterIP是“None”，没有虚拟IP并将其发布为一组端点，而不仅仅是虚拟IP。“NodePort”基于ClusterIP并为每台节点分配一个路由到与clusterIP相同端点的端口。“LoadBalancer”基于NodePort，并在当前云中创建外部负载均衡（如果支持）。 ExternalName将此服务重命名为给定的外部名称。其他字段对ExternalName服务不适用。更多信息：https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.ServiceStatus": {
                                                              "description": "ServiceStatus represents the current status of a service.",
                                                              "descriptionCN": "服务状态代表着一个服务的当前状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "Current service state",
                                                                      "descriptionCN": "当前服务状态",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "loadBalancer": {
                                                                      "description": "LoadBalancer contains the current status of the load-balancer, if one is present.",
                                                                      "descriptionCN": "负载均衡器包含当前的负载均衡状态，如果有则存在。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SessionAffinityConfig": {
                                                              "description": "SessionAffinityConfig represents the configurations of session affinity.",
                                                              "descriptionCN": "会话相关性配置表示会话关联配置。",
                                                              "properties": {
                                                                  "clientIP": {
                                                                      "description": "clientIP contains the configurations of Client IP based session affinity.",
                                                                      "descriptionCN": "客户端IP包含基于会话偏好的客户端IP配置。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ClientIPConfig"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.SleepAction": {
                                                              "description": "SleepAction describes a \"sleep\" action.",
                                                              "descriptionCN": "\"SleepAction\" 是一个 \"睡眠\" 动作的描述。",
                                                              "properties": {
                                                                  "seconds": {
                                                                      "description": "Seconds is the number of seconds to sleep.",
                                                                      "descriptionCN": "秒是睡眠的时间。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.StorageOSPersistentVolumeSource": {
                                                              "description": "Represents a StorageOS persistent volume resource.",
                                                              "descriptionCN": "代表存储OS持久卷资源。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是挂载的文件系统类型。必须是支持主机操作系统的文件系统类型。例如：\"ext4\", \"xfs\", \"ntfs\"。如果未指定，则被隐式推断为\"ext4\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "不带读写权限的默认设置为false（可读/可写）。在这里，将使用ReadOnly设置在VolumeMounts中。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                                                                      "descriptionCN": "秘密Ref指定了获取StorageOS API凭据的秘钥。如果没有指定，则默认值将尝试使用。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "volumeName": {
                                                                      "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                                                                      "descriptionCN": "存储OS卷的可读名称为volumeName。卷名只在命名空间内唯一。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeNamespace": {
                                                                      "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                                                                      "descriptionCN": "volumeNamespace指定了卷在StorageOS中的范围。如果没有namespace，则Pod的namespace将被使用。这使得Kubernetes命名空间的映射可以在 StorageOS 中进行更紧密的集成。设置VolumeName以任何名称来替换默认行为。如果您不使用存储在StorageOS中的命名空间，将其设置为\"default\"。存储在StorageOS中不存在的命名空间将在Service创建时自动创建。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.StorageOSVolumeSource": {
                                                              "description": "Represents a StorageOS persistent volume resource.",
                                                              "descriptionCN": "代表了存储OS持久性卷资源。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是挂载的文件系统的类型。必须支持主机的操作系统。例如，\"ext4\", \"xfs\", \"ntfs\"。如果没有被指定，会自动推断为\"ext4\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                                                                      "descriptionCN": "只读默认为false（可读写）。在这里，将只读设置为volumeMounts中的ReadOnly。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "secretRef": {
                                                                      "description": "secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
                                                                      "descriptionCN": "秘密Ref指定了用于获取StorageOS API凭据的秘密。如果没有指定，将尝试默认值。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
                                                                  },
                                                                  "volumeName": {
                                                                      "description": "volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
                                                                      "descriptionCN": "卷名是存储操作系统卷的可读名称。 卷名只在命名空间内唯一。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeNamespace": {
                                                                      "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
                                                                      "descriptionCN": "存储操作系统中的卷范围定义了卷的全局范围。如果没有指定namespace，那么Pod的namespace将被使用。这允许Kubernetes名称空间之间的镜像复制在StorageOS中以实现更紧密的集成。设置VolumeName为任何名称来覆盖默认行为。如果你不在StorageOS中使用命名空间，则将其设置为\"default\"。如果StorageOS不包含在其中，则会创建新的命名空间。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Sysctl": {
                                                              "description": "Sysctl defines a kernel parameter to be set",
                                                              "descriptionCN": "系统调用定义了一个 kernel 参数，用于设置。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name of a property to set",
                                                                      "descriptionCN": "房产名称",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "Value of a property to set",
                                                                      "descriptionCN": "房产价值设置的价值",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TCPSocketAction": {
                                                              "description": "TCPSocketAction describes an action based on opening a socket",
                                                              "descriptionCN": "TCP Socket Action描述了一个基于打开socket的行动",
                                                              "properties": {
                                                                  "host": {
                                                                      "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                                      "descriptionCN": "可选：连接到主机的名称，默认为Pod的IP。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                                      "descriptionCN": "在容器中访问的端口编号或名称。必须在1到65535的范围内。名称必须为IANA_SVC_NAME。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Taint": {
                                                              "description": "The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.",
                                                              "descriptionCN": "这个Taint附加在的节点，对任何不耐受该Taint的Pod有影响。",
                                                              "properties": {
                                                                  "effect": {
                                                                      "description": "Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                      "descriptionCN": "需要。taint对不适应的Pod的影响。有效的效应是NoSchedule、PreferNoSchedule和NoExecute。",
                                                                      "type": "string"
                                                                  },
                                                                  "key": {
                                                                      "description": "Required. The taint key to be applied to a node.",
                                                                      "descriptionCN": "对节点进行染毒的关键。\n\n中文翻译为：对节点进行染毒的关键。",
                                                                      "type": "string"
                                                                  },
                                                                  "timeAdded": {
                                                                      "description": "TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.",
                                                                      "descriptionCN": "时间添加代表添加的时间。它仅用于NoExecute taints。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "value": {
                                                                      "description": "The taint value corresponding to the taint key.",
                                                                      "descriptionCN": "对应于taint键的污染值。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Toleration": {
                                                              "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                              "descriptionCN": "这个容忍性装置可以接受任何匹配 triple 的 taint，使用匹配操作符 <operator>。",
                                                              "properties": {
                                                                  "effect": {
                                                                      "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                      "descriptionCN": "效果表示匹配的taint影响。空值意味着匹配所有taint影响。当指定时，允许的值是NoSchedule、PreferNoSchedule和NoExecute。",
                                                                      "type": "string"
                                                                  },
                                                                  "key": {
                                                                      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                      "descriptionCN": "关键值是容忍度适用的污染键。空意味着匹配所有污染键。如果键为空，则操作符必须为Exists; 这种组合意味着匹配所有值和所有键。",
                                                                      "type": "string"
                                                                  },
                                                                  "operator": {
                                                                      "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                      "descriptionCN": "操作符表示键与其值之间的关系。有效的操作符包括Exists和Equal。默认情况下，等于就是通配符，因此Pod可以容忍特定类别中的所有taints。",
                                                                      "type": "string"
                                                                  },
                                                                  "tolerationSeconds": {
                                                                      "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                      "descriptionCN": "容忍秒数表示必须有执行权的（否则此字段将被忽略）的耐受（必须为无执行权状态，否则该字段不被处理）。默认情况下，它没有设置，这意味着永远容忍这个污染（不会立即移除）。零和负值将被视为0（立即移除）。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "value": {
                                                                      "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                      "descriptionCN": "价值就是容忍度与之匹配的taint值。如果操作符是Exists，则其值应为空，否则只应为普通字符串。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TopologySelectorLabelRequirement": {
                                                              "description": "A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.",
                                                              "descriptionCN": "拓扑选择器要求是一个匹配给定标签的selector。这是一个alpha特性，可能会在未来发生变化。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "descriptionCN": "被选择器应用的标签键。",
                                                                      "type": "string"
                                                                  },
                                                                  "values": {
                                                                      "description": "An array of string values. One value must match the label to be selected. Each entry in Values is ORed.",
                                                                      "descriptionCN": "一个字符串数组。其中一个值必须匹配被选择的标签。 Values中的每个条目都是OR操作。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TopologySelectorTerm": {
                                                              "description": "A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
                                                              "descriptionCN": "拓扑选择器术语表示标签查询的结果。空或空白的拓扑选择器术语匹配没有对象。它们的要求是AND的。它提供了一个NodeSelectorTerm的功能子集，这是alpha特性，可能在未来改变。",
                                                              "properties": {
                                                                  "matchLabelExpressions": {
                                                                      "description": "A list of topology selector requirements by labels.",
                                                                      "descriptionCN": "标签下拓扑选择器的需求列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TopologySpreadConstraint": {
                                                              "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                                                              "descriptionCN": "拓扑扩展约束规定了如何在给定的拓扑中分散匹配的Pod。",
                                                              "properties": {
                                                                  "labelSelector": {
                                                                      "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.",
                                                                      "descriptionCN": "标签选择器用于查找匹配的Pods。根据这个标签选择器找到的Pod被计数来确定它们在相应拓扑域中的数量。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                                                                      "descriptionCN": "匹配标签键是一个包含一组 pod 标签键的集合，用于选择传播将在其中进行的 pods。这些键用于从 incoming pod 标签中查找值，那些 key-value 标签通过 AND 操作与 labelSelector 配合来选择接收的 pod 中的组。对于 incoming pod，相同的键是不允许存在的。 MatchLabelKeys 不能在 LabelSelector 不设置的情况下设置。不在 incoming pod 标签中的键将被忽略。一个空或 null 的列表表示仅对 labelSelector 进行匹配。\n\n这是一个 beta 版本字段，并要求启用 MatchLabelKeysInPodTopologySpread 功能 gate。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "maxSkew": {
                                                                      "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
                                                                      "descriptionCN": "MaxSkew描述了 Pod 可能不均匀分布的程度。当 `whenUnsatisfiable=DoNotSchedule` 时，目标拓扑中匹配的Pod数量与全局最小值之间的最大允许差异为：当 GlobalMinimum = MinDomains时，全球最小值为：在可选域中匹配的Pod的数量至少为零，如果可选域的数量小于 MinDomains，则全局最小值为零。例如，在一个 3 区域集群中，MaxSkew 设置为 1，且具有相同标签Selector 的 pod 在此实例中的分布如下：在这种情况下，全球最小值为 1。 | zone1 | zone2 | zone3 | | P P  |  P P  |   P   | - 如果 MaxSkew 是 1，则只有从 zone3 中接收到的Pod可以被安排到 zone1 或 zone2 上以变为 (3-1)；将它安排到 zone1 或 zone2 会使实际偏差（zone1 或 zone2）超出 MaxSkew(1)。 - 如果 MaxSkew 是 2，则任何区域都可以接收。 当 `whenUnsatisfiable=ScheduleAnyway` 时，用于给满足该条件的拓扑更高的优先级。这是一个必填字段，默认值为 1 和不允许 0。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "minDomains": {
                                                                      "description": "MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
                                                                      "descriptionCN": "最小子域指示一个至少包含合法域名的数量。当匹配拓扑键的合格域名数量小于minDomains时，Pod Topology Spread将“全局最低”视为0，并执行Skew计算。当匹配拓扑键的合格域名数量等于或大于minDomains时，此值对调度无影响。因此，当合格域名数量小于minDomains时，调度器不会为这些域名分配超过maxSkew Pods。\n\n例如，在3个区间的集群中，MaxSkew设置为2，MinDomains设置为5，与2/2/2标签选择器相同的P pods的数量少于5（MinDomains），因此“全局最低”被处理为0。在这种情况下，无法安排与之匹配的标签选择器的新Pod，因为计算偏移量将变为3（3-0）如果新的Pod被部署到任何一个区域，则会违反MaxSkew。\n\n这是一个 beta 特性，需要启用 MinDomainsInPodTopologySpread 功能组才能启用（默认已启用）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "nodeAffinityPolicy": {
                                                                      "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                                                      "descriptionCN": "NodeAffinityPolicy表明我们如何在计算Pod拓扑扩散偏斜时处理Pod的节点归属策略。选项包括：- 确保：只有匹配nodeAffinity/nodeSelector的节点才会被包含在计算中。- 忽略：nodeAffinity/nodeSelector会被忽略。所有节点都会被包含在计算中。\n\n如果此值为nil，其行为与确定政策相当。这是NodeInclusionPolicyInPodTopologySpread功能开关上的beta级特性默认设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeTaintsPolicy": {
                                                                      "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                                                      "descriptionCN": "节点毒性政策指示我们在计算Pod拓扑扩散偏斜时如何对待节点毒性。选项是： - 热心：没有毒性的节点，以及对于可能有容忍度的被污染节点，都包含在内。 - 忽略：节点毒性被忽略。所有节点都包含。\n\n如果这个值为nil，则行为与忽略策略相同。这是NodeInclusionPolicyInPodTopologySpread功能旗的 beta 阶段默认设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "topologyKey": {
                                                                      "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
                                                                      "descriptionCN": "拓扑键是节点标签的关键。具有该关键值且值相等的节点被认为是同一拓扑中的。我们将每个<key, value>视为一个“桶”，试图在每个桶中均衡地分配Pod数量。定义域是一种特定的拓扑实例。此外，我们将满足nodeAffinityPolicy和nodeTaintsPolicy要求的域定义为可选域。例如，如果拓扑键是\"kubernetes.io/hostname\"，每个Node就是该拓扑的域。如果拓扑键是\"topology.kubernetes.io/zone\"，每个zone就是该拓扑的域。这是一个必填字段。",
                                                                      "type": "string"
                                                                  },
                                                                  "whenUnsatisfiable": {
                                                                      "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
                                                                      "descriptionCN": "当满足传播约束时，如何处理未满足的Pod。 - 不计划（默认）告诉调度器不计划它。 - 定期安排告诉调度器将Pod安排在任何位置，但优先考虑有助于减少偏差的拓扑结构。\n一个Pod被视为未满足，如果和只有当该Pod中每种可能的节点分配都违反“最大偏差”拓扑结构时。例如，在3区域集群中，最大偏差设置为1，具有与zone3/1/1相同标签选择器分布的Pod可以被配置为3/2/1（zone3/1/2）作为实际偏差（zone3/1/2）的值等于最大偏差1）。换句话说，该集群仍然可能失衡，但调度器不会使其变得更不平衡。这是必填字段。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TypedLocalObjectReference": {
                                                              "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
                                                              "descriptionCN": "类型局部对象引用包含了足够的信息，让你可以在同一个命名空间中定位到该类型的引用的对象。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                                                                      "descriptionCN": "APIGroup是被引用的资源所在的组。如果没有指定APIGroup，则指定的Kind必须在核心API组中。对于其他第三方类型，APIGroup是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the type of resource being referenced",
                                                                      "descriptionCN": "善良是一种被引用的资源类型。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced",
                                                                      "descriptionCN": "名称是被引用的资源的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.TypedObjectReference": {
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                                                                      "descriptionCN": "APIGroup是引用的资源所在的组。如果没有指定APIGroup，则需要指定核心API组中的指定Kind类型。对于其他第三方类型，必须指定APIGroup。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the type of resource being referenced",
                                                                      "descriptionCN": "善良是一种被引用的资源类型。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced",
                                                                      "descriptionCN": "\"Name is the name of resource being referenced\" 的中文翻译为 \"名称是被参考的资源的名字\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                                                      "descriptionCN": "资源引用的命名空间是必需的。当指定一个命名空间时，需要在被引用的命名空间中指定一个名为ReferenceGrant的gateway.networking.k8s.io/对象，以便允许该命名空间的所有者接受引用。参考指南详细介绍了 ReferenceGrant 的详细信息（Alpha）。这个字段要求 CrossNamespaceVolumeDataSource 特性 gate 为启用状态。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.Volume": {
                                                              "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                                                              "descriptionCN": "体积代表了一个名为的卷在Pod中的命名卷，它可以通过Pod中的任何容器访问。",
                                                              "properties": {
                                                                  "awsElasticBlockStore": {
                                                                      "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "descriptionCN": "AWS Elastic Block Store（简称EBS）是与Kubernetes集群中的主机机器上的kubelet设备相连的一个AWS Disk资源。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
                                                                  },
                                                                  "azureDisk": {
                                                                      "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                                                      "descriptionCN": "AzureDisk 代表主机上的 Azure 数据磁盘镜像并绑定到 Pod 上。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
                                                                  },
                                                                  "azureFile": {
                                                                      "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                                                      "descriptionCN": "Azure文件代表在主机上挂载的Azure File Service，以及将挂载到Pod上的绑定磁盘。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
                                                                  },
                                                                  "cephfs": {
                                                                      "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                                                      "descriptionCN": "CephFS代表主机上共享pod生命周期的Ceph文件系统映射。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
                                                                  },
                                                                  "cinder": {
                                                                      "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "descriptionCN": "cinder代表Kubernetes节点机器上的一个cinder卷。更多信息可以在：https://examples.k8s.io/mysql-cinder-pd/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
                                                                  },
                                                                  "configMap": {
                                                                      "description": "configMap represents a configMap that should populate this volume",
                                                                      "descriptionCN": "配置映射表示应为此卷启用的配置映射。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
                                                                  },
                                                                  "csi": {
                                                                      "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
                                                                      "descriptionCN": "容器存储接口（Container Storage Interface，简称Csi）代表由某些外部Csi驱动程序处理的临时存储。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
                                                                  },
                                                                  "downwardAPI": {
                                                                      "description": "downwardAPI represents downward API about the pod that should populate this volume",
                                                                      "descriptionCN": "下降API代表该Pod应该填充的pod的向下API。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
                                                                  },
                                                                  "emptyDir": {
                                                                      "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "descriptionCN": "\"emptyDir\" 是一个临时目录，共享 pod 的生命周期。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
                                                                  },
                                                                  "ephemeral": {
                                                                      "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
                                                                      "descriptionCN": "瞬态表示一个由集群存储驱动程序处理的体积。这个体积的生命周期与定义它的Pod有关，它会在Pod启动前创建，并在Pod移除后删除。\n\n如果：a)只在Pod运行时需要使用此卷，b)正常卷（如从快照恢复或容量跟踪）的特性需要，c)存储驱动程序是通过存储类指定的，d)存储驱动程序支持通过持久性VolumeClaim（关于这种类型卷和PersistentVolumeClaim的更多信息）动态提供卷。\n\n使用持久性VolumeClaim或供应商特定的API来持久化超过单个Pod生命周期的轻量级瞬态卷。\n\n如果 CSI 驱动器打算以这种方式使用，则可以使用 Lightweight Ephemeral Volumes 类型的存储驱动程序 - 请参阅该驱动器的文档以获取更多关于该类型卷与 PersistentVolumeClaim 的连接信息。\n\nPod可以在同时使用这两种瞬态卷和持久卷的情况下。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
                                                                  },
                                                                  "fc": {
                                                                      "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                                                      "descriptionCN": "FC代表一个Fibre Channel资源，它被附加到Kubelet的主机机器上，并且暴露给Pod。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
                                                                  },
                                                                  "flexVolume": {
                                                                      "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
                                                                      "descriptionCN": "弹性体积代表了一个通用的体积资源，它使用exec插件进行分配和加载。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
                                                                  },
                                                                  "flocker": {
                                                                      "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                                                                      "descriptionCN": "Flocker表示 Kubernetes 控制服务正在运行时，将Flocker卷附加到主机机器上的一个 Flocker 负载均衡器。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
                                                                  },
                                                                  "gcePersistentDisk": {
                                                                      "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "descriptionCN": "GCE Persistent Disk是Kubernetes中的一个持久磁盘资源，它与kubelet主机绑定，并暴露给Pod。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
                                                                  },
                                                                  "gitRepo": {
                                                                      "description": "gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
                                                                      "descriptionCN": "GitRepository代表的是特定修订的git仓库。DEPRECATED：GitRepository已经被废弃。要为容器提供带有git仓库的container，将一个EmptyDir挂载到一个InitContainer中，该InitContainer通过git从repo克隆代码，然后将EmptyDir挂载到Pod的容器中。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
                                                                  },
                                                                  "glusterfs": {
                                                                      "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
                                                                      "descriptionCN": "glusterfs是一种在主机上实现的GlusterFS挂载，它共享容器生命周期。更多信息：https://examples.k8s.io/volumes/glusterfs/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
                                                                  },
                                                                  "hostPath": {
                                                                      "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "descriptionCN": "主机路径代表主机机器上直接暴露给容器的预先存在的文件或目录。这通常用于系统代理或其他特权项，这些组件允许看到主机机器。大多数容器都不需要这个。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
                                                                  },
                                                                  "iscsi": {
                                                                      "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
                                                                      "descriptionCN": "iscsi代表一个ISCSI磁盘资源，被主机机器的kubelet附加，并暴露给pod。更多信息：https://examples.k8s.io/volumes/iscsi/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
                                                                  },
                                                                  "name": {
                                                                      "description": "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "descriptionCN": "卷名。必须是一个DNS_LABEL并且在Pod中是唯一的。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                      "type": "string"
                                                                  },
                                                                  "nfs": {
                                                                      "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "descriptionCN": "NFS表示主机上的一个NFS挂载，它共享Pod的生命周期。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
                                                                  },
                                                                  "persistentVolumeClaim": {
                                                                      "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "descriptionCN": "持久卷申请者代表在一个相同的命名空间中的一个持久卷请求。更多信息：https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
                                                                  },
                                                                  "photonPersistentDisk": {
                                                                      "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "光子持久盘代表了一个基于Kubernetes的光子控制器中的持久磁盘，该存储设备被附加并挂载在主机机器上。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
                                                                  },
                                                                  "portworxVolume": {
                                                                      "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "portworxVolume 是一个 portworx 驱动挂载在 kubelet 主机上的 volume。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
                                                                  },
                                                                  "projected": {
                                                                      "description": "projected items for all in one resources secrets, configmaps, and downward API",
                                                                      "descriptionCN": "项目中所有资源的秘密、配置地图和下级API",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
                                                                  },
                                                                  "quobyte": {
                                                                      "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                                                      "descriptionCN": "Quobyte代表在主机上共享Pod生命周期的Quobyte挂载点",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
                                                                  },
                                                                  "rbd": {
                                                                      "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
                                                                      "descriptionCN": "rbd代表了在主机上共享pod生命周期的Rados Block Device。更多信息：https://examples.k8s.io/volumes/rbd/README.md",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
                                                                  },
                                                                  "scaleIO": {
                                                                      "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                                                      "descriptionCN": " ScaleIO 是一种 ScaleIO 可靠持久卷在 Kubernetes 控制节点上的绑定和挂载。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
                                                                  },
                                                                  "secret": {
                                                                      "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                      "descriptionCN": "秘密代表一个应该填充此卷的秘钥。更多信息：https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
                                                                  },
                                                                  "storageos": {
                                                                      "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                                                                      "descriptionCN": "存储OS代表一个存储OS挂载在Kubernetes节点上的StorageOS卷。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
                                                                  },
                                                                  "vsphereVolume": {
                                                                      "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                                                      "descriptionCN": "VSphere Volume表示与kubelet主机上的vSphere卷关联并挂载的vSphere卷",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VolumeDevice": {
                                                              "description": "volumeDevice describes a mapping of a raw block device within a container.",
                                                              "descriptionCN": "卷积设备描述了一个容器内原始块设备的映射。",
                                                              "properties": {
                                                                  "devicePath": {
                                                                      "description": "devicePath is the path inside of the container that the device will be mapped to.",
                                                                      "descriptionCN": "设备路径是在容器内部指定的设备将被映射到的路径。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name must match the name of a persistentVolumeClaim in the pod",
                                                                      "descriptionCN": "名字必须与pod中的持久性卷积云 claim 的名称匹配。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VolumeMount": {
                                                              "description": "VolumeMount describes a mounting of a Volume within a container.",
                                                              "descriptionCN": "卷积磁盘描述的是在一个容器内部放置卷积磁盘的安装方式。",
                                                              "properties": {
                                                                  "mountPath": {
                                                                      "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                                                      "descriptionCN": "容器内的路径，不应包含冒号：",
                                                                      "type": "string"
                                                                  },
                                                                  "mountPropagation": {
                                                                      "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                                                                      "descriptionCN": "挂载传播决定了从主机到容器以及反过来的挂载方式。如果没有设置，MountPropagationNone被使用。这个字段在1.10版本是beta状态。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "This must match the Name of a Volume.",
                                                                      "descriptionCN": "这必须匹配书籍的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "readOnly": {
                                                                      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                                                                      "descriptionCN": "如果为真，只读。否则可写（假或未定义）。默认为假。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "subPath": {
                                                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                                                      "descriptionCN": "容器内的体积路径。默认为 \"\" (容器的根).",
                                                                      "type": "string"
                                                                  },
                                                                  "subPathExpr": {
                                                                      "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                                                                      "descriptionCN": "容器的体积中的扩展路径。其行为与SubPath类似，但环境变量引用$(VAR_NAME)$使用容器的环境。默认为\"\"（容器的根）。SubPathExpr和SubPath是互斥的。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VolumeNodeAffinity": {
                                                              "description": "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.",
                                                              "descriptionCN": "VolumeNodeAffinity定义了约束，限制这个卷的访问节点。",
                                                              "properties": {
                                                                  "required": {
                                                                      "description": "required specifies hard node constraints that must be met.",
                                                                      "descriptionCN": "所需的硬节点约束必须满足。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VolumeProjection": {
                                                              "description": "Projection that may be projected along with other supported volume types",
                                                              "descriptionCN": "可能与其他支持体积类型的投影",
                                                              "properties": {
                                                                  "clusterTrustBundle": {
                                                                      "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field of ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the combination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written into the pod filesystem.  Esoteric PEM features such as inter-block comments and block headers are stripped.  Certificates are deduplicated. The ordering of certificates within the file is arbitrary, and Kubelet may change the order over time.",
                                                                      "descriptionCN": "ClusterTrustBundle允许Pod访问`.spec.trustBundle`字段的ClusterTrustBundle对象。该功能是通过ClusterTrustBundleProjection特征门限激活的。\n\nClusterTrustBundle的对象可以以名称或签名名和标签选择器的组合方式被选中。\n\nKubelet对Pod文件中的PEM内容进行主动规范化。例如，互相关注的PEM特征、块头部等不敏感的PEM特性都被删除。文件内证书的数量是随机排序的，并且随着时间的推移，Kubelet可能会改变顺序。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ClusterTrustBundleProjection"
                                                                  },
                                                                  "configMap": {
                                                                      "description": "configMap information about the configMap data to project",
                                                                      "descriptionCN": "配置Map关于configMap数据到项目的详细信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection"
                                                                  },
                                                                  "downwardAPI": {
                                                                      "description": "downwardAPI information about the downwardAPI data to project",
                                                                      "descriptionCN": "向下API的信息关于项目的向下API数据",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"
                                                                  },
                                                                  "secret": {
                                                                      "description": "secret information about the secret data to project",
                                                                      "descriptionCN": "关于项目秘密数据的详细信息",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection"
                                                                  },
                                                                  "serviceAccountToken": {
                                                                      "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                                                      "descriptionCN": "服务账户令牌是关于serviceAccountToken数据的项目信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VolumeResourceRequirements": {
                                                              "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                                                              "descriptionCN": "卷积资源需求描述卷积区域的存储资源需求。",
                                                              "properties": {
                                                                  "limits": {
                                                                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "限制描述了允许的计算资源的最大量。更多信息：https://kubernetes.io/docs/concepts/configure/resource-constrained-containers/",
                                                                      "type": "object"
                                                                  },
                                                                  "requests": {
                                                                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                                      "descriptionCN": "请求描述了所需的最小计算资源数量。如果没有请求，则默认为限制（如果被明确指定），否则为实现定义的值。请求不能超过限制。更多信息：https://kubernetes.io/docs/concepts/configuration manage-resources-containers/",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
                                                              "description": "Represents a vSphere volume resource.",
                                                              "descriptionCN": "代表vSphere卷资源。",
                                                              "properties": {
                                                                  "fsType": {
                                                                      "description": "fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                                                      "descriptionCN": "文件系统类型是挂载的文件系统类型。必须支持主机操作系统所使用的文件系统类型。例如：“ext4”，“xfs”，“ntfs”。如果未指定，则自动推断为“ext4”。\n  \n注意：请确保提供的信息是正确的，否则可能会导致错误的结果。",
                                                                      "type": "string"
                                                                  },
                                                                  "storagePolicyID": {
                                                                      "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                                                      "descriptionCN": "存储策略ID是与StoragePolicyName关联的存储策略Base Management (SPBM) 角色 ID。",
                                                                      "type": "string"
                                                                  },
                                                                  "storagePolicyName": {
                                                                      "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                                                                      "descriptionCN": "存储策略名称是基于管理的存储政策（SPBM）的命名规范。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumePath": {
                                                                      "description": "volumePath is the path that identifies vSphere volume vmdk",
                                                                      "descriptionCN": "文件路径是指vSphere卷镜像的路径，即.vmdk文件所在的目录。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
                                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                              "descriptionCN": "所有匹配WeightedPodAffinityTerm字段的权重加总，以找到最优先的节点。",
                                                              "properties": {
                                                                  "podAffinityTerm": {
                                                                      "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                      "descriptionCN": "需要。与其对应的权重相关联的播客引力术语。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
                                                                  },
                                                                  "weight": {
                                                                      "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                      "descriptionCN": "配对对应的PodAffinityTerm的权重，范围在1-100。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
                                                              "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
                                                              "descriptionCN": "WindowsSecurityContextOptions 包含 Windows 特定的选项和凭据。",
                                                              "properties": {
                                                                  "gmsaCredentialSpec": {
                                                                      "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                                                      "descriptionCN": "GMSACredentialSpec 是 GMSA 推荐者 Webhook（https://github.com/kubernetes-sigs/windows-gmsa）中将 GMSA 资源描述中的内容合并到 GMSA 资源描述名字段中的地方。",
                                                                      "type": "string"
                                                                  },
                                                                  "gmsaCredentialSpecName": {
                                                                      "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                                                      "descriptionCN": "GMSACredentialSpecName 是使用 GMSA 密钥策略的资格状名。",
                                                                      "type": "string"
                                                                  },
                                                                  "hostProcess": {
                                                                      "description": "HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.",
                                                                      "descriptionCN": "主机进程确定容器是否应该运行为\"主机进程\"容器。Pod的所有容器必须具有相同的有效主机进程值（不允许混合主机进程和非主机进程）。此外，如果主机进程为真，则主机网络也应设置为真。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "runAsUserName": {
                                                                      "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                                                      "descriptionCN": "在Windows上运行容器进程的入口点。如果没有指定，将默认设置为来自图像元数据中的用户。如果同时在安全上下文中设置，使用安全性上下文设置的值将优先于使用PodSecurityContext设置的值。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.Endpoint": {
                                                              "description": "Endpoint represents a single logical \"backend\" implementing a service.",
                                                              "descriptionCN": "端点代表一个实现服务的单一逻辑“后端”。",
                                                              "properties": {
                                                                  "addresses": {
                                                                      "description": "addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100. These are all assumed to be fungible and clients may choose to only use the first element. Refer to: https://issue.k8s.io/106267",
                                                                      "descriptionCN": "这个端点的地址。此字段的内容根据对应的EndpointSlice地址Type字段进行解释。消费者必须在自己的能力范围内处理不同类型的地址。这些都假设是可互换的，客户端可以选择只使用第一个元素。参考：https://issue.k8s.io/106267",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "conditions contains information about the current status of the endpoint.",
                                                                      "descriptionCN": "条件包含有关当前端点状态的信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointConditions"
                                                                  },
                                                                  "deprecatedTopology": {
                                                                      "description": "deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.",
                                                                      "descriptionCN": "已废弃的拓扑信息是v1beta1 API的一部分。这个字段已经被过时，当v1beta1 API被删除（至少在kubernetes v1.24之前）时将被移除。虽然该字段可以包含值，但不能通过v1 API进行写入，任何试图写入它都会被忽略。拓扑信息可以从zone和nodeName字段中找到。",
                                                                      "type": "object"
                                                                  },
                                                                  "hints": {
                                                                      "description": "hints contains information associated with how an endpoint should be consumed.",
                                                                      "descriptionCN": "\"hints\"指的是关于如何使用端点的信息。",
                                                                      "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointHints"
                                                                  },
                                                                  "hostname": {
                                                                      "description": "hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.",
                                                                      "descriptionCN": "此端口的主机名。这个字段可能被服务端消费者用来区分每个端点（例如，在DNS名称中）。使用相同主机名的多个端点应被视为可重用的（例如，DNS中的多个A值）。必须为小写，并通过DNS标签（RFC 1123）验证。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeName": {
                                                                      "description": "nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node.",
                                                                      "descriptionCN": "节点名代表这个Endpoint所托管的Node的名字。这可以用来确定端点在节点内部的位置。",
                                                                      "type": "string"
                                                                  },
                                                                  "targetRef": {
                                                                      "description": "targetRef is a reference to a Kubernetes object that represents this endpoint.",
                                                                      "descriptionCN": "目标引用是指代表这个端点的Kubernetes对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "zone": {
                                                                      "description": "zone is the name of the Zone this endpoint exists in.",
                                                                      "descriptionCN": "区域名称是这个端点存在的zone。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.EndpointConditions": {
                                                              "description": "EndpointConditions represents the current condition of an endpoint.",
                                                              "descriptionCN": "端点条件代表了端点的当前状态。",
                                                              "properties": {
                                                                  "ready": {
                                                                      "description": "ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be \"true\" for terminating endpoints, except when the normal readiness behavior is being explicitly overridden, for example when the associated Service has set the publishNotReadyAddresses flag.",
                                                                      "descriptionCN": "\"ready\" 表示这个端点准备好接收流量，根据管理端的系统设置。nil 值表示未知状态。在大多数情况下，消费者应将这种未知的状态解释为准备就绪。出于兼容性原因，除非当正常准备行为被明确超时（例如，当关联的服务设置了 publishNotReadyAddresses 标志），否则 ready 总是不应该被设置为 \"true\"。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "serving": {
                                                                      "description": "serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition.",
                                                                      "descriptionCN": "服务和准备状态相同，只是取决于端点的终止状态。这种情况应设置为true，当端点是终止状态时。如果为nil，则消费者应该等待准备好状态。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "terminating": {
                                                                      "description": "terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating.",
                                                                      "descriptionCN": "终止表明这是端点的终止。一个nil值表示未知的状态。消费者应理解这个未知状态意味着端点没有终止。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.EndpointHints": {
                                                              "description": "EndpointHints provides hints describing how an endpoint should be consumed.",
                                                              "descriptionCN": "EndpointHints提供描述如何端点应被消费的指示。",
                                                              "properties": {
                                                                  "forZones": {
                                                                      "description": "forZones indicates the zone(s) this endpoint should be consumed by to enable topology aware routing.",
                                                                      "descriptionCN": "\"forZones\" 表示这个 endpoint 应该被消费的区域，以启用拓扑感知路由。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.discovery.v1.ForZone"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.EndpointPort": {
                                                              "description": "EndpointPort represents a Port used by an EndpointSlice",
                                                              "descriptionCN": "端口标识符代表一个EndpointSlice使用的端口。",
                                                              "properties": {
                                                                  "appProtocol": {
                                                                      "description": "The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax. Valid values are either:\n\n* Un-prefixed protocol names - reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).\n\n* Kubernetes-defined prefixed names:\n  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-\n  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455\n  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455\n\n* Other protocols should use implementation-defined prefixed names such as mycompany.com/my-custom-protocol.",
                                                                      "descriptionCN": "此端口的协议应用。用于实现它们理解的更丰富的行为。该字段遵循标准Kubernetes标签语法。有效值包括：\n\n* 不带前缀的协议名称 - 为IANA标准服务名称保留（根据RFC-6335和https://www.iana.org/assignments/service-names）。 \n* Kubernetes定义的前缀命名：\n  * 'kubernetes.io/h2c' - HTTP/2先前知识在明文中的使用，参考 https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-。\n  * 'kubernetes.io/ws' - WebSocket在明文中的使用，参考 https://www.rfc-editor.org/rfc/rfc6455。\n  * 'kubernetes.io/wss' -WebSocket使用TLS进行明文连接，参考 https://www.rfc-editor.org/rfc/rfc6455。\n\n其他协议应使用实现自定义前缀命名，如mycompany.com/my-custom-protocol。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name represents the name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is derived from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.",
                                                                      "descriptionCN": "名称代表这个端口。endpointslice中的所有端口都必须有一个唯一的名称。如果EndpointSlice源自Kubernetes服务，这对应于Service。ports[].name。名称可以是空字符串或通过DNS_LABEL验证： * 必须不超过63个字符长。 * 必须由小写字母、数字和下划线组成。 * 必须以字母开始并以字母结束。默认为空字符串。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "port represents the port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.",
                                                                      "descriptionCN": "端口代表endpoint的端口号。如果没有指定，端口是不受限制的，并且必须在特定消费者的情况下解释。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "protocol represents the IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.",
                                                                      "descriptionCN": "这个端口的协议代表了该端口的IP协议。必须是UDP，TCP或SCTP。默认的是TCP。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.EndpointSlice": {
                                                              "description": "EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.",
                                                              "descriptionCN": "EndpointSlice 表示一个实现服务的端点子集。对于给定的服务，可能存在多个 EndpointSlice 对象，由标签选择，这些对象必须合并才能获得完整的端点集合。",
                                                              "properties": {
                                                                  "addressType": {
                                                                      "description": "addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.",
                                                                      "descriptionCN": "地址类型指定了这个EndpointSlice携带的地址类型。在这个slice中的所有地址都必须是相同的类型。这个字段在创建后是不可变的。目前支持的地址类型包括：* IPv4：代表IPv4地址。* IPv6：代表IPv6地址。* FQDN：代表完全限定域名。",
                                                                      "type": "string"
                                                                  },
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化表示形式。服务器应该将识别的格式转换为内部值的最新版本，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "endpoints": {
                                                                      "description": "endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.",
                                                                      "descriptionCN": "结束点是这个切片中的唯一端点列表。每个切片最多可以包含1000个端点。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.discovery.v1.Endpoint"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示这个对象所代表的 REST 资源的一种字符串值。服务器可以从客户端向提交请求的端点推断出这种类型。无法更新。使用 CamelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "ports": {
                                                                      "description": "ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.",
                                                                      "descriptionCN": "\"ports\"定义了每个端点在这个切片中的网络端口列表。每个端口都必须有唯一的名称。当ports为空时，它表示没有被定义的端口。当一个端口被定义为一个nil值的端口时，它表示所有的端口。这个切片可以包含最多100个端口。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointPort"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.EndpointSliceList": {
                                                              "description": "EndpointSliceList represents a list of endpoint slices",
                                                              "descriptionCN": "EndpointSliceList表示一个列表，其中包含 Endpoint Slice。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示的对象的可变模型。服务器应该将识别的模式转换为内部的最新值，如果接受不到未知的值，则拒绝。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of endpoint slices",
                                                                      "descriptionCN": "Items 是endpoint slice 的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.discovery.v1.EndpointSlice"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示这个对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求的端点来推测。不能被更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata.",
                                                                      "descriptionCN": "标准元数据列表。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.discovery.v1.ForZone": {
                                                              "description": "ForZone provides information about which zones should consume this endpoint.",
                                                              "descriptionCN": "ForZone提供了关于哪些区域应该消费这个端点的信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name represents the name of the zone.",
                                                                      "descriptionCN": "\"name\"代表该区域的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.events.v1.Event": {
                                                              "description": "Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system. Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
                                                              "descriptionCN": "事件是描述系统中某处发生的事件报告。它通常表示系统的状态变化。事件的保留时间有限，触发和消息可能随着时间而演变。事件消费者不应依赖给定Reason反映的一致底层触发原因的事件发生的时间或事件继续存在的原因的持续存在。事件应被视为信息、尽力和补充数据。",
                                                              "properties": {
                                                                  "action": {
                                                                      "description": "action is what action was taken/failed regarding to the regarding object. It is machine-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
                                                                      "descriptionCN": "行动是针对相关对象采取的行动。它是机器可读的。对于新的事件，此字段不能为空；它可以最多有128个字符。",
                                                                      "type": "string"
                                                                  },
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的版本化结构。服务器应将识别的 schema 转换为内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "deprecatedCount": {
                                                                      "description": "deprecatedCount is the deprecated field assuring backward compatibility with core.v1 Event type.",
                                                                      "descriptionCN": "该字段是core.v1 Event类型的 deprecated 属性，确保了与 core.v1 核心事件类型兼容。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "deprecatedFirstTimestamp": {
                                                                      "description": "deprecatedFirstTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.",
                                                                      "descriptionCN": "已过时的FirstTimestamp字段确保了与core.v1事件类型的兼容性。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "deprecatedLastTimestamp": {
                                                                      "description": "deprecatedLastTimestamp is the deprecated field assuring backward compatibility with core.v1 Event type.",
                                                                      "descriptionCN": "“deprecatedLastTimestamp” 是一个已过时的字段，它保证了与 core.v1 Event 类型的原始兼容性。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "deprecatedSource": {
                                                                      "description": "deprecatedSource is the deprecated field assuring backward compatibility with core.v1 Event type.",
                                                                      "descriptionCN": "已经废弃的`deprecatedSource`字段确保了与核心.v1 Event类型兼容性。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
                                                                  },
                                                                  "eventTime": {
                                                                      "description": "eventTime is the time when this Event was first observed. It is required.",
                                                                      "descriptionCN": "事件时间是指这个事件第一次被观察到的时间。这是必需的。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示此对象所代表的 REST 资源的字符串值。服务器可能根据客户端向其提交请求的端点推断出这个值。不能被更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "note": {
                                                                      "description": "note is a human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.",
                                                                      "descriptionCN": "注释是关于这个操作状态的可读文字描述。笔记的最大长度为1KB，但应准备好处理最大可达64KB的数据。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason is why the action was taken. It is human-readable. This field cannot be empty for new Events and it can have at most 128 characters.",
                                                                      "descriptionCN": "原因在于采取了行动。它是可读的。这个字段不能为空对于新的事件，最多可以有128个字符。",
                                                                      "type": "string"
                                                                  },
                                                                  "regarding": {
                                                                      "description": "regarding contains the object this Event is about. In most cases it's an Object reporting controller implements, e.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.",
                                                                      "descriptionCN": "关于这个事件，我们关注的对象是这个Event。在大多数情况下，这可能是一个Object报告控制器（例如ReplicaSetController）实现的，它会触发这个事件，因为其行为对ReplicaSet对象的一些更改作出响应。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "related": {
                                                                      "description": "related is the optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.",
                                                                      "descriptionCN": "与对象相关是更复杂的操作的可选次要对象。例如，关于对象触发创建或删除相关的对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
                                                                  },
                                                                  "reportingController": {
                                                                      "description": "reportingController is the name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`. This field cannot be empty for new Events.",
                                                                      "descriptionCN": "事件报告控制器是此事件的发出者，例如 `kubernetes.io/kubelet`。对于新的事件，这个字段不能为空。",
                                                                      "type": "string"
                                                                  },
                                                                  "reportingInstance": {
                                                                      "description": "reportingInstance is the ID of the controller instance, e.g. `kubelet-xyzf`. This field cannot be empty for new Events and it can have at most 128 characters.",
                                                                      "descriptionCN": "实例名是控制器实例的ID，例如`kubelet-xyzf`。对于新的事件，这个字段不能为空，最多可以有128个字符。",
                                                                      "type": "string"
                                                                  },
                                                                  "series": {
                                                                      "description": "series is data about the Event series this event represents or nil if it's a singleton Event.",
                                                                      "descriptionCN": "系列是事件系列，这个事件代表或为nil，如果它是单例事件。",
                                                                      "$ref": "#/definitions/io.k8s.api.events.v1.EventSeries"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is the type of this event (Normal, Warning), new types could be added in the future. It is machine-readable. This field cannot be empty for new Events.",
                                                                      "descriptionCN": "事件类型为这种事件（正常，警告）的类型。未来可能会添加新的类型。它可以被机器读取。对于新的事件，这个字段不能为空。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.events.v1.EventList": {
                                                              "description": "EventList is a list of Event objects.",
                                                              "descriptionCN": "事件列表是一个包含Event对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示形式的版本化schema。服务器应将识别的 schema 转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of schema objects.",
                                                                      "descriptionCN": "items 是一个 schema 对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.events.v1.Event"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求时提交给端点的信息推测出此值。无法更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.events.v1.EventSeries": {
                                                              "description": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in \"k8s.io/client-go/tools/events/event_broadcaster.go\" shows how this struct is updated on heartbeats and can guide customized reporter implementations.",
                                                              "descriptionCN": "事件系列包含一系列事件的信息，即一段时间内持续发生的事情。更新事件序列的频率由事件报告者决定。在\"k8s.io/client-go/tools/events/event_broadcaster.go\"中，默认的事件报告者显示了如何在这种结构上进行更新，并且可以指导定制的报告实现。",
                                                              "properties": {
                                                                  "count": {
                                                                      "description": "count is the number of occurrences in this series up to the last heartbeat time.",
                                                                      "descriptionCN": "此系列中的计数为自最后一次心跳以来这一序列中出现的次数。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lastObservedTime": {
                                                                      "description": "lastObservedTime is the time when last Event from the series was seen before last heartbeat.",
                                                                      "descriptionCN": "\"最后观察到的时间是该系列中最近一次事件发生之前的心跳最后一次看到的时间。\"",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration": {
                                                              "description": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
                                                              "descriptionCN": "优先级配置描述了处理免检请求的可配置方面。在强制性的免检配置对象中，字段中的值可以由受权用户修改，而其他所有`spec`属性的内容。\n\nExemptPriorityLevelConfiguration 是一个类，用于实现 ExemptRequest 的优先级配置。它有三个属性： 资源ID、应用ID和优先级（这是通过 SetPriority 方法实现的）。",
                                                              "properties": {
                                                                  "lendablePercent": {
                                                                      "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels.  This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
                                                                      "descriptionCN": "可借性百分比`lendablePercent`规定了该级别的名义CL中可以被其他优先级别借用的百分比。此值必须在0和100之间（含），默认为0。其他级别的可以从这个级别借用的座位数定义如下：\n\nLendableCL(i) = round(NominalCL(i) * lendablePercent(i)/100.0 )",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "nominalConcurrencyShares": {
                                                                      "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
                                                                      "descriptionCN": "\"NominalConcurrencyShares\" (NCS) 对于这个级别计算 NominalConcurrencyLimit (NominalCL) 产生贡献。这是该优先级级别的名义预留执行座位的数量。但这并不限制这个优先级级别的调度，而是通过借用机制影响其他优先级水平。服务器的并发限制（ServerCL）按 NCS 值的比例分配给所有优先级级别。\n\nNominalCL(i) = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\n更大的数字意味着更大的名义并发限制，而牺牲了其他优先级等级。此字段具有默认值为零。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod": {
                                                              "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher.",
                                                              "descriptionCN": "FlowDistinguisherMethod指的是流体区分器的方法。",
                                                              "properties": {
                                                                  "type": {
                                                                      "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required.",
                                                                      "descriptionCN": "`type` 是流程区分器方法的类型，支持的类型为 \"ByUser\" 和 \"ByNamespace\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowSchema": {
                                                              "description": "FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
                                                              "descriptionCN": "FlowSchema定义了一组流程的结构。请注意，一个流程是由一组具有相似属性的输入API请求组成的集合，并通过一对字符串进行识别：FlowSchema的名字和\"flow distinguisher\"。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的可版本化结构。服务器应该将识别的格式转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时的端点推测这一点。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "元数据是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "期望的行为。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是FlowSchema的当前状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowSchemaCondition": {
                                                              "description": "FlowSchemaCondition describes conditions for a FlowSchema.",
                                                              "descriptionCN": "FlowSchemaCondition 描述了FlowSchema 的条件。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后的转换时间是条件从一种状态转换到另一种状态的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "`message` is a human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "\"message\" 是表示上一个转换详情的人类可读消息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "原因是一个唯一的、一词的CamelCase条件的最后一过渡的原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
                                                                      "descriptionCN": "状态是条件的状态。可以是True、False或未知的。这是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is the type of the condition. Required.",
                                                                      "descriptionCN": "类型是条件的类型。必填",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowSchemaList": {
                                                              "description": "FlowSchemaList is a list of FlowSchema objects.",
                                                              "descriptionCN": "流形表单列表是一个包含流形表单对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化 schema。服务器应该将识别到的schema转换为最新的内部值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "`items` is a list of FlowSchemas.",
                                                                      "descriptionCN": "`items` 是一个 FlowSchemas 列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchema"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个字符串值，表示这个对象所代表的 REST 资源。服务器可以通过客户端向它提交请求来推断出这一点。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "元数据是标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowSchemaSpec": {
                                                              "description": "FlowSchemaSpec describes how the FlowSchema's specification looks like.",
                                                              "descriptionCN": "FlowSchemaSpec 定义了 FlowSchema 的规范如何看起来。",
                                                              "properties": {
                                                                  "distinguisherMethod": {
                                                                      "description": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string.",
                                                                      "descriptionCN": "\"distinguisherMethod\"定义了如何计算匹配此模式的请求的流量区分器。\"nil\"指定了划分器被禁用，因此总是空字符串。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowDistinguisherMethod"
                                                                  },
                                                                  "matchingPrecedence": {
                                                                      "description": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
                                                                      "descriptionCN": "匹配优先级是用来在给定请求时选择 FlowSchema 的一种方式。被选择的 FlowSchema 是那些具有最低数值（我们将其视为逻辑上最高）的匹配优先级的。每个匹配优先级值必须在一个 [1, 10000] 的范围内。请注意，如果没有指定优先级，它将设置为 1000 作为默认。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "priorityLevelConfiguration": {
                                                                      "description": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.",
                                                                      "descriptionCN": "优先级配置应该引用集群中的PriorityLevelConfiguration。如果无法找到引用，FlowSchema的状态将被忽略，并标记为无效。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference"
                                                                  },
                                                                  "rules": {
                                                                      "description": "`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
                                                                      "descriptionCN": "规则描述了哪些请求将匹配此流架构。如果至少有一个规则与请求匹配，那么这个流程结构就会匹配请求。如果为空，则没有满足流程结构的请求。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.FlowSchemaStatus": {
                                                              "description": "FlowSchemaStatus represents the current state of a FlowSchema.",
                                                              "descriptionCN": "FlowSchemaStatus表示当前的FlowSchema状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "`conditions` is a list of the current states of FlowSchema.",
                                                                      "descriptionCN": "`conditions` 是 FlowSchema 的当前状态列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.FlowSchemaCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.GroupSubject": {
                                                              "description": "GroupSubject holds detailed information for group-kind subject.",
                                                              "descriptionCN": "组主题提供详细的信息给小组类型的主题。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the user group that matches, or \"*\" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
                                                                      "descriptionCN": "该用户组匹配名，或者星号(*)匹配所有用户组。参考https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go中的一些知名组名称。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.LimitResponse": {
                                                              "description": "LimitResponse defines how to handle requests that can not be executed right now.",
                                                              "descriptionCN": "LimitResponse定义了如何处理不能立即执行的请求。",
                                                              "properties": {
                                                                  "queuing": {
                                                                      "description": "`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `\"Queue\"`.",
                                                                      "descriptionCN": "队列配置参数由queuing字段保存。只有当type为\"Queue\"时，这个字段才能非空。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.QueuingConfiguration"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
                                                                      "descriptionCN": "类型为\"队列\"或\"拒绝\"。\"队列\"意味着不能在到达时执行的请求被留在队列中，直到可以执行或队列限制达到。\"拒绝\"意味着不能在到达时执行的请求被拒绝。必填",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration": {
                                                              "description": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n  - How are requests for this priority level limited?\n  - What should be done with requests that exceed the limit?",
                                                              "descriptionCN": "\"LimitedPriorityLevelConfiguration\"定义了如何处理受限制的请求。它解决了两个问题：\n\n  - 对于这个优先级水平的请求，是如何限制它们的？\n  - 如果超过了限制，应该如何处理这些请求？",
                                                              "properties": {
                                                                  "borrowingLimitPercent": {
                                                                      "description": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels. The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
                                                                      "descriptionCN": "如果已存在，该优先级级别可以借给其他优先级级别的座位数量。此限制被称为此级别允许的借座并发量（BorrowingCL）。它是该级别可能在任何时候同时借用的最大座椅数。这个字段存储该限制与该级别的名义并发限制之间的比率。当该字段不为nil时，它必须持有非负整数，并且限值计算如下。\n\nBorrowingCL(i) = round(NominalCL(i) * borrowingLimitPercent(i)/100.0)\n\n该字段的价值可以超过100，这意味着该优先级级别可以借出大于其自身名义并发限制（NominalCL）的座椅数量。当该字段为空时，限值实际上无限大。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lendablePercent": {
                                                                      "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels. The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
                                                                      "descriptionCN": "可借性百分比指该级别的名义CL中，其他优先级别可以借用的份额。此字段的值必须在0到100之间，包括0，并且默认设置为0。其他级别可以从这个级别借用的座位数，被称为这个级别的可借性并发限制（LendableCL），定义如下：\n\nLendableCL(i) = round(NominalCL(i)*lendablePercent(i)/100.0)",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "limitResponse": {
                                                                      "description": "`limitResponse` indicates what to do with requests that can not be executed right now",
                                                                      "descriptionCN": "`limitResponse`指示对于当前无法执行的请求，应如何处理。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.LimitResponse"
                                                                  },
                                                                  "nominalConcurrencyShares": {
                                                                      "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats available at this priority level. This is used both for requests dispatched from this priority level as well as requests dispatched from other priority levels borrowing seats from this level. The server's concurrency limit (ServerCL) is divided among the Limited priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level.\n\nIf not specified, this field defaults to a value of 30.\n\nSetting this field to zero supports the construction of a \"jail\" for this priority level that is used to hold some request(s)",
                                                                      "descriptionCN": "“NominalConcurrencyShares”（NCS）对这个级别计算名义的并发限制（NominalCL）。这是该优先级级别的执行座位可用数量。这两个优先级级别同时使用此水平的座位分配。服务器的并发限制（ServerCL）根据其NCS值的比例被分成有限优先等级：\n\n名义CL(i) = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\n较大的数字意味着更大的名义并发限制，而其他优先级级别则面临牺牲。\n\n如果没有指定，则默认为30。\n\n将此字段设置为零支持在这个优先级级别构建一个用于储存请求的“监狱”。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.NonResourcePolicyRule": {
                                                              "description": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
                                                              "descriptionCN": "非资源政策规则是一个根据其动词和目标非资源URL匹配的谓词。如果和只有当至少一个verb与请求匹配，且至少一个nonResourceURL与请求匹配时，NonResourcePolicyRule才会匹配请求。",
                                                              "properties": {
                                                                  "nonResourceURLs": {
                                                                      "description": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - \"/healthz\" is legal\n  - \"/hea*\" is illegal\n  - \"/hea\" is legal but matches nothing\n  - \"/hea/*\" also matches nothing\n  - \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
                                                                      "descriptionCN": "\"非资源URLs\"是一组用户应获取并可能不为空的url前缀。例如：\n- \"/healthz\" 是合法的\n- \"/hea*\" 是非法的\n- \"/hea\" 是合法的，但匹配空字符串\n- \"/hea/*\" 也匹配空字符串\n- \"/healthz/*\" 匹配所有组件健康检查。\n\"*\" 匹配所有的非资源URL。如果存在，它必须是唯一的。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "verbs": {
                                                                      "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.",
                                                                      "descriptionCN": "动词列表，包含匹配的动词及其可能不为空。`*`匹配所有动词。如果存在，必须为唯一一项。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects": {
                                                              "description": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
                                                              "descriptionCN": "政策规则与主题规范规定了一个适用于向API服务器请求的测试。该测试考虑了主体发出请求时的情况，动作要求的动词和要被操作的资源。该PolicyRulesWithSubjects如果和仅当以下两种情况满足（a）至少一个subject中的成员匹配请求；（b）至少一个resourceRules或nonResourceRules中的成员匹配请求时，才匹配请求。\n\n这是一个具体的语境翻译例子：你想要创建一个系统管理员角色，你应该在创建角色的时候选择“系统管理员”，然后选择你的用户列表，最后选中“创建角色”。",
                                                              "properties": {
                                                                  "nonResourceRules": {
                                                                      "description": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.",
                                                                      "descriptionCN": "`nonResourceRules` 是一个包含 NonResourcePolicyRules 的列表，这些规则根据它们的动词和目标非资源 URL 来识别匹配的请求。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.NonResourcePolicyRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resourceRules": {
                                                                      "description": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
                                                                      "descriptionCN": "`resourceRules` 是一个包含 ResourcePolicy 规则的切片，这些规则根据请求的动词和目标资源进行匹配。至少有一个 `resourceRules` 和 `nonResourceRules` 不为空。\n\n翻译成中文：`resourceRules` 是一个切片，其中包含 ResourcePolicy 规则，这些规则根据请求的动词（例如 \"get\"）和目标资源（例如 \"user\"）进行匹配。至少有一个 `resourceRules` 和 `nonResourceRules` 不为空。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ResourcePolicyRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "subjects": {
                                                                      "description": "subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
                                                                      "descriptionCN": "此规则关注的是正常用户、服务帐户或组的列表。在这个子集中至少需要一个成员。同时包含系统：认证和系统：未认证用户组的子集匹配每条请求。要求。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.Subject"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration": {
                                                              "description": "PriorityLevelConfiguration represents the configuration of a priority level.",
                                                              "descriptionCN": "优先级级别配置表示优先级级别的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是一个对象表示的版本化的架构。服务器应该将识别的规范转换为内部值，可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交的请求来推测出这个对象。不能被更新。使用 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "\"metadata\" 是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "`spec` is the specification of the desired behavior of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "`spec` 是定义所需行为的请求优先级规范。更多信息： https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the current status of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是“请求优先级”的当前状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition": {
                                                              "description": "PriorityLevelConfigurationCondition defines the condition of priority level.",
                                                              "descriptionCN": "优先级配置条件定义了优先级级别的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后的转换时间是条件从一种状态转变到另一种状态时所经历的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "`message` is a human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "“message”是表示最后过渡细节的人类可读的信号。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "条件的最后过渡是一个独特的、以CamelCase形式存在的唯一原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
                                                                      "descriptionCN": "状态是条件的状态。可以为真，假，未知。要求。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is the type of the condition. Required.",
                                                                      "descriptionCN": "类型是条件的类型。必填",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationList": {
                                                              "description": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.",
                                                              "descriptionCN": "优先级配置列表是一个包含优先级配置对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可变格式表示。服务器应该将识别到的模式转换为最新的内部值，并可能拒绝不熟悉的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "`items` is a list of request-priorities.",
                                                                      "descriptionCN": "`items`是一个优先级列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfiguration"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的 REST 资源的字符串值。服务器可以根据客户端向服务器提交请求时提交的 endpoint 确定这一点。无法更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "\"metadata\" 是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationReference": {
                                                              "description": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.",
                                                              "descriptionCN": "优先级配置参考包含用于“请求优先级”的信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of the priority level configuration being referenced Required.",
                                                                      "descriptionCN": "这个优先级配置正在被引用的名称是 `name`。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationSpec": {
                                                              "description": "PriorityLevelConfigurationSpec specifies the configuration of a priority level.",
                                                              "descriptionCN": "优先级级别配置规范规定了优先级级别的配置。",
                                                              "properties": {
                                                                  "exempt": {
                                                                      "description": "`exempt` specifies how requests are handled for an exempt priority level. This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply.",
                                                                      "descriptionCN": "`exempt` 属性用于设置为低优先级的请求如何处理。此字段如果`type`为\"有限\"，必须为空。如果`type`为\"非限定\"，此字段可以不为空。如果为空并且`type`为\"非限定\"，则默认值适用于`ExemptPriorityLevelConfiguration`配置。\n\n请注意：这个定义假设了所有的请求都应按照优先级进行处理，并且优先级级别是固定的。这只是一个示例，实际的实现可能需要根据具体的需求和环境来进行调整。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ExemptPriorityLevelConfiguration"
                                                                  },
                                                                  "limited": {
                                                                      "description": "`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `\"Limited\"`.",
                                                                      "descriptionCN": "`limited` 参数指定用于限速处理的优先级。如果`type`为 `\"Limited\"`，则该字段必须不为空。\n\n详细说明如下：\n\n1. 如果`type`为 `\"Limited\"`，则`limited`参数可以设置限制请求的速度，例如限制在特定时间内的最大并发请求数量。\n2. 无论`type`如何，`limited`参数都不能为空。\n3. 在`limited`参数中，可以使用多个字段来描述不同类型的请求和其限速处理方式。这些字段包括但不限于`type`（限速类型）、`duration`（限速持续时间）等。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.LimitedPriorityLevelConfiguration"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` indicates whether this priority level is subject to limitation on request execution.  A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
                                                                      "descriptionCN": "优先级级别`type`表示该优先级是否受到请求执行的限制。值为 `\"Exempt\"`意味着，对这个优先级级别的请求不受限制（因此永远不会被排队），也不会占用服务器可用的其他优先级级别的容量。值为 `\"Limited\"`意味着（a）对这个优先级级别的请求确实受限制（b）一些服务器的有限能力仅限于这个优先级级别。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus": {
                                                              "description": "PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".",
                                                              "descriptionCN": "优先级配置状态表示当前\"请求优先级\"的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "`conditions` is the current state of \"request-priority\".",
                                                                      "descriptionCN": "\"条件\"是当前状态为 \"请求优先级\"。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.QueuingConfiguration": {
                                                              "description": "QueuingConfiguration holds the configuration parameters for queuing",
                                                              "descriptionCN": "排队配置包含队列的配置参数。",
                                                              "properties": {
                                                                  "handSize": {
                                                                      "description": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
                                                                      "descriptionCN": "手部大小是一个较小的正数，用于配置请求被分到队列中的排序。 当将该优先级水平的请求放入队列时，请求的流标识（一个字符串对）会被哈希，并使用哈希值来洗牌列表并分配这里指定的手掌大小。 请求会放在最短的队列中。 手部大小必须不大于`队列`，并且应该显著地小得多（以便少数重流量不会淹没大部分队列）。 用户友好的文档中有更详尽的指导设置此字段。 这个字段有一个默认值为8。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "queueLengthLimit": {
                                                                      "description": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
                                                                      "descriptionCN": "队列长度限制是指在给定优先级级别下，允许等待在这个队列中的请求的最大数量。超过这个最大数量的请求会被拒绝。此值必须为正数。如果没有指定，它将被默认设置为50。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "queues": {
                                                                      "description": "`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
                                                                      "descriptionCN": "这个优先级级别的队列数量。每个apiserver都有自己的队列。值必须是非负的。将其设置为1，实际上阻止了随机排序，从而使得关联流模式的相关区别方法变得无关紧要。此字段默认值为64。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.ResourcePolicyRule": {
                                                              "description": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
                                                              "descriptionCN": "资源策略规则是一个匹配某些资源请求的谓词，测试请求的动词和目标资源。如果一个资源策略规则匹配一个资源请求，则只有当：（a）至少有一个会员的动词与请求匹配；（b）至少有一个成员的API组与请求匹配；（c）至少有一个成员的资源与请求匹配；或者（d1）请求没有指定命名空间（即，`Namespace==\"\"`)且集群范围为真或（d2）请求指定了命名空间，并且至少有一个命名空间中的项与请求的命名空间匹配。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "`apiGroups` is a list of matching API groups and may not be empty. \"*\" matches all API groups and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "`apiGroups` 是一个匹配的 API 组块列表，可能不为空。 \"*\" 匹配所有 API 组块，如果存在，则必须是唯一的项。必填。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "clusterScope": {
                                                                      "description": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
                                                                      "descriptionCN": "`clusterScope` 用于确定是否匹配不指定命名空间（这可能是因为资源未命名空间化，或者请求指向所有命名空间）的请求。如果这个字段省略或为假，则 `namespaces` 字段必须包含非空列表。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "namespaces": {
                                                                      "description": "`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
                                                                      "descriptionCN": "命名空间是一个包含目标命名空间的列表，该列表限制匹配。请求指定目标命名空间只会匹配如果（a）这个列表包含这个目标命名空间或（b）这个列表包含“*”。请注意，“*”匹配任何指定的命名空间，但不会匹配一个不指定命名空间的请求（参阅`clusterScope`字段以查看这一点）。此列表可以为空，但如果`clusterScope`为真。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "resources": {
                                                                      "description": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "资源列表包含匹配的资源（即小写和复数形式），如果需要，还包括子资源。例如，“服务”、“节点状态”。此列表可能不为空。*匹配所有资源，并且如果有，则必须是唯一的一项。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "verbs": {
                                                                      "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "verbs 是一个匹配的动词列表，可能不为空。\"*\"匹配所有的动词，如果存在，必须是唯一一项。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.ServiceAccountSubject": {
                                                              "description": "ServiceAccountSubject holds detailed information for service-account-kind subject.",
                                                              "descriptionCN": "服务账户Subject具有详细的服务账户类型信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name. Required.",
                                                                      "descriptionCN": "name是匹配ServiceAccount对象的名字，或者星号(*)来匹配不管名字是什么。必填。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "`namespace` is the namespace of matching ServiceAccount objects. Required.",
                                                                      "descriptionCN": "`namespace` 是匹配 ServiceAccount 对象的命名空间。必填",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.Subject": {
                                                              "description": "Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.",
                                                              "descriptionCN": "主题与请求的发起者匹配，该请求认证系统识别。有三种方式可以匹配发起者：用户、组或服务账户。",
                                                              "properties": {
                                                                  "group": {
                                                                      "description": "`group` matches based on user group name.",
                                                                      "descriptionCN": "用户组名称与`group`进行匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.GroupSubject"
                                                                  },
                                                                  "kind": {
                                                                      "description": "`kind` indicates which one of the other fields is non-empty. Required",
                                                                      "descriptionCN": "“kind”表示其他字段中是否有非空值。这是必需的。",
                                                                      "type": "string"
                                                                  },
                                                                  "serviceAccount": {
                                                                      "description": "`serviceAccount` matches ServiceAccounts.",
                                                                      "descriptionCN": "`serviceAccount` 和 `ServiceAccounts` 两者在含义上是一样的，都是指与服务提供者相关的安全角色或凭证。因此，无论你是想要问哪个，你都可以直接使用这两个术语。\n\n但是，在实际的代码中，我们通常会用到更具体的翻译来描述它们所代表的概念。例如：\n\n- ` ServiceAccountAccount`：这是一个用于服务提供者的安全性角色。\n- ` ServiceAccountCredentials`：这是一个用于认证用户的身份的凭据。\n- ` ServiceAccountToken`：这是一种用于访问服务提供者提供的资源的令牌。\n- ` ServiceAccountSecret`：这是一种用于存储和管理私钥的安全密钥。\n\n所以，虽然这两个术语在含义上是相同的，但在实际使用时可能会有细微的差别。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.ServiceAccountSubject"
                                                                  },
                                                                  "user": {
                                                                      "description": "`user` matches based on username.",
                                                                      "descriptionCN": "用户根据用户名进行匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1.UserSubject"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1.UserSubject": {
                                                              "description": "UserSubject holds detailed information for user-kind subject.",
                                                              "descriptionCN": "用户主题持有详细信息为用户类型的主题。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the username that matches, or \"*\" to match all usernames. Required.",
                                                                      "descriptionCN": "名称应匹配，或者星号（*）表示匹配所有用户名。要求。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration": {
                                                              "description": "ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the `spec`.",
                                                              "descriptionCN": "《豁免优先级配置》描述了处理豁免请求的可配置性。在强制性的豁免配置对象中，这里的字段值可以由授权用户修改，而不是其他所有`spec`中的内容。",
                                                              "properties": {
                                                                  "lendablePercent": {
                                                                      "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels.  This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
                                                                      "descriptionCN": "可借性百分比\n\n此字段指定NominalCL的可借取比例，其中其他优先级别的可借取部分。此值必须在0和100之间（含），默认为0。其他级别可以从该级别借用座位的数量定义为LendableConcurrencyLimit(可借取限制)。LendableCL(i) = round(NominalCL(i)*lendablePercent(i)/100.0)",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "nominalConcurrencyShares": {
                                                                      "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.",
                                                                      "descriptionCN": "NCS（NominalConcurrencyShares）为这个级别计算名义并发限制（NominalCL）。这是指这个优先级级别的名义执行座位数。但这并不会限制这个优先级的调度，而是通过借用机制影响其他优先级级别。服务器的并发限制（ServerCL）按照其NCS值分配给所有优先级级别：\n\nNominalCL(i) = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\n更大的数字意味着更大的名义并发限制，但也会牺牲其他的优先级级别。此字段默认值为0。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod": {
                                                              "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher.",
                                                              "descriptionCN": "流量辨识器方法指定了流识别器的识别方法。",
                                                              "properties": {
                                                                  "type": {
                                                                      "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required.",
                                                                      "descriptionCN": "类型是流区分别的方法的类型。支持的类型是\"ByUser\"和\"ByNamespace\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowSchema": {
                                                              "description": "FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\".",
                                                              "descriptionCN": "FlowSchema定义了一个流的schema。请注意，一个流是由一组相似属性的入站API请求组成的集合，并通过一对字符串进行识别：FlowSchema的名字和\"flow distinguisher\"。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示的对象的版本化结构。服务器应该将识别到的规范转换为内部值的最新，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个字符串值，代表这个对象所表示的 REST 资源。服务器可能从客户端提交请求的端点推断出这个值。不能被更新。在 camelCase 下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "\"metadata\" 是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "`spec` is the specification of the desired behavior of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "期望行为的FlowSchema规范。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the current status of a FlowSchema. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是FlowSchema当前的状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition": {
                                                              "description": "FlowSchemaCondition describes conditions for a FlowSchema.",
                                                              "descriptionCN": "FlowSchemaCondition描述了流式schema的条件。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "`lastTransitionTime` 是从一种状态过渡到另一种状态时最后发生的情况。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "`message` is a human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "消息是一段可供人类阅读的指示，用于说明上一次转换的详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "原因是一个独特的、一个单词的CamelCase条件的最后过渡原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
                                                                      "descriptionCN": "状态是条件的状态。可以是True、False或未知。要求。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is the type of the condition. Required.",
                                                                      "descriptionCN": "类型是条件的类型。必填",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowSchemaList": {
                                                              "description": "FlowSchemaList is a list of FlowSchema objects.",
                                                              "descriptionCN": "流程图 schema 列表是一个包含流程图对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此表示对象的版本化格式。服务器应该将识别的规范转换为内部值的最新状态，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "`items` is a list of FlowSchemas.",
                                                                      "descriptionCN": "`items`是一个FlowSchemas列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchema"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时提供的端点推断出这一点。不能被更新。CamelCase格式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "\"metadata\" 是标准的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec": {
                                                              "description": "FlowSchemaSpec describes how the FlowSchema's specification looks like.",
                                                              "descriptionCN": "FlowSchemaSpec描述了FlowSchema的规范外观。",
                                                              "properties": {
                                                                  "distinguisherMethod": {
                                                                      "description": "`distinguisherMethod` defines how to compute the flow distinguisher for requests that match this schema. `nil` specifies that the distinguisher is disabled and thus will always be the empty string.",
                                                                      "descriptionCN": "“distinguisherMethod”定义了如何计算匹配这个模式的请求流分歧器。`nil`指定忽略分裂器，并因此总是空字符串。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod"
                                                                  },
                                                                  "matchingPrecedence": {
                                                                      "description": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default.",
                                                                      "descriptionCN": "匹配优先级（matchingPrecedence）用于选择符合给定请求的FlowSchema。选择的FlowSchema中，我们取其数值最低者（这是逻辑上最高的）。每个匹配优先级值必须在[1, 10000]范围内。请注意，如果没有指定优先级，我们将将其设置为默认的1000。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "priorityLevelConfiguration": {
                                                                      "description": "`priorityLevelConfiguration` should reference a PriorityLevelConfiguration in the cluster. If the reference cannot be resolved, the FlowSchema will be ignored and marked as invalid in its status. Required.",
                                                                      "descriptionCN": "优先级配置应该指向集群中的PriorityLevelConfiguration。如果找不到对应的引用，FlowSchema的状态将被标记为无效，并且无法执行操作。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference"
                                                                  },
                                                                  "rules": {
                                                                      "description": "`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.",
                                                                      "descriptionCN": "规则描述了哪些请求将匹配这个流式 schema。如果满足至少一个规则中的要求，则该流程将匹配请求；否则，没有任何请求将匹配该流程。如果为空切片，那么就没有请求可以匹配该流程。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus": {
                                                              "description": "FlowSchemaStatus represents the current state of a FlowSchema.",
                                                              "descriptionCN": "FlowSchemaStatus表示流式schema的当前状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "`conditions` is a list of the current states of FlowSchema.",
                                                                      "descriptionCN": "条件是一个FlowSchema当前状态的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.GroupSubject": {
                                                              "description": "GroupSubject holds detailed information for group-kind subject.",
                                                              "descriptionCN": "组主题提供小组类目的详细信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the user group that matches, or \"*\" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required.",
                                                                      "descriptionCN": "用户名组匹配或*匹配所有用户组。见：https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go 中一些已知的用户组名称。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.LimitResponse": {
                                                              "description": "LimitResponse defines how to handle requests that can not be executed right now.",
                                                              "descriptionCN": "\"LimitResponse\"定义了如何处理无法立即执行的请求。",
                                                              "properties": {
                                                                  "queuing": {
                                                                      "description": "`queuing` holds the configuration parameters for queuing. This field may be non-empty only if `type` is `\"Queue\"`.",
                                                                      "descriptionCN": "`queuing` 是用于存储队列配置参数的字段。只有当 `type` 为 `\"Queue\"` 时，这个字段才不能为空。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required.",
                                                                      "descriptionCN": "类型是\"队列\"或\"拒绝\"。 \"队列\"意味着不能立即执行请求的请求会被保存在一个队列中，直到可以被执行或者队列限制达到。 \"拒绝\"意味着不能立即执行请求的请求会被拒绝。 必要",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration": {
                                                              "description": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n  - How are requests for this priority level limited?\n  - What should be done with requests that exceed the limit?",
                                                              "descriptionCN": "有限优先级配置说明了如何处理受限制的请求。它解决了两个问题：\n - 这个优先级水平下的请求是如何限制的？\n - 对超出限制的请求应怎么做？",
                                                              "properties": {
                                                                  "borrowingLimitPercent": {
                                                                      "description": "`borrowingLimitPercent`, if present, configures a limit on how many seats this priority level can borrow from other priority levels. The limit is known as this level's BorrowingConcurrencyLimit (BorrowingCL) and is a limit on the total number of seats that this level may borrow at any one time. This field holds the ratio of that limit to the level's nominal concurrency limit. When this field is non-nil, it must hold a non-negative integer and the limit is calculated as follows.\n\nBorrowingCL(i) = round( NominalCL(i) * borrowingLimitPercent(i)/100.0 )\n\nThe value of this field can be more than 100, implying that this priority level can borrow a number of seats that is greater than its own nominal concurrency limit (NominalCL). When this field is left `nil`, the limit is effectively infinite.",
                                                                      "descriptionCN": "如果存在，请配置此优先级级别的借用限制。这个限制被称为这个级别自己的借用并发限制（BorrowingCL）。这是一个该级别可能在任何时候都可借用的总座位数的上限。此字段存储了该限值与该级别名义并发限制之间的比率。当此字段不为nil时，必须持有非负整数值，并根据以下计算公式计算极限。\n\nBorrowingCL(i) = round(NominalCL(i) * borrowingLimitPercent(i)/100.0)\n\n此字段的值可以大于100，这意味着这个优先级级别可以借用的座位数量大于其自身的名义并发限制（NominalCL）。当此字段为空`nil`时，极限实际上为无穷大。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "lendablePercent": {
                                                                      "description": "`lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels. The value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.\n\nLendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )",
                                                                      "descriptionCN": "可借性百分比允许优先级水平的名义CL的可借用部分。此字段必须在0到100之间，包括0，并且默认为0。其他级别可以从该水平借入的座位数定义如下。\n\nLendableCL(i) = round(NominalCL(i)*lendablePercent(i)/100.0)",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "limitResponse": {
                                                                      "description": "`limitResponse` indicates what to do with requests that can not be executed right now",
                                                                      "descriptionCN": "`limitResponse` 表示对于不能立即执行的请求，应采取什么措施。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitResponse"
                                                                  },
                                                                  "nominalConcurrencyShares": {
                                                                      "description": "`nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats available at this priority level. This is used both for requests dispatched from this priority level as well as requests dispatched from other priority levels borrowing seats from this level. The server's concurrency limit (ServerCL) is divided among the Limited priority levels in proportion to their NCS values:\n\nNominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\nBigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of 30.",
                                                                      "descriptionCN": "陈规共享量（NCS）对计算该级别的名义并发限制（NominalCL）有贡献。这是该优先级级别可用的执行席数。它既用于从这个优先级级别发出的请求，也用于从其他优先级级别借用座位并从该级别发出的请求。服务器的并发限制（ServerCL）按其NCS值与限制等级的比例被分配给有限优先等级。\n\n名义CL(i) = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)\n\n较大的数字意味着更大的名义并发限制，而其他优先级级别则需要付出代价。此字段具有默认值为30。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule": {
                                                              "description": "NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.",
                                                              "descriptionCN": "非资源政策规则是一个根据其动词和目标非资源URL匹配的谓词。如果一个非资源政策规则匹配请求，则仅当至少有（a）至少有一个动作中的动词与请求匹配；至少有（b）至少有一个非资源URL中与请求匹配。",
                                                              "properties": {
                                                                  "nonResourceURLs": {
                                                                      "description": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - \"/healthz\" is legal\n  - \"/hea*\" is illegal\n  - \"/hea\" is legal but matches nothing\n  - \"/hea/*\" also matches nothing\n  - \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required.",
                                                                      "descriptionCN": "\"nonResourceURLs\" 是一组url前缀，用户应有访问权限，并可能不为空。例如：\n- \"/healthz\" 是合法的\n- \"/hea*\" 是非法的\n- \"/hea\" 是合法但匹配空字符串\n- \"/hea/*\" 也匹配空字符串\n- \"/healthz/*\" 匹配所有组件健康检查。\n\"*\" 模糊匹配所有的非资源URL。如果存在，它必须是唯一入口。必选。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "verbs": {
                                                                      "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required.",
                                                                      "descriptionCN": "动词列表，匹配的动词。可能不为空。* 与所有动词匹配。如果存在，必须为唯一项。要求。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects": {
                                                              "description": "PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.",
                                                              "descriptionCN": "政策规则中有主题。该测试适用于请求API服务器。测试考虑请求主体、请求动词和要执行的资源。这个PolicyRulesWithSubjects匹配请求如果和只有当（a）至少一个主题成员与请求相匹配（b）至少一个资源规则或非资源规则成员与请求相匹配时，都有效。",
                                                              "properties": {
                                                                  "nonResourceRules": {
                                                                      "description": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.",
                                                                      "descriptionCN": "`nonResourceRules` 是一个包含非资源策略规则的列表，这些规则根据请求的动词和目标非资源 URL 来匹配。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "resourceRules": {
                                                                      "description": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty.",
                                                                      "descriptionCN": "`resourceRules`是一个资源政策规则的切片，它根据请求的动词和目标资源识别匹配请求。`resourceRules`或`nonResourceRules`至少有一个不能为空。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "subjects": {
                                                                      "description": "subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.",
                                                                      "descriptionCN": "此规则关心的正常用户、服务账户或组列表。该分片至少包含一个成员。包括系统认证和系统未认证用户组的子集匹配每一项请求。要求",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.Subject"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration": {
                                                              "description": "PriorityLevelConfiguration represents the configuration of a priority level.",
                                                              "descriptionCN": "优先级配置表示优先级级别的配置。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion指定了这个对象表示形式的版本化 schema。服务器应该将识别的schema转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的REST资源的字符串值。服务器可以根据客户端向服务器提交请求时提供的端点来推测此值。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "元数据是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "`spec` is the specification of the desired behavior of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "“请求优先级”期望的行为的规范。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the current status of a \"request-priority\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是“请求优先级”当前的状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition": {
                                                              "description": "PriorityLevelConfigurationCondition defines the condition of priority level.",
                                                              "descriptionCN": "优先级配置条件定义了优先级等级的条件。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "`lastTransitionTime` is the last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "\"lastTransitionTime\" 是从一种状态转变为另一种状态时最后一次发生的状态转换的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "`message` is a human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "消息是表示最后过渡的可读人类化信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "这个条件的最后转换的原因是一个独特的、只有一个单词的CamelCase原因。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "`status` is the status of the condition. Can be True, False, Unknown. Required.",
                                                                      "descriptionCN": "状态是条件的状态。可以为真、假或未知。必需。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` is the type of the condition. Required.",
                                                                      "descriptionCN": "类型是条件的类型。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationList": {
                                                              "description": "PriorityLevelConfigurationList is a list of PriorityLevelConfiguration objects.",
                                                              "descriptionCN": "优先级设置列表是一个包含PriorityLevelConfiguration对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的 schema。服务器应该将识别的 schema 转换为最新的内部值，并可能拒绝不被识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "`items` is a list of request-priorities.",
                                                                      "descriptionCN": "`items` 是一个请求优先级列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个字符串值，表示这个对象所代表的 REST 资源。服务器可以根据客户端提交请求的端点推测这个值。不能更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "`metadata` is the standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "元数据是标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference": {
                                                              "description": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used.",
                                                              "descriptionCN": "优先级配置引用包含用于使用的\"请求优先级\"的信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of the priority level configuration being referenced Required.",
                                                                      "descriptionCN": "优先级配置的名称`name`被引用。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec": {
                                                              "description": "PriorityLevelConfigurationSpec specifies the configuration of a priority level.",
                                                              "descriptionCN": "优先级配置规范指定了优先级级别的配置。",
                                                              "properties": {
                                                                  "exempt": {
                                                                      "description": "`exempt` specifies how requests are handled for an exempt priority level. This field MUST be empty if `type` is `\"Limited\"`. This field MAY be non-empty if `type` is `\"Exempt\"`. If empty and `type` is `\"Exempt\"` then the default values for `ExemptPriorityLevelConfiguration` apply.",
                                                                      "descriptionCN": "\"exempt\"指定了请求如何处理以 exempt 等级的优先级。此字段必须为空，如果 `type` 是 `\"Limited\"`。否则可以不为空，如果 `type` 是 `\"Exempt\"`。如果没有空并且 `type` 是 `\"Exempt\"` 则默认值适用于 `ExemptPriorityLevelConfiguration`。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration"
                                                                  },
                                                                  "limited": {
                                                                      "description": "`limited` specifies how requests are handled for a Limited priority level. This field must be non-empty if and only if `type` is `\"Limited\"`.",
                                                                      "descriptionCN": "`limited` 是用于限制请求处理的字段。如果 `type` 为 `\"Limited\"`，则这个字段必须不为空。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration"
                                                                  },
                                                                  "type": {
                                                                      "description": "`type` indicates whether this priority level is subject to limitation on request execution.  A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required.",
                                                                      "descriptionCN": "优先级等级表示该优先级是否受请求执行的限制。值为 `\"Exempt\"` 表示此优先级等级不受限制（因此永远不会排队），也不会占用可用资源给其他优先级等级。值为 `\"Limited\"` 表示 (a) 该优先级等级 _确实_ 受限制， (b) 某些服务器的有限能力仅限于这个优先级等级。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus": {
                                                              "description": "PriorityLevelConfigurationStatus represents the current state of a \"request-priority\".",
                                                              "descriptionCN": "优先级配置状态表示当前\"请求优先级\"的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "`conditions` is the current state of \"request-priority\".",
                                                                      "descriptionCN": "条件`request-priority`当前的状态是\"请求优先级\"。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration": {
                                                              "description": "QueuingConfiguration holds the configuration parameters for queuing",
                                                              "descriptionCN": "队列配置包含了队列的配置参数。",
                                                              "properties": {
                                                                  "handSize": {
                                                                      "description": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8.",
                                                                      "descriptionCN": "\"handSize\" 是一个小的正数，用于配置请求在队列中的shuffle sharding。当设置此优先级时，请求的流量标识（一对字符串）被哈希，并使用哈希值将队列列表和这里指定的手指牌进行随机化。该请求被放入手的最短队列中。`handSize` 必须不大于 `queues`，并且应显著小于（这样就可以使一些重型流不饱和大多数队列）。请参阅用户手册以获取更详细的信息关于设置这个字段。此字段具有默认值为 8。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "queueLengthLimit": {
                                                                      "description": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50.",
                                                                      "descriptionCN": "队列长度限制是指该优先级下指定的队列中等待请求的最大数量；超出这个最大数量的请求将被拒绝。这个值必须是正数。如果没有指定，将会默认为50。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "queues": {
                                                                      "description": "`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64.",
                                                                      "descriptionCN": "此优先级级别下的队列数量。每个apiserver中的队列独立存在。值必须为正。将其设置为1，实际上阻止了随机排序，从而使关联流模式的区分方法变得无关紧要。这个字段默认值为64。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule": {
                                                              "description": "ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., `Namespace==\"\"`) and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.",
                                                              "descriptionCN": "资源策略规则是一个匹配一些资源请求的谓词，测试请求的动词和目标资源。如果资源策略规则匹配一个资源请求，则只有当：(a) 至少有一个动词与请求匹配；(b) 至少有一个apiGroup与请求匹配；(c) 至少有一个资源与请求匹配，并且(d) either (d1) 请求不指定命名空间（即，`Namespace==\"\"`) 和 clusterScope 是 true 或者 (d2) 请求指定了命名空间，并且至少有一个namespace 中的名称与请求的命名空间匹配。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "`apiGroups` is a list of matching API groups and may not be empty. \"*\" matches all API groups and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "`apiGroups` 是一个匹配的 API 组的列表，可能不为空。 \"*\" 匹配所有 API 组，并且如果有，则必须是唯一一项。必填项。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "clusterScope": {
                                                                      "description": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list.",
                                                                      "descriptionCN": "`clusterScope` 是表示是否匹配那些没有指定命名空间的请求（这可能是因为资源本身没有命名空间，或者请求的目标是所有的命名空间）。如果没有这个字段或者值为假，则 `namespaces` 字段必须包含非空列表。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "namespaces": {
                                                                      "description": "`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true.",
                                                                      "descriptionCN": "`namespaces` 是一个包含目标命名空间的列表，限制了匹配。 当请求指定目标命名空间时，它仅匹配如果 (a) 这个列表包含该目标命名空间或 (b) 这个列表包含 \"*\"。 注意， \"*\" 匹配任何指定的命名空间，但不匹配未指定命名空间（在 `clusterScope` 字段中查看）。 这个列表可以为空，但如果 `clusterScope` 为真，则只能为空。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "resources": {
                                                                      "description": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "资源列表是一系列匹配的资源（即小写和复数形式），如果需要，还可以包含子资源。例如，“服务”、“节点状态”。这个列表可能不为空。星号匹配所有资源，并且如果有，必须是唯一的一个。要求",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  },
                                                                  "verbs": {
                                                                      "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs and, if present, must be the only entry. Required.",
                                                                      "descriptionCN": "verbs 是一个匹配的动词列表，可能不为空。* 匹配所有动词，如果存在，则必须是唯一一项。必填项",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject": {
                                                              "description": "ServiceAccountSubject holds detailed information for service-account-kind subject.",
                                                              "descriptionCN": "服务账户主题包含了详细的服务帐户类型的信息。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name. Required.",
                                                                      "descriptionCN": "`name` 是匹配 ServiceAccount 对象的名称，或 `*` 以匹配无论名称如何。必填项。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "`namespace` is the namespace of matching ServiceAccount objects. Required.",
                                                                      "descriptionCN": "`namespace` 是匹配 ServiceAccount 对象的命名空间。要求。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.Subject": {
                                                              "description": "Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.",
                                                              "descriptionCN": "主题与请求的源头相对应，由请求认证系统进行识别。匹配起源者有三种方式：用户、组或服务账户。",
                                                              "properties": {
                                                                  "group": {
                                                                      "description": "`group` matches based on user group name.",
                                                                      "descriptionCN": "用户组名称进行匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.GroupSubject"
                                                                  },
                                                                  "kind": {
                                                                      "description": "`kind` indicates which one of the other fields is non-empty. Required",
                                                                      "descriptionCN": "“kind”表示其他字段中是否存在非空值。这是必须的。",
                                                                      "type": "string"
                                                                  },
                                                                  "serviceAccount": {
                                                                      "description": "`serviceAccount` matches ServiceAccounts.",
                                                                      "descriptionCN": "服务帐户与ServiceAccounts匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject"
                                                                  },
                                                                  "user": {
                                                                      "description": "`user` matches based on username.",
                                                                      "descriptionCN": "根据用户名进行匹配。",
                                                                      "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.UserSubject"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.flowcontrol.v1beta3.UserSubject": {
                                                              "description": "UserSubject holds detailed information for user-kind subject.",
                                                              "descriptionCN": "用户主题持有详细的信息用于用户类subject。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "`name` is the username that matches, or \"*\" to match all usernames. Required.",
                                                                      "descriptionCN": "\"name\" 是匹配的用户名，或者 \"*\" 来匹配所有用户名。必填。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.HTTPIngressPath": {
                                                              "description": "HTTPIngressPath associates a path with a backend. Incoming urls matching the path are forwarded to the backend.",
                                                              "descriptionCN": "HTTP Ingress Path 为路径与后端关联。匹配路径的输入URL被转发到后端。",
                                                              "properties": {
                                                                  "backend": {
                                                                      "description": "backend defines the referenced service endpoint to which the traffic will be forwarded to.",
                                                                      "descriptionCN": "后端定义了将流量转发到的参考服务端点。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/' and must be present when using PathType with value \"Exact\" or \"Prefix\".",
                                                                      "descriptionCN": "路径被与接收请求的路径进行匹配。目前它可以包含不受RFC 3986常规\"路径\"部分的URL定义中禁止的字符。路径必须以\"/\"开始，并且当使用PathType值为\"精确\"或\"前缀\"时必须存在。",
                                                                      "type": "string"
                                                                  },
                                                                  "pathType": {
                                                                      "description": "pathType determines the interpretation of the path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is\n  done on a path element by element basis. A path element refers is the\n  list of labels in the path split by the '/' separator. A request is a\n  match for path p if every p is an element-wise prefix of p of the\n  request path. Note that if the last element of the path is a substring\n  of the last element in request path, it is not a match (e.g. /foo/bar\n  matches /foo/bar/baz, but does not match /foo/barbaz).\n* ImplementationSpecific: Interpretation of the Path matching is up to\n  the IngressClass. Implementations can treat this as a separate PathType\n  or treat it identically to Prefix or Exact path types.\nImplementations are required to support all path types.",
                                                                      "descriptionCN": "路径类型决定了匹配的解释。PathType可以是以下之一：* 精确: 确保URL路径完全匹配。* 前缀: 根据分割号\"/\"对路径进行前缀匹配。在元素级别上进行匹配。一个路径元素是指分割路径使用的/分隔符的路径列表。请求是路径p如果请求中的每个p都是请求路径中p的子串前缀。注意，如果路径的最后一个元素是请求路径的最后一个元素的子串，则不是匹配（例如 /foo/bar 能够匹配 /foo_bar/baz，但不能匹配 /foo_barbaz）。* 实现特定：路径匹配的解释取决于IngressClass。实现可以在该类的基础上对其进行分离的PathType或等效于Prefix或Exact路径类型。实现需要支持所有路径类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.HTTPIngressRuleValue": {
                                                              "description": "HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
                                                              "descriptionCN": "HTTP IngressRuleValue 是一个列表，指向后端。在示例中：http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, 这个资源将用于匹配所有在最后一个'/'之前和第一个问号或'#'之后的URL内容。",
                                                              "properties": {
                                                                  "paths": {
                                                                      "description": "paths is a collection of paths that map requests to backends.",
                                                                      "descriptionCN": "路径是一个将请求映射到后端的集合。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressPath"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IPBlock": {
                                                              "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.0/24\",\"2001:db8::/64\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
                                                              "descriptionCN": "IPBlock 描述的是匹配 NetworkPolicySpec 的 podSelector 中的特定 CIDR (如 \"192.168.1.0/24\" 和 \"2001:db8::/64\")，该 IPBlock 被允许给这些符合规则的 pods。except 元组描述了不应该包含在这一规则中的 CIDRs。",
                                                              "properties": {
                                                                  "cidr": {
                                                                      "description": "cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "except": {
                                                                      "description": "except is a slice of CIDRs that should not be included within an IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\" Except values will be rejected if they are outside the cidr range",
                                                                      "descriptionCN": "\"except\" 是一个包含 CIDR 范围的切片，不应包含在 IPBlock 内。有效示例包括 \"192.168.1.0/24\" 或 \"2001:db8::/64\"。如果它们不在 CIDR 范围内，则会被拒绝。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.Ingress": {
                                                              "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
                                                              "descriptionCN": "接入是一个集合规则，允许入站连接到达定义在后端的端点。一个接入可以配置对外部可访问的URL、负载均衡流量、终止SSL、提供基于名称的虚拟主机等。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的规范。服务器应该将可识别的规范转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个字符串值，代表这个对象所代表的 REST 资源。服务器可以根据客户端向其提交请求时提供的 endpoint 确定这个值。不能被更新。在 camelCase 中表示。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "规格是指Ingress所需的最终状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态是Ingress当前的状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressBackend": {
                                                              "description": "IngressBackend describes all endpoints for a given service and port.",
                                                              "descriptionCN": "接入后端描述给定服务和端口的所有端点。",
                                                              "properties": {
                                                                  "resource": {
                                                                      "description": "resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with \"Service\".",
                                                                      "descriptionCN": "资源是一个ObjectRef到另一个Kubernetes资源在Ingress对象的命名空间中的值。如果resource被指定，service.Name和service.Port必须不被指定。这是与Service设置相互排斥的。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
                                                                  },
                                                                  "service": {
                                                                      "description": "service references a service as a backend. This is a mutually exclusive setting with \"Resource\".",
                                                                      "descriptionCN": "服务参考将服务作为后台。这是一个互斥设置与“资源”。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressServiceBackend"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressClass": {
                                                              "description": "IngressClass represents the class of the Ingress, referenced by the Ingress Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be used to indicate that an IngressClass should be considered default. When a single IngressClass resource has this annotation set to true, new Ingress resources without a class specified will be assigned this default class.",
                                                              "descriptionCN": "入侵类代表了由IngressSpec引用的入侵类型。`ingressclass.kubernetes.io/is-default-class`注解可以用来指示应将入侵类视为默认。当一个单个入侵类资源设置此标记为true时，未指定类的新入侵资源将被分配到这个默认类。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示的对象的结构化版本。服务器应该将识别到的规范转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的一串字符串值。服务器可以通过客户端提交请求时所指向的端点推测出这一点。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the desired state of the IngressClass. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "标准是IngressClass所期望的状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressClassList": {
                                                              "description": "IngressClassList is a collection of IngressClasses.",
                                                              "descriptionCN": "IngressClassList 是一个包含 IngressClasses 的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化结构。服务器应该将识别的结构转换为最新的内部值，如果遇到未识别的值，则可能拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of IngressClasses.",
                                                                      "descriptionCN": "items 是 IngressClasses 列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示此对象所代表的 REST 资源的字符串值。服务器可以根据客户端向其提交请求时提供的端点推测此值。不能更新。CamelCase 变体。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata.",
                                                                      "descriptionCN": "标准元数据列表。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressClassParametersReference": {
                                                              "description": "IngressClassParametersReference identifies an API object. This can be used to specify a cluster or namespace-scoped resource.",
                                                              "descriptionCN": "入侵类参数Reference是一个API对象。这可用于指定一个集群或命名空间范围内的资源。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "apiGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                                                                      "descriptionCN": "APIGroup是被引用的资源所在的组。如果没有指定APIGroup，那么指定的Kind必须在核心API组中。对于任何其他第三方类型，都需要有APIGroup。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind is the type of resource being referenced.",
                                                                      "descriptionCN": "种类是指正在引用的资源。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of resource being referenced.",
                                                                      "descriptionCN": "资源名。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "namespace is the namespace of the resource being referenced. This field is required when scope is set to \"Namespace\" and must be unset when scope is set to \"Cluster\".",
                                                                      "descriptionCN": "资源被引用的命名空间是其领域。当范围设置为\"Namespace\"时，此字段必须设置为NULL；当范围设置为\"Cluster\"时，此字段可以不设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "scope": {
                                                                      "description": "scope represents if this refers to a cluster or namespace scoped resource. This may be set to \"Cluster\" (default) or \"Namespace\".",
                                                                      "descriptionCN": "范围表示这是否指的是一个集群或命名空间 scoped 资源。这可以设置为 \"Cluster\" (默认) 或 \"Namespace\"。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressClassSpec": {
                                                              "description": "IngressClassSpec provides information about the class of an Ingress.",
                                                              "descriptionCN": "IngressClassSpec提供关于Ingress类的信息。",
                                                              "properties": {
                                                                  "controller": {
                                                                      "description": "controller refers to the name of the controller that should handle this class. This allows for different \"flavors\" that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \"acme.io/ingress-controller\". This field is immutable.",
                                                                      "descriptionCN": "控制器指的是应该处理此类的控制器名称。这允许通过相同的控制器控制不同的\"口味\"。例如，对于同一实现控制器的相同参数，您可能有不同的设置长度。在这种情况下，最多不超过250个字符的空间作为领域前缀，例如\"acme.io/ingress-controller\"。该字段是不可变的。",
                                                                      "type": "string"
                                                                  },
                                                                  "parameters": {
                                                                      "description": "parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.",
                                                                      "descriptionCN": "参数是一个链接到自定义资源的链接，其中包含控制器的额外配置。如果控制器不需要额外参数，则可以省略此参数。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassParametersReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressList": {
                                                              "description": "IngressList is a collection of Ingress.",
                                                              "descriptionCN": "入侵列表是一个包含入侵的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别到的结构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of Ingress.",
                                                                      "descriptionCN": "物品是入侵的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.Ingress"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型：表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时提供的endpoint来推测此。不能更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressLoadBalancerIngress": {
                                                              "description": "IngressLoadBalancerIngress represents the status of a load-balancer ingress point.",
                                                              "descriptionCN": "入站负载均衡器入站表示一个负载均衡器接入点的状态。",
                                                              "properties": {
                                                                  "hostname": {
                                                                      "description": "hostname is set for load-balancer ingress points that are DNS based.",
                                                                      "descriptionCN": "主机设置为基于DNS的负载均衡器入口点。",
                                                                      "type": "string"
                                                                  },
                                                                  "ip": {
                                                                      "description": "ip is set for load-balancer ingress points that are IP based.",
                                                                      "descriptionCN": "IP设置为基于IP的负载均衡器入点。",
                                                                      "type": "string"
                                                                  },
                                                                  "ports": {
                                                                      "description": "ports provides information about the ports exposed by this LoadBalancer.",
                                                                      "descriptionCN": "负载均衡器暴露的端口信息",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressPortStatus"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressLoadBalancerStatus": {
                                                              "description": "IngressLoadBalancerStatus represents the status of a load-balancer.",
                                                              "descriptionCN": "IngressLoadBalancerStatus表示负载均衡器的状态。",
                                                              "properties": {
                                                                  "ingress": {
                                                                      "description": "ingress is a list containing ingress points for the load-balancer.",
                                                                      "descriptionCN": "接入列表包含负载均衡器的接入点。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressLoadBalancerIngress"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressPortStatus": {
                                                              "description": "IngressPortStatus represents the error condition of a service port",
                                                              "descriptionCN": "IngressPortStatus表示服务端口的错误状态",
                                                              "properties": {
                                                                  "error": {
                                                                      "description": "error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.",
                                                                      "descriptionCN": "错误是记录服务端口问题。错误的格式应符合以下规则： - 内置错误值应在此文件中指定，且应使用 camelCase 名称。 - 云提供商特定的错误值必须有名称遵守 foo.example.com/CamelCase 格式。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "port is the port number of the ingress port.",
                                                                      "descriptionCN": "输入端口是流入端口的端口号。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "protocol is the protocol of the ingress port. The supported values are: \"TCP\", \"UDP\", \"SCTP\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressRule": {
                                                              "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
                                                              "descriptionCN": "允许规则代表将指定主机下的路径映射到相关的后端服务的规则。首先，对输入请求进行主机匹配，然后路由到与匹配IngressRuleValue关联的后端服务。",
                                                              "properties": {
                                                                  "host": {
                                                                      "description": "host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nhost can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.",
                                                                      "descriptionCN": "主机是指网络主机的完全限定域名，由RFC 3986定义。与 RFC 3986 中 \"host\" 部分的规定有所不同：1. IP 不允许使用。目前 IngressRuleValue 只能应用于父 Ingress 的 IP。2. `:` 分隔符不被尊重，因为端口不允许。目前 Ingress 的端口号默认为 http 和 https 的 80 和 443。这两者在未来可能会发生变化。对于请求，先在 Ingress 规则中匹配主机。如果主机为空，则根据指定的 Ingress 规则将所有流量路由到相应的规则。\n\n主机可以是 \"精确\" 或 \"野生卡\"，即没有网络主机（例如 \"foo.bar.com\"）或 \"任意卡\"，即带有单一 wildcard 标签的域名（例如 \"*.foo.com\"）。wildcard 符号必须以自身作为第一个 DNS 命名空间，并且只能匹配一个标签。单独拥有 wildcard 标签 (例如 Host == \"*\") 是不允许的（例如 Host = \"*\"）。当请求匹配 Host 字段时，会按照以下方式进行匹配：1. 如果 host 是精确的，如果 http 主机头部等于 Host，则请求匹配这个规则；2. 如果 host 是任意卡，那么请求将匹配这个规则，如果 http 主机头部等于 wildcard 管理器的前缀 (移除第一个命名空间)。",
                                                                      "type": "string"
                                                                  },
                                                                  "http": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请提供具体的文本，我会尽我最大的努力将其准确地翻译成中文。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressServiceBackend": {
                                                              "description": "IngressServiceBackend references a Kubernetes Service as a Backend.",
                                                              "descriptionCN": "IngressServiceBackend 将 Kubernetes Service 视为后端。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the referenced service. The service must exist in the same namespace as the Ingress object.",
                                                                      "descriptionCN": "该服务名称引用于Ingress对象。此服务必须在同一命名空间中与Ingress对象相同。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "port of the referenced service. A port name or port number is required for a IngressServiceBackend.",
                                                                      "descriptionCN": "引用的服务端口。IngressServiceBackend需要一个端口号或端号码。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.ServiceBackendPort"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressSpec": {
                                                              "description": "IngressSpec describes the Ingress the user wishes to exist.",
                                                              "descriptionCN": "IngressSpec描述用户希望存在的Ingress。",
                                                              "properties": {
                                                                  "defaultBackend": {
                                                                      "description": "defaultBackend is the backend that should handle requests that don't match any rule. If Rules are not specified, DefaultBackend must be specified. If DefaultBackend is not set, the handling of requests that do not match any of the rules will be up to the Ingress controller.",
                                                                      "descriptionCN": "默认后端是负责处理不符合任何规则的请求的后台。如果没有规则，需要指定DefaultBackend。如果没有设置DefaultBackend，则处理不符合任何规则的请求将取决于Ingress控制器。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
                                                                  },
                                                                  "ingressClassName": {
                                                                      "description": "ingressClassName is the name of an IngressClass cluster resource. Ingress controller implementations use this field to know whether they should be serving this Ingress resource, by a transitive connection (controller -> IngressClass -> Ingress resource). Although the `kubernetes.io/ingress.class` annotation (simple constant name) was never formally defined, it was widely supported by Ingress controllers to create a direct binding between Ingress controller and Ingress resources. Newly created Ingress resources should prefer using the field. However, even though the annotation is officially deprecated, for backwards compatibility reasons, ingress controllers should still honor that annotation if present.",
                                                                      "descriptionCN": "IngressClassName是IngressClass集群资源的名称。 ingress controller 实现使用此字段来了解它们是否应该服务这个Ingress资源，通过间接连接（控制器 -> IngressClass -> Ingress资源）。虽然`kubernetes.io/ingress.class`注解（简单常量名）从未被正式定义，但它是许多Ingress控制器用来直接将Ingress控制器和Ingress资源之间的绑定。新创建的Ingress资源应优先使用该字段。然而，即使注解已被正式废止，出于兼容性原因，Ingress控制器仍应尊重该注解。",
                                                                      "type": "string"
                                                                  },
                                                                  "rules": {
                                                                      "description": "rules is a list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.",
                                                                      "descriptionCN": "规则是一个用于配置Ingress的列表。如果未指定或没有规则匹配，所有流量都发送到默认后端。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressRule"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "tls": {
                                                                      "description": "tls represents the TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
                                                                      "descriptionCN": "TLS代表TLS配置。目前只有单个443端口支持，如果有多个列表的成员指定了不同的主机，则根据SNI扩展指定的主机名对端口进行复用，如果满足接入控制类别的ingress控制器支持SNI。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressTLS"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressStatus": {
                                                              "description": "IngressStatus describe the current state of the Ingress.",
                                                              "descriptionCN": "接入状态描述当前的接入状态。",
                                                              "properties": {
                                                                  "loadBalancer": {
                                                                      "description": "loadBalancer contains the current status of the load-balancer.",
                                                                      "descriptionCN": "负载均衡器包含当前负载均衡的状态。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IngressLoadBalancerStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.IngressTLS": {
                                                              "description": "IngressTLS describes the transport layer security associated with an ingress.",
                                                              "descriptionCN": "入侵TLS描述的是入站层安全。",
                                                              "properties": {
                                                                  "hosts": {
                                                                      "description": "hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
                                                                      "descriptionCN": "主机列表包含在TLS证书中。此列表中的值必须与tlsSecret中的名称/使用方式匹配。默认情况下，如果未指定将适用于负载均衡器控制器满足此Ingress的 wildcard host设置。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "secretName": {
                                                                      "description": "secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the \"Host\" header is used for routing.",
                                                                      "descriptionCN": "秘密名称是用于端口443上终止TLS流量的秘密。该字段可供根据SNI主机名进行TLS路由的灵活性，如果监听器中使用的SNI主机名与IngressRule中的\"Host\"头部字段冲突，则使用SNI主机名进行终结，并将值设置为\"Host\"头部字段。\n\n建议在“serverName”前添加“host.”，例如：“secretName.host.mydomain.com”。\n\n请注意，这只是一个示例翻译，实际的翻译可能会有所不同，取决于源语言和目标语言之间的具体差异。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicy": {
                                                              "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods",
                                                              "descriptionCN": "网络策略描述一组Pod允许的网络流量。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化的结构。服务器应该将识别的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推测出这一点。不能更新。 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec represents the specification of the desired behavior for this NetworkPolicy.",
                                                                      "descriptionCN": "\"spec\"指的是期望行为的网络政策规范。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
                                                              "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
                                                              "descriptionCN": "网络策略路由描述了由NetworkPolicySpec匹配的Pods中的特定流量，允许从该PodSelector匹配的所有端口流出。此类型为1.8beta版本。",
                                                              "properties": {
                                                                  "ports": {
                                                                      "description": "ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                                                                      "descriptionCN": "\"ports\"是一个出口端口列表。这个列表中的每个项目都是通过逻辑或运算符组合的。如果此字段为空或缺失，该规则匹配所有端口（不受端口限制的流量）。如果此字段存在并且至少包含一个项，则只有当所选流量与列表中列出的所有端口匹配时，此规则才允许流量。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                                                                      }
                                                                  },
                                                                  "to": {
                                                                      "description": "to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
                                                                      "descriptionCN": "\"这是给定规则中的输出交通项的列表。这个列表中的项目是通过逻辑或操作结合在一起的。如果该字段为空或缺失，此规则会匹配所有的目的地（不受目的地限制的交通）。如果该字段存在并且至少包含一个项目，此规则只允许符合至少一个项目的交通。\"",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
                                                              "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.",
                                                              "descriptionCN": "网络策略入站规则描述了匹配网络策略Spec的PodSelector指定的特定类型的流量。该流量必须匹配端口和来源。",
                                                              "properties": {
                                                                  "from": {
                                                                      "description": "from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.",
                                                                      "descriptionCN": "这个规则列表应该能够访问选择的Pods。其中列出的项是通过逻辑或操作结合在一起的。如果此字段为空或缺失，该规则匹配所有源（不受到源限制的流量）。如果此字段存在并且包含至少一项项，如果从列表中的流量匹配至少一项，则允许只允许从列表中的流量。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                                                                      }
                                                                  },
                                                                  "ports": {
                                                                      "description": "ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                                                                      "descriptionCN": "\"ports\" 是一个包含应使其在选定规则中的Pods上可用的端口列表。列表中的每个项都是通过逻辑或操作组合在一起的。如果该字段为空或缺失，这个规则会匹配所有的端口（不受端口限制的流量）。如果该字段存在，并且至少包含一个项目，则只有当流量匹配列表中的任一端口时，此规则才会允许流量。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicyList": {
                                                              "description": "NetworkPolicyList is a list of NetworkPolicy objects.",
                                                              "descriptionCN": "网络策略列表是一个包含网络策略对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是一个描述这个对象表示形式的版本化的结构化数据。服务器应该将可识别的结构转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of schema objects.",
                                                                      "descriptionCN": "物品是一个包含Schema对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicy"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推测出此。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicyPeer": {
                                                              "description": "NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed",
                                                              "descriptionCN": "网络策略伴侣描述了一个允许流量从或到的伙伴。仅允许某些字段组合。",
                                                              "properties": {
                                                                  "ipBlock": {
                                                                      "description": "ipBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.",
                                                                      "descriptionCN": "IPBlock定义了一个特定的IPBlock的政策。如果该字段被设置，则其他所有字段都无法设置。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock"
                                                                  },
                                                                  "namespaceSelector": {
                                                                      "description": "namespaceSelector selects namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf podSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the namespaces selected by namespaceSelector. Otherwise it selects all pods in the namespaces selected by namespaceSelector.",
                                                                      "descriptionCN": "命名空间选择器使用集群 scoped 标签。此字段遵循标准标签选择器语义；如果存在但为空，它将选择所有的命名空间。\n\n如果 podSelector 也设置，那么 NetworkPolicyPeer 全体会选择 namespaceSelector 在选定命名空间中的匹配的 pods。否则，它将在 namespaceSelector 选定的所有命名空间中的所有 pods 中选择。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "podSelector": {
                                                                      "description": "podSelector is a label selector which selects pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the pods matching podSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the pods matching podSelector in the policy's own namespace.",
                                                                      "descriptionCN": "PodSelector 是一个标签选择器，它选择 pods。该字段遵循标准的标签选择器语义；如果存在但为空，则选择所有的 pods。\n\n如果 namespaceSelector 也设置，那么整个 NetworkPolicyPeer 会根据 NamespaceSelector 中的选择的 pods 对policy 的命名空间进行选择。否则会选择 policy 自己的命名空间中的 pods。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicyPort": {
                                                              "description": "NetworkPolicyPort describes a port to allow traffic on",
                                                              "descriptionCN": "网络策略端口描述了一个允许在该端口上进行流量的端口。",
                                                              "properties": {
                                                                  "endPort": {
                                                                      "description": "endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.",
                                                                      "descriptionCN": "端口指示符表明，如果设置，则范围内的从端口到端口的允许范围内应该被政策允许。此字段在未定义port字段或port字段为命名（字符串）端口时不能定义。endPort必须等于或大于port。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "port": {
                                                                      "description": "port represents the port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.",
                                                                      "descriptionCN": "\"port\" 是指给定协议中的端口。它可以是数字或命名的端口在 Pod 中。如果没有提供这个字段，它将匹配所有端口号和数字。如果有提供，只有指定协议和端口的流量才会被匹配。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "protocol": {
                                                                      "description": "protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.",
                                                                      "descriptionCN": "协议表示必须匹配的传输层协议（TCP、UDP或SCTP）。如果没有指定，这个字段默认为TCP。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.NetworkPolicySpec": {
                                                              "description": "NetworkPolicySpec provides the specification of a NetworkPolicy",
                                                              "descriptionCN": "网络策略规范提供了一个网络策略的规格。",
                                                              "properties": {
                                                                  "egress": {
                                                                      "description": "egress is a list of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
                                                                      "descriptionCN": "出口规则列表，用于选中的Pod。如果有选择的网络策略（否则集群策略允许该流量），或者所有匹配PodSelector的NetworkPolicy对象的流量至少有一个出口规则，则允许外部流量。如果此字段为空，则该网络策略限制所有的外部流量（并只确保为所选择的Pod提供隔离）。该字段在1.8版本中处于beta阶段。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                                                                      }
                                                                  },
                                                                  "ingress": {
                                                                      "description": "ingress is a list of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
                                                                      "descriptionCN": "入站规则列表，用于指定选择的Pod中的入站规则。如果没有任何网络策略选择该Pod（并且集群政策也允许流量），则允许流量到Pod；或者如果流量源是Pod的本地节点，或者在所有匹配 podSelector 的NetworkPolicy 对象中至少有一个入站规则，则允许流量。如果没有此字段，则这个NetworkPolicy 不允许任何流量（并为确保它所选择的Pod是默认隔离的）",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                                                                      }
                                                                  },
                                                                  "podSelector": {
                                                                      "description": "podSelector selects the pods to which this NetworkPolicy object applies. The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
                                                                      "descriptionCN": "网络政策对象选择要应用于哪些Pod的podSelector。字段中的数组应用于该字段所选的所有Pod。可以为同一集设置多个网络政策。在这种情况下，每个 ingress 规则加总起来。此字段并非可选，遵循标准的标签选择语义。空的podSelector匹配这个namespace内的所有Pod。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "policyTypes": {
                                                                      "description": "policyTypes is a list of rule types that the NetworkPolicy relates to. Valid options are [\"Ingress\"], [\"Egress\"], or [\"Ingress\", \"Egress\"]. If this field is not specified, it will default based on the existence of ingress or egress rules; policies that contain an egress section are assumed to affect egress, and all policies (whether or not they contain an ingress section) are assumed to affect ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \"Egress\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \"Egress\" (since such a policy would not include an egress section and would otherwise default to just [ \"Ingress\" ]). This field is beta-level in 1.8",
                                                                      "descriptionCN": "网络策略的类型列表，由NetworkPolicy关联。有效选项包括“入站”、“出站”或“入站/出站”。如果该字段未指定，则默认基于入站或出站规则的存在；包含出站部分的政策被认为是影响出站，所有（无论是是否包含入站部分）的政策被视为影响入站。如果你想写一个只影响出站的政策，你需要明确指定policyTypes [ \"出站\" ]。同样，如果你想写一个只禁止出站的政策，你必须明确指定policyTypes值中包含“出站”的（因为这样的政策将不包含出站部分，并且将会默认为仅包含[ \"入站\" ]）。此字段在1.8版本处于beta级。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1.ServiceBackendPort": {
                                                              "description": "ServiceBackendPort is the service port being referenced.",
                                                              "descriptionCN": "服务端口是被引用的服务端口。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the name of the port on the Service. This is a mutually exclusive setting with \"Number\".",
                                                                      "descriptionCN": "名称是服务上的港口设置。这是与\"Number\"互斥的设置。",
                                                                      "type": "string"
                                                                  },
                                                                  "number": {
                                                                      "description": "number is the numerical port number (e.g. 80) on the Service. This is a mutually exclusive setting with \"Name\".",
                                                                      "descriptionCN": "数字是服务中的数字端口（例如80）。这是与“名字”互斥的设置。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.IPAddress": {
                                                              "description": "IPAddress represents a single IP of a single IP Family. The object is designed to be used by APIs that operate on IP addresses. The object is used by the Service core API for allocation of IP addresses. An IP address can be represented in different formats, to guarantee the uniqueness of the IP, the name of the object is the IP address in canonical format, four decimal digits separated by dots suppressing leading zeros for IPv4 and the representation defined by RFC 5952 for IPv6. Valid: 192.168.1.5 or 2001:db8::1 or 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1 Invalid: 10.01.2.3 or 2001:db8:0:0:0::1",
                                                              "descriptionCN": "IP地址表示单个IP家族中的一个。该对象旨在用于操作IP地址的API。该对象由Service核心API用于分配IP地址。 IP地址可以以不同的格式表示，以确保IP的独特性，对象的名称是其在标准形式下的IP地址，四个点后跟着零作为IPv4和RFC 5952定义的表示。有效：192.168.1.5 或 2001:db8::1 或 2001:db8:aaaa:bbbb:cccc:dddd:eeee:1无效：10.01.2.3 或 2001:db8:0:0:0::1",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别到的结构转换为内部最新值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时使用的端点推断出此值。不能被更新。在CamelCase中表示。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the desired state of the IPAddress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "协议是IPv4地址的期望状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.IPAddressSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.IPAddressList": {
                                                              "description": "IPAddressList contains a list of IPAddress.",
                                                              "descriptionCN": "IP地址列表包含一个IP地址的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的可版本化的结构。服务器应该将识别的规范转换为内部最新的值，如果识别到不正确的值，则拒绝该值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of IPAddresses.",
                                                                      "descriptionCN": "Items 是 IP 地址的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.IPAddress"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示这个对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时提交的端点推测出这一点。无法更新。使用CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.IPAddressSpec": {
                                                              "description": "IPAddressSpec describe the attributes in an IP Address.",
                                                              "descriptionCN": "IP地址规范描述了IP地址的属性。",
                                                              "properties": {
                                                                  "parentRef": {
                                                                      "description": "ParentRef references the resource that an IPAddress is attached to. An IPAddress must reference a parent object.",
                                                                      "descriptionCN": "资源引用通过IPv4地址附加到的资源。IPv4地址必须引用父对象。",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ParentReference"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.ParentReference": {
                                                              "description": "ParentReference describes a reference to a parent object.",
                                                              "descriptionCN": "parentReference描述一个指向父对象的引用。",
                                                              "properties": {
                                                                  "group": {
                                                                      "description": "Group is the group of the object being referenced.",
                                                                      "descriptionCN": "该组是由被引用的对象组成的。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of the object being referenced.",
                                                                      "descriptionCN": "对象的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace is the namespace of the object being referenced.",
                                                                      "descriptionCN": "对象被引用的命名空间是其所属的对象的命名空间。",
                                                                      "type": "string"
                                                                  },
                                                                  "resource": {
                                                                      "description": "Resource is the resource of the object being referenced.",
                                                                      "descriptionCN": "资源是被引用的对象的资源。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.ServiceCIDR": {
                                                              "description": "ServiceCIDR defines a range of IP addresses using CIDR format (e.g. 192.168.0.0/24 or 2001:db2::/64). This range is used to allocate ClusterIPs to Service objects.",
                                                              "descriptionCN": "服务CIDR定义了一种使用CIDR格式（例如192.168.0.0/24或2001:db2::/64）的IP地址范围。这个范围被用来为Service对象分配ClusterIPs。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化 schema。服务器应该将可识别的 schema 转换为最新的内部值，如果发现不认可的值，则可能拒绝。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能会根据客户端提交请求时提交的端点推测这一点。无法更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the desired state of the ServiceCIDR. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "规格是ServiceCIDR的理想状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDRSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status represents the current state of the ServiceCIDR. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "状态代表了ServiceCIDR的当前状态。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDRStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.ServiceCIDRList": {
                                                              "description": "ServiceCIDRList contains a list of ServiceCIDR objects.",
                                                              "descriptionCN": "服务CIDRList包含一个服务CIDR对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化结构。服务器应该将可识别的模式转换为最新的内部值，如果不可接受，则可能拒绝不熟悉的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of ServiceCIDRs.",
                                                                      "descriptionCN": "\"items\"是ServiceCIDRs列表的名称。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.networking.v1alpha1.ServiceCIDR"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型为REST资源，服务器根据客户端向其提交请求的端点推测此对象所代表的字符串值。无法被更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.ServiceCIDRSpec": {
                                                              "description": "ServiceCIDRSpec define the CIDRs the user wants to use for allocating ClusterIPs for Services.",
                                                              "descriptionCN": "服务CIDRsRSpec定义用户希望分配用于Service的ClusterIPs的 CIDRs。",
                                                              "properties": {
                                                                  "cidrs": {
                                                                      "description": "CIDRs defines the IP blocks in CIDR notation (e.g. \"192.168.0.0/24\" or \"2001:db8::/64\") from which to assign service cluster IPs. Max of two CIDRs is allowed, one of each IP family. This field is immutable.",
                                                                      "descriptionCN": "CIDR 是一种 IP 区块格式，其中的 IP 区块（例如 \"192.168.0.0/24\" 或者 \"2001:db8::/64\"）从其中分配服务集群 IP。最多允许两个 CIDR，每个 IP 类别的一个。这个字段是不可变的。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.networking.v1alpha1.ServiceCIDRStatus": {
                                                              "description": "ServiceCIDRStatus describes the current state of the ServiceCIDR.",
                                                              "descriptionCN": "服务CIDR状态描述了当前ServiceCIDR的状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "conditions holds an array of metav1.Condition that describe the state of the ServiceCIDR. Current service state",
                                                                      "descriptionCN": "条件数组中包含metav1.Condition对象，这些对象描述服务CIDR的状态。当前的服务状态",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.node.v1.Overhead": {
                                                              "description": "Overhead structure represents the resource overhead associated with running a pod.",
                                                              "descriptionCN": "高空结构代表运行Pod所需的资源资源。",
                                                              "properties": {
                                                                  "podFixed": {
                                                                      "description": "podFixed represents the fixed resource overhead associated with running a pod.",
                                                                      "descriptionCN": "PodFixed 表示运行 Pod 的固定资源占用。",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.node.v1.RuntimeClass": {
                                                              "description": "RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://kubernetes.io/docs/concepts/containers/runtime-class/",
                                                              "descriptionCN": "运行类定义了一个在集群中支持的容器运行器类。运行类用于确定在pod中的所有容器使用哪种运行器。运行类是用户或集群提供者手动定义的，通过PodSpec引用。Kubelet在运行 pod之前负责解决RuntimeClassName引用。更多详细信息，请参阅https://kubernetes.io/docs/concepts/containers/runtime-class/",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别的架构转换为最新的内部值，如果无法识别，则可能拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "handler": {
                                                                      "description": "handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called \"runc\" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must be lowercase, conform to the DNS Label (RFC 1123) requirements, and is immutable.",
                                                                      "descriptionCN": "处理器指定CRI实现将使用底层的运行时和配置来处理这种类的Pod。可能的价值取决于节点和CRI配置。假设所有的处理器都在每台机器上可用，并且具有相同名称的处理器在每台机器上是等效的。例如，一个名为\"runc\"的处理器可能会指定runc基于自然Linux容器使用的OCI运行环境（使用本地Linux容器）将在Pod中的容器中运行。处理器必须小写，符合DNS命名规范，并不可变。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个表示该对象所代表的 REST 资源的字符串值。服务器可以根据客户端向 API 发送请求时提交的 endpoint 来推测这个值。无法被更新。使用 CamelCase 变形。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "overhead": {
                                                                      "description": "overhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see\n https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/",
                                                                      "descriptionCN": "空中代表着运行给定RuntimeClass的Pod所相关的资源 overhead。详情，请参阅：https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/",
                                                                      "$ref": "#/definitions/io.k8s.api.node.v1.Overhead"
                                                                  },
                                                                  "scheduling": {
                                                                      "description": "scheduling holds the scheduling constraints to ensure that pods running with this RuntimeClass are scheduled to nodes that support it. If scheduling is nil, this RuntimeClass is assumed to be supported by all nodes.",
                                                                      "descriptionCN": "调度器定义了对运行时类的调度限制，以确保运行时类运行在支持该RuntimeClass的节点上。如果调度是nil，则默认假设所有节点都支持该RuntimeClass。",
                                                                      "$ref": "#/definitions/io.k8s.api.node.v1.Scheduling"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.node.v1.RuntimeClassList": {
                                                              "description": "RuntimeClassList is a list of RuntimeClass objects.",
                                                              "descriptionCN": "RuntimeClassList 是一个包含 RuntimeClass 对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化的结构。服务器应该将可识别的格式转换为内部最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is a list of schema objects.",
                                                                      "descriptionCN": "物品是一个列表，包含schema对象。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.node.v1.RuntimeClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一种表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时提供的端点推测这一点。不能更新。在驼峰命名法中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准的元数据列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.node.v1.Scheduling": {
                                                              "description": "Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.",
                                                              "descriptionCN": "调度指定支持运行类的节点的调度约束。",
                                                              "properties": {
                                                                  "nodeSelector": {
                                                                      "description": "nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.",
                                                                      "descriptionCN": "NodeSelector 是指支持运行时类的节点上的必须存在的标签列表。使用这种运行时类的Pod只能在匹配这个selector的节点上被调度。RuntimeClass 的 NodeSelector 会被 pod 的现有 NodeSelector 合并。任何冲突都会导致 Pod 在 admission 中被拒绝。",
                                                                      "type": "object"
                                                                  },
                                                                  "tolerations": {
                                                                      "description": "tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.",
                                                                      "descriptionCN": "在运行类的运行期间，给运行类运行的Pod附加容忍性（排除重复）。这有效地将Pod接受到的节点集和运行类允许的节点集进行联合。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.policy.v1.Eviction": {
                                                              "description": "Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
                                                              "descriptionCN": "驱逐法驱逐了一个节点上的Pod，根据某些政策和安全约束。这是Pod的一个子资源。发起这样的驱逐请求的是通过POST到.../pods/<pod name>/evictions来完成的。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的版本化的数据结构。服务器应该将识别到的规范转换为内部的最新值，同时可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "deleteOptions": {
                                                                      "description": "DeleteOptions may be provided",
                                                                      "descriptionCN": "删除选项可能提供。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个字符串值，表示这个对象所代表的REST资源。服务器可以根据客户端提交请求的端点来推断这个值。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "ObjectMeta describes the pod that is being evicted.",
                                                                      "descriptionCN": "对象元描述正在被移除的Pod。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.policy.v1.PodDisruptionBudget": {
                                                              "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods",
                                                              "descriptionCN": "PodDisruptionBudget 是一个用于定义一组Pod可能会造成的最大破坏性的对象。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是这个对象表示形式的版本化的架构定义。服务器应该将识别的结构转换为内部的最新值，如果识别的值不被接受，则可能会拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的 REST 资源的字符串值。服务器可能通过客户端提交请求时使用的端点推断出这个字符串。不能被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Specification of the desired behavior of the PodDisruptionBudget.",
                                                                      "descriptionCN": "理想的PodDisruptionBudget规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Most recently observed status of the PodDisruptionBudget.",
                                                                      "descriptionCN": "最近观察到的PodDisruptionBudget状态。",
                                                                      "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.policy.v1.PodDisruptionBudgetList": {
                                                              "description": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
                                                              "descriptionCN": "PodDisruptionBudgetList 是 PodDisruptionBudgets 的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示的可变架构版本。服务器应将识别的架构转换为内部值的最新状态，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of PodDisruptionBudgets",
                                                                      "descriptionCN": "项目是PodDisruptionBudgets的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudget"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示此对象所代表的REST资源的一个字符串值。服务器可以根据客户端向服务器提交请求时提交的端点推断出这个字符串值。不能被更新。 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.policy.v1.PodDisruptionBudgetSpec": {
                                                              "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
                                                              "descriptionCN": "\"PodDisruptionBudgetSpec\" 是 PodDisruptionBudget 的描述。",
                                                              "properties": {
                                                                  "maxUnavailable": {
                                                                      "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
                                                                      "descriptionCN": "如果至少 \"selector\" 选择的 \"maxUnavailable\" 私有Pod 在被移除后不可用，则允许提前移除。例如，可以通过指定 0 来阻止所有自愿撤离。与 \"minAvailable\" 设置互斥。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "minAvailable": {
                                                                      "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
                                                                      "descriptionCN": "如果在“selector”所选择的至少100%的Pod仍然可用，则允许撤离。例如，你可以通过指定“100%”来防止所有自愿撤离。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                                                                  },
                                                                  "selector": {
                                                                      "description": "Label query over pods whose evictions are managed by the disruption budget. A null selector will match no pods, while an empty ({}) selector will select all pods within the namespace.",
                                                                      "descriptionCN": "根据Disruption Budget管理的Pod，标签查询。null选择器将匹配没有Pod，而空括号（{}）选择器将选择整个namespace内的所有Pod。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
                                                                      "x-kubernetes-patch-strategy": "replace"
                                                                  },
                                                                  "unhealthyPodEvictionPolicy": {
                                                                      "description": "UnhealthyPodEvictionPolicy defines the criteria for when unhealthy pods should be considered for eviction. Current implementation considers healthy pods, as pods that have status.conditions item with type=\"Ready\",status=\"True\".\n\nValid policies are IfHealthyBudget and AlwaysAllow. If no policy is specified, the default behavior will be used, which corresponds to the IfHealthyBudget policy.\n\nIfHealthyBudget policy means that running pods (status.phase=\"Running\"), but not yet healthy can be evicted only if the guarded application is not disrupted (status.currentHealthy is at least equal to status.desiredHealthy). Healthy pods will be subject to the PDB for eviction.\n\nAlwaysAllow policy means that all running pods (status.phase=\"Running\"), but not yet healthy are considered disrupted and can be evicted regardless of whether the criteria in a PDB is met. This means perspective running pods of a disrupted application might not get a chance to become healthy. Healthy pods will be subject to the PDB for eviction.\n\nAdditional policies may be added in the future. Clients making eviction decisions should disallow eviction of unhealthy pods if they encounter an unrecognized policy in this field.\n\nThis field is beta-level. The eviction API uses this field when the feature gate PDBUnhealthyPodEvictionPolicy is enabled (enabled by default).",
                                                                      "descriptionCN": "健康Pod移除政策定义了当不健康的Pod何时应考虑移除的条件。当前实现考虑健康Pod，因为健康Pod的状态条件项类型为\"Ready\"状态和\"True\"状态。\n有效策略包括IfHealthyBudget和AlwaysAllow。如果没有指定策略，则默认行为将使用，这对应于IfHealthyBudget策略。\nIfHealthyBudget策略意味着运行的Pod（阶段为\"运行\"），但还没有健康的Pod可以被踢出除非被中断的应用程序的状态健康度至少等于期望的健康度。健康的Pod将受到PDB的移除。\nAlwaysAllow策略意味着所有运行的Pod（阶段为“运行”），但还没有健康的Pod可以被踢出，无论是否满足PDB中的标准。这意味着对受到中断的应用程序视角下的静止Pod可能无法变得健康。健康的Pod将受到PDB的移除。\n未来可以添加更多的策略。在这一领域做出移除决策的客户端应该禁止移除不健康的Pod，如果他们在该字段中遇到未识别的政策。\n这个字段是 beta 级别的。当 PDBUnhealthyPodEvictionPolicy 特性启用时（默认启用）API 使用此字段。\n",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.policy.v1.PodDisruptionBudgetStatus": {
                                                              "description": "PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.",
                                                              "descriptionCN": "PodDisruptionBudgetStatus是一个关于PodDisruptionBudget状态的信息。状态可能滞后于系统的真实状态。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "Conditions contain conditions for PDB. The disruption controller sets the DisruptionAllowed condition. The following are known values for the reason field (additional reasons could be added in the future): - SyncFailed: The controller encountered an error and wasn't able to compute\n              the number of allowed disruptions. Therefore no disruptions are\n              allowed and the status of the condition will be False.\n- InsufficientPods: The number of pods are either at or below the number\n                    required by the PodDisruptionBudget. No disruptions are\n                    allowed and the status of the condition will be False.\n- SufficientPods: There are more pods than required by the PodDisruptionBudget.\n                  The condition will be True, and the number of allowed\n                  disruptions are provided by the disruptionsAllowed property.",
                                                                      "descriptionCN": "条件包含条件。中断控制器设置DisruptionAllowed条件。原因字段（未来可以添加其他原因）的已知值为：- SyncFailed: 指令遇到错误，无法计算允许的中断数量。因此，不允许中断，并状态将为False。 - InsufficientPods: 租户中的 pod 数量要么低于 PodDisruptionBudget 规定的数量，要么不允许中断。状态为False。 - SufficientPods: 租户中的 pod 数量大于 PodDisruptionBudget 规定的数量。条件为True，允许中断的数量由 disruptionsAllowed 属性提供。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "currentHealthy": {
                                                                      "description": "current number of healthy pods",
                                                                      "descriptionCN": "当前健康的囊数量",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "desiredHealthy": {
                                                                      "description": "minimum desired number of healthy pods",
                                                                      "descriptionCN": "最小期望的健康Pod数量",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "disruptedPods": {
                                                                      "description": "DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.",
                                                                      "descriptionCN": "DisruptedPods 包含有关 API 服务器 Eviction subresource handler 处理的 pod 的信息，但尚未由 PodDisruptionBudget controller 观察到。在从 API 服务器处理 eviction 请求到 PodDisruptionBudget controller 视为删除（或超时）的时间点之前，该 pod 将出现在该映射中。映射中的键是 pod 名称，值是 API 服务器处理 eviction 请求的时间。如果删除未发生且 Pod 在一些时间后仍然存在，PodDisruptionBudget controller 自动会从列表中移除它。如果一切都顺利进行，则映射应为空，大多数时间点都应该是空的。映射中的大量条目可能表明 pod 删除问题。",
                                                                      "type": "object"
                                                                  },
                                                                  "disruptionsAllowed": {
                                                                      "description": "Number of pod disruptions that are currently allowed.",
                                                                      "descriptionCN": "目前允许的Pod中断数量。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "expectedPods": {
                                                                      "description": "total number of pods counted by this disruption budget",
                                                                      "descriptionCN": "这项中断预算下的总共有多少个Pod。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "Most recent generation observed when updating this PDB status. DisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation.",
                                                                      "descriptionCN": "最近的版本被观察到更新这个PDB状态。只有当观察到生成等于pdb的物体生成时，其他状态信息才是有效的。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.AggregationRule": {
                                                              "description": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole",
                                                              "descriptionCN": "聚合规则描述了如何将ClusterRoles定位到ClusterRole中。",
                                                              "properties": {
                                                                  "clusterRoleSelectors": {
                                                                      "description": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added",
                                                                      "descriptionCN": "簇角色选择器持有一个列表，用于查找簇角色并创建规则。如果其中任何一个选择器匹配，则将簇角色的权限添加到中。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.ClusterRole": {
                                                              "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
                                                              "descriptionCN": "角色组是集群级别、逻辑分组的PolicyRule，可以通过RoleBinding或ClusterRoleBinding引用作为一个单位。",
                                                              "properties": {
                                                                  "aggregationRule": {
                                                                      "description": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.",
                                                                      "descriptionCN": "聚合规则是一个可选字段，描述如何建立这个ClusterRole中的规则。如果设置AggregationRule，则规则由控制器管理并直接对规则进行更改，而不会被控制器阻止。",
                                                                      "$ref": "#/definitions/io.k8s.api.rbac.v1.AggregationRule"
                                                                  },
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化结构。服务器应该将识别的结构转换为内部最新值，并可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示该对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时使用的端点推断出这个字段。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "rules": {
                                                                      "description": "Rules holds all the PolicyRules for this ClusterRole",
                                                                      "descriptionCN": "规则规定了此集群角色的所有政策。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.ClusterRoleBinding": {
                                                              "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
                                                              "descriptionCN": "命名空间角色绑定引用集群角色，但不包含。它可以引用全局命名空间中的集群角色，并通过Subject添加用户信息。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的版本化结构。服务器应该将可识别的结构转换为最新的内部值，如果拒绝不可识别的值，则可能拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示此对象所代表的REST资源的字符串值。服务器可以从客户端提交请求时推断出该值。无法更新。使用CamelCase命名约定。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "roleRef": {
                                                                      "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
                                                                      "descriptionCN": "角色引用只能在全局命名空间中引用ClusterRole。如果角色引用无法解析，授权者必须返回错误。此字段是不可变的。",
                                                                      "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
                                                                  },
                                                                  "subjects": {
                                                                      "description": "Subjects holds references to the objects the role applies to.",
                                                                      "descriptionCN": "主题包含对应用角色的对象的引用。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.ClusterRoleBindingList": {
                                                              "description": "ClusterRoleBindingList is a collection of ClusterRoleBindings",
                                                              "descriptionCN": "ClusterRoleBindingList是一个集合 ClusterRoleBindings",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可版本化表示形式。服务器应该将识别到的规范转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of ClusterRoleBindings",
                                                                      "descriptionCN": "Items是一个ClusterRoleBinding列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示这个对象所代表的REST资源的一种字符串值。服务器可能从客户端提交请求时推测出这一点。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.ClusterRoleList": {
                                                              "description": "ClusterRoleList is a collection of ClusterRoles",
                                                              "descriptionCN": "簇角色列表是一个包含簇角色的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的 schema。服务器应该将识别到的 schema 转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of ClusterRoles",
                                                                      "descriptionCN": "Items 是一组 ClusterRoles 的列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRole"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求的端点推断出这一点。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.PolicyRule": {
                                                              "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
                                                              "descriptionCN": "政策规则包含了描述一个政策规则的信息，但没有包含关于该规则适用于谁或哪个命名空间的信息。",
                                                              "properties": {
                                                                  "apiGroups": {
                                                                      "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.",
                                                                      "descriptionCN": "APIGroups是包含资源的APIGroup的名称。如果指定多个API组，针对任何在任何一个API组中列出的资源进行的任何操作都将被允许。\n\n\"\"代表核心API组和\"*\"代表所有API组。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "nonResourceURLs": {
                                                                      "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
                                                                      "descriptionCN": "非资源URLs是一组部分的URL，用户应该有访问权限。 *s 是允许的，但仅作为路径的完整、最终步骤，由于非资源URL不命名，这个字段只能应用于由ClusterRoleBinding引用的ClusterRole规则。规则可以应用于API资源（如\"pods\"或\"secrets\"）或非资源URL路径（如\"/api\"），但不能同时。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "resourceNames": {
                                                                      "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
                                                                      "descriptionCN": "资源名称是一个可选的白名单，其中规则适用于。一个空集合表示一切被允许。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "resources": {
                                                                      "description": "Resources is a list of resources this rule applies to. '*' represents all resources.",
                                                                      "descriptionCN": "资源是一个规则适用的资源列表。'*'代表所有资源。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "verbs": {
                                                                      "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.",
                                                                      "descriptionCN": "\"Verbs\" 是这个规则中包含的所有ResourceKind类型的词汇列表。'*'代表所有词汇。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.Role": {
                                                              "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
                                                              "descriptionCN": "角色是一个命名空间，逻辑分组的PolicyRules，可以通过RoleBinding引用作为一个单位。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示对象的版本化结构。服务器应该将识别的架构转换为最新的内部值，并可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端向其提交请求时提供的端点推断出这个字段。不能被更新。在CamelCase形式下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "rules": {
                                                                      "description": "Rules holds all the PolicyRules for this Role",
                                                                      "descriptionCN": "规则规定了这个角色的所有政策。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.RoleBinding": {
                                                              "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
                                                              "descriptionCN": "角色引用一个角色，但不包含它。它可以参考同一个命名空间中的Role，也可以在全局命名空间中参考ClusterRole。它通过Subject和命名空间信息添加人员信息。给定的命名空间的角色绑定仅在该命名空间中有效。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的版本化结构。服务器应该将识别的结构转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind是表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推测出这个。不能被更新。以CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "roleRef": {
                                                                      "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
                                                                      "descriptionCN": "角色引用可以指向当前命名空间中的一个角色或全局命名空间中的ClusterRole。如果角色引用无法解析，授权器必须返回错误。这个字段是不可变的。",
                                                                      "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
                                                                  },
                                                                  "subjects": {
                                                                      "description": "Subjects holds references to the objects the role applies to.",
                                                                      "descriptionCN": "主题包含与应用对象相关的参考。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.RoleBindingList": {
                                                              "description": "RoleBindingList is a collection of RoleBindings",
                                                              "descriptionCN": "角色绑定列表是一个包含角色绑定的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化模式。服务器应该将识别的模式转换为最新的内部值，如果未识别，则可能拒绝不认可的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of RoleBindings",
                                                                      "descriptionCN": "Items是一个RoleBindings列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleBinding"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型表示这个对象所代表的REST资源。服务器可以从客户端提交请求的端点推测出这一点。不能被更新。在CamelCase中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.RoleList": {
                                                              "description": "RoleList is a collection of Roles",
                                                              "descriptionCN": "角色列表是一个包含角色的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化规范。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is a list of Roles",
                                                                      "descriptionCN": "Items 是一个角色列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.rbac.v1.Role"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示此对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时的端点推断出这个字符串。不能被更新。使用CamelCase命名方式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata.",
                                                                      "descriptionCN": "标准对象的元数据。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.RoleRef": {
                                                              "description": "RoleRef contains information that points to the role being used",
                                                              "descriptionCN": "角色引用包含用于使用的角色信息。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced",
                                                                      "descriptionCN": "APIGroup是用于引用的资源的组。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the type of resource being referenced",
                                                                      "descriptionCN": "友善是被引用的资源类型。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced",
                                                                      "descriptionCN": "名字是所引用的资源的名字。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.rbac.v1.Subject": {
                                                              "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
                                                              "descriptionCN": "主题包含对角色绑定的对象或用户身份的引用。这可以是直接API对象引用，也可以是对于非对象（如用户和组名）的值。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                                                                      "descriptionCN": "APIGroup拥有被引用主题的API组。默认情况下，为ServiceAccount subjects。默认情况下，为User和Group subjects。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                                                                      "descriptionCN": "该API组所引用的类型对象。定义在此API组中的值为\"User\", \"Group\",和\"ServiceAccount\"。如果Authorizer不识别类型值，应该报告错误。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the object being referenced.",
                                                                      "descriptionCN": "被引用的对象的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
                                                                      "descriptionCN": "被引用的对象的命名空间。 如果对象类型是非命名空间，如\"User\"或\"Group\"，并且此值不为空，那么授权器应该报告错误。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.AllocationResult": {
                                                              "description": "AllocationResult contains attributes of an allocated resource.",
                                                              "descriptionCN": "分配结果包含分配资源的属性。",
                                                              "properties": {
                                                                  "availableOnNodes": {
                                                                      "description": "This field will get set by the resource driver after it has allocated the resource to inform the scheduler where it can schedule Pods using the ResourceClaim.\n\nSetting this field is optional. If null, the resource is available everywhere.",
                                                                      "descriptionCN": "这个字段将在资源驱动器分配资源后设置，以通知调度器在何处使用ResourceClaim为Pod分配资源。设置此字段是可选的。如果为空，则该资源可供所有地方使用。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
                                                                  },
                                                                  "resourceHandles": {
                                                                      "description": "ResourceHandles contain the state associated with an allocation that should be maintained throughout the lifetime of a claim. Each ResourceHandle contains data that should be passed to a specific kubelet plugin once it lands on a node. This data is returned by the driver after a successful allocation and is opaque to Kubernetes. Driver documentation may explain to users how to interpret this data if needed.\n\nSetting this field is optional. It has a maximum size of 32 entries. If null (or empty), it is assumed this allocation will be processed by a single kubelet plugin with no ResourceHandle data attached. The name of the kubelet plugin invoked will match the DriverName set in the ResourceClaimStatus this AllocationResult is embedded in.",
                                                                      "descriptionCN": "资源handle包含分配时应保持的与申请状态关联的状态。每个资源handle都包含用于一旦该节点降落在其上的特定kubelet插件需要的数据。在分配成功后，驱动程序将返回此数据并对Kubernetes透明。如果用户需要了解如何解释这个数据，驱动程序文档可能会说明如何执行。设置这个字段是可选的。最大大小为32条记录。如果为空（或为null），它默认假设这个分配将由单个kubelet插件处理，没有ResourceHandle数据附着。在该AllocationResult嵌入的ResourceClaimStatus中设置的kubelet插件名称将匹配DriverName。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceHandle"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "shareable": {
                                                                      "description": "Shareable determines whether the resource supports more than one consumer at a time.",
                                                                      "descriptionCN": "可分享性决定了资源是否支持一次同时使用多个消费者。",
                                                                      "type": "boolean"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.PodSchedulingContext": {
                                                              "description": "PodSchedulingContext objects hold information that is needed to schedule a Pod with ResourceClaims that use \"WaitForFirstConsumer\" allocation mode.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
                                                              "descriptionCN": "PodSchedulingContext 对象包含用于为使用 \"WaitForFirstConsumer\" 充分利用资源的 Pod 设置所需的信息。这是一个 alpha 类型，需要启用 DynamicResourceAllocation 功能栅格。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象表示形式的版本化 schema。服务器应将识别的schema转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推测出这一点。不能被更新。在CamelCase形式中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata",
                                                                      "descriptionCN": "标准对象元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec describes where resources for the Pod are needed.",
                                                                      "descriptionCN": "资源需求描述Pod中的资源位置。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status describes where resources for the Pod can be allocated.",
                                                                      "descriptionCN": "状态描述了用于Pod的资源可以分配的位置。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.PodSchedulingContextList": {
                                                              "description": "PodSchedulingContextList is a collection of Pod scheduling objects.",
                                                              "descriptionCN": "Pod调度上下文列表是一个包含 Pod 调度对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化 schema。服务器应该将识别到的schema转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of PodSchedulingContext objects.",
                                                                      "descriptionCN": "项目列表是PodSchedulingContext对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.PodSchedulingContext"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的 REST 资源的字符串值。服务器可能根据客户端向其提交请求时提供的 endpoint 确定这一点。不能更新。在 camelCase 下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata",
                                                                      "descriptionCN": "标准列表元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec": {
                                                              "description": "PodSchedulingContextSpec describes where resources for the Pod are needed.",
                                                              "descriptionCN": "PodSchedulingContextSpec 描述了 Pod 所需资源的位置。",
                                                              "properties": {
                                                                  "potentialNodes": {
                                                                      "description": "PotentialNodes lists nodes where the Pod might be able to run.\n\nThe size of this field is limited to 128. This is large enough for many clusters. Larger clusters may need more attempts to find a node that suits all pending resources. This may get increased in the future, but not reduced.",
                                                                      "descriptionCN": "潜在节点列表，其中Pod可能能够运行的节点。此字段大小限制为128。这足够大的用于许多集群。大型集群可能需要更多尝试来找到一个满足所有待用资源的节点。这在未来可能会增加，但不会减少。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "selectedNode": {
                                                                      "description": "SelectedNode is the node for which allocation of ResourceClaims that are referenced by the Pod and that use \"WaitForFirstConsumer\" allocation is to be attempted.",
                                                                      "descriptionCN": "被选中的节点就是那些Pod引用的资源索赔，使用\"等待第一个消费者\"分配的节点。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus": {
                                                              "description": "PodSchedulingContextStatus describes where resources for the Pod can be allocated.",
                                                              "descriptionCN": "PodSchedulingContextStatus描述了 Pod 中可用的资源位置。",
                                                              "properties": {
                                                                  "resourceClaims": {
                                                                      "description": "ResourceClaims describes resource availability for each pod.spec.resourceClaim entry where the corresponding ResourceClaim uses \"WaitForFirstConsumer\" allocation mode.",
                                                                      "descriptionCN": "资源 claim 描述了每个 pod.spec.resourceClaim 表中的每个资源 claim 使用 \"WaitForFirstConsumer\" 分配模式下的资源可用性。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaim": {
                                                              "description": "ResourceClaim describes which resources are needed by a resource consumer. Its status tracks whether the resource has been allocated and what the resulting attributes are.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
                                                              "descriptionCN": "资源请求描述了哪个资源是需求的。其状态跟踪了该资源是否已被分配，以及产生的属性是什么。这是一个 alpha 类型，并需要启用 DynamicResourceAllocation 功能门。\n\n请注意，翻译过程中可能会遗漏一些细节，因此如果可能的话，请提供原文，以便我能够尽可能准确地为您翻译。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将识别到的规范转换为内部最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可以从客户端提交请求时推断出这一点。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata",
                                                                      "descriptionCN": "标准对象元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec describes the desired attributes of a resource that then needs to be allocated. It can only be set once when creating the ResourceClaim.",
                                                                      "descriptionCN": "\"规格描述所期望的资源属性，然后需要分配。只能在创建ResourceClaim时设置一次。\"",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status describes whether the resource is available and with which attributes.",
                                                                      "descriptionCN": "状态描述了资源是否可用以及具有哪些属性。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference": {
                                                              "description": "ResourceClaimConsumerReference contains enough information to let you locate the consumer of a ResourceClaim. The user must be a resource in the same namespace as the ResourceClaim.",
                                                              "descriptionCN": "资源 claim 消费者引用包含足够的信息，让你能够找到 ResourceClaim 的消费者。用户必须是 ResourceClaim 在同个命名空间中的消费者。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
                                                                      "descriptionCN": "APIGroup 是引用的资源所在的组。对于核心 API，它是空的。这与创建资源时使用的 APIVersion 组相匹配。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced.",
                                                                      "descriptionCN": "名字是被引用的资源的名字。",
                                                                      "type": "string"
                                                                  },
                                                                  "resource": {
                                                                      "description": "Resource is the type of resource being referenced, for example \"pods\".",
                                                                      "descriptionCN": "资源是被引用的类型，例如\"pods\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID identifies exactly one incarnation of the resource.",
                                                                      "descriptionCN": "UID标识的是资源的唯一化身。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimList": {
                                                              "description": "ResourceClaimList is a collection of claims.",
                                                              "descriptionCN": "资源ClaimList是一个集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这个对象表示形式的版本化 schema 的定义。服务器应该将识别的 schema 转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of resource claims.",
                                                                      "descriptionCN": "物品是资源声称的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaim"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型为REST资源的字符串值，表示这个对象所代表的服务器可能会根据客户端提交请求时的endpoint推断。无法更新。以CamelCase形式命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata",
                                                                      "descriptionCN": "标准元数据列表",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference": {
                                                              "description": "ResourceClaimParametersReference contains enough information to let you locate the parameters for a ResourceClaim. The object must be in the same namespace as the ResourceClaim.",
                                                              "descriptionCN": "资源Claim参数参考包含足够的信息，可以让你定位到ResourceClaim的参数。该对象必须在同一命名空间中。\n\n详细说明：\n1. ResourceClaim参数Reference：这是指特定类型的资源请求的参数参考。\n2. Namespace：表示参数所属的命名空间，用于区分不同类型的资源请求参数。\n3. ClaimType：表明参数类型，如“namespaces”、“actions”或“health”等。\n4. Parameters：指定需要查找的资源请求参数列表。\n5. Name：标识每个参数名称，可以是字符串、数字或其他标识符。\n6. Type：描述每个参数的类型，如字符串、数值或列表等。\n7. Description：对参数的简要描述，可帮助用户理解参数的作用和范围。\n8. DisplayName：指定每个参数的显示名称，用于在资源控制器中使用。\n9. Conditions：列出可用于验证请求参数的有效性或安全性的条件。\n10. Location：提供一个文件或目录路径，以便从其他位置获取参数定义。\n11. Size：指定参数可能占用的空间大小。\n12. Timeout：表示在请求超时之前返回的延迟时间。\n13. Rotateable：指定参数是否可滚动，如果为true则允许动态滚动。\n14. PathSegmentation：指出参数的分隔符。\n15. InputPathSegmentation：指出参数的输入分隔符。\n16. OutputPathSegmentation：指出参数的输出分隔符。\n17. RequiredBy：指示哪些活动（资源控制器）需要使用此参数。\n18. DescriptionLocation：提供了用于进一步描述参数定义的位置。\n19. Summary：提供了关于参数的一般描述。\n20. AllOf：列出所有支持的所有参数类型。\n21. DoesNotMatch：列出不支持的所有参数类型。\n22. From: 起始值，可选\n23. To: 结束值，可选\n24. MaximumLength: 参数的最大长度，默认为1024个字符\n25. MinimumLength: 参数的最小长度，默认为256个字符",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
                                                                      "descriptionCN": "APIGroup 是引用的资源所在的组。对于核心 API，它是空的。这与创建资源时使用的 APIVersion 组相匹配。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the type of resource being referenced. This is the same value as in the parameter object's metadata, for example \"ConfigMap\".",
                                                                      "descriptionCN": "\"善良\"是被引用的资源类型。这与参数对象的元数据中\"ConfigMap\"中的值相同。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced.",
                                                                      "descriptionCN": "名称是被引用的资源的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus": {
                                                              "description": "ResourceClaimSchedulingStatus contains information about one particular ResourceClaim with \"WaitForFirstConsumer\" allocation mode.",
                                                              "descriptionCN": "资源 claim scheduling status 包含关于特定的 资源 claim 的信息，该资源 claim 使用 \"等待第一个消费者\" 分配模式。",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name matches the pod.spec.resourceClaims[*].Name field.",
                                                                      "descriptionCN": "名称与pod.spec.resourceClaims[*].Name字段匹配。",
                                                                      "type": "string"
                                                                  },
                                                                  "unsuitableNodes": {
                                                                      "description": "UnsuitableNodes lists nodes that the ResourceClaim cannot be allocated for.\n\nThe size of this field is limited to 128, the same as for PodSchedulingSpec.PotentialNodes. This may get increased in the future, but not reduced.",
                                                                      "descriptionCN": "不合适的节点列表，该资源申请不能分配给的节点。此字段的大小限制为128，与PodSchedulingSpec.PotentialNodes相同。未来可能会增加这个限制，但不会减少。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimSpec": {
                                                              "description": "ResourceClaimSpec defines how a resource is to be allocated.",
                                                              "descriptionCN": "资源 claim spec 定义了如何分配资源。",
                                                              "properties": {
                                                                  "allocationMode": {
                                                                      "description": "Allocation can start immediately or when a Pod wants to use the resource. \"WaitForFirstConsumer\" is the default.",
                                                                      "descriptionCN": "分配可以在立即进行，也可以在Pod想要使用资源时进行。\"WaitForFirstConsumer\"是默认值。",
                                                                      "type": "string"
                                                                  },
                                                                  "parametersRef": {
                                                                      "description": "ParametersRef references a separate object with arbitrary parameters that will be used by the driver when allocating a resource for the claim.\n\nThe object must be in the same namespace as the ResourceClaim.",
                                                                      "descriptionCN": "参数Ref引用一个具有任意参数的单独对象，该对象将在分配资源给索赔时使用。该对象必须在同一命名空间中与ResourceClaim。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimParametersReference"
                                                                  },
                                                                  "resourceClassName": {
                                                                      "description": "ResourceClassName references the driver and additional parameters via the name of a ResourceClass that was created as part of the driver deployment.",
                                                                      "descriptionCN": "\"ResourceClassName\"引用了驱动及其附加参数通过命名的资源类创建。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimStatus": {
                                                              "description": "ResourceClaimStatus tracks whether the resource has been allocated and what the resulting attributes are.",
                                                              "descriptionCN": "资源ClaimStatus跟踪是否已经分配了资源，以及结果的属性是什么。",
                                                              "properties": {
                                                                  "allocation": {
                                                                      "description": "Allocation is set by the resource driver once a resource or set of resources has been allocated successfully. If this is not specified, the resources have not been allocated yet.",
                                                                      "descriptionCN": "资源分配是由资源驱动器设置的，一旦已成功分配或已分配的一组资源。如果没有指定，则这些资源尚未分配。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.AllocationResult"
                                                                  },
                                                                  "deallocationRequested": {
                                                                      "description": "DeallocationRequested indicates that a ResourceClaim is to be deallocated.\n\nThe driver then must deallocate this claim and reset the field together with clearing the Allocation field.\n\nWhile DeallocationRequested is set, no new consumers may be added to ReservedFor.",
                                                                      "descriptionCN": "请求释放表明资源租约应被释放。然后，司机必须回收并清理分配字段。\n\n在请求释放设置时，不会新增任何预留的消费者。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "driverName": {
                                                                      "description": "DriverName is a copy of the driver name from the ResourceClass at the time when allocation started.",
                                                                      "descriptionCN": "分配开始时，从ResourceClass中获取的驱动名是DriverName。",
                                                                      "type": "string"
                                                                  },
                                                                  "reservedFor": {
                                                                      "description": "ReservedFor indicates which entities are currently allowed to use the claim. A Pod which references a ResourceClaim which is not reserved for that Pod will not be started.\n\nThere can be at most 32 such reservations. This may get increased in the future, but not reduced.",
                                                                      "descriptionCN": "预留用例指示哪些实体目前可以使用此声称。与该Pod关联的ResourceClaim，如果未预留用于该Pod，则不会启动。\n\n最多有32个这样的预留用例。未来可能会增加，但不会减少。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimConsumerReference"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "uid"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimTemplate": {
                                                              "description": "ResourceClaimTemplate is used to produce ResourceClaim objects.",
                                                              "descriptionCN": "资源 claim template用于生成ResourceClaim对象。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化 schema。服务器应该将识别的 schema 转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示该对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时提供的端点来推断此值。不能更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata",
                                                                      "descriptionCN": "标准对象元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Describes the ResourceClaim that is to be generated.\n\nThis field is immutable. A ResourceClaim will get created by the control plane for a Pod when needed and then not get updated anymore.",
                                                                      "descriptionCN": "这个字段是不可变的。当需要时，资源 claim 将由控制平面为 Pod 创建并不再更新。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateList": {
                                                              "description": "ResourceClaimTemplateList is a collection of claim templates.",
                                                              "descriptionCN": "资源请求模板列表是一个集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化表示形式。服务器应该将识别到的格式转换为内部最近值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of resource claim templates.",
                                                                      "descriptionCN": "项目列表是资源要求模板的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimTemplate"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示该对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时提供的端点推测这个值。不能被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata",
                                                                      "descriptionCN": "标准列表元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClaimTemplateSpec": {
                                                              "description": "ResourceClaimTemplateSpec contains the metadata and fields for a ResourceClaim.",
                                                              "descriptionCN": "资源 claim template spec 包含了一个关于 ResourceClaim 的元数据和字段信息。",
                                                              "properties": {
                                                                  "metadata": {
                                                                      "description": "ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
                                                                      "descriptionCN": "对象Meta可能包含标签和注释，这些注释将在创建PVC时复制。不允许其他字段，并在验证过程中被拒绝。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.",
                                                                      "descriptionCN": "资源申请描述模板中所有的内容都被复制并直接存入从这个模板创建的资源申请描述中。在资源申请描述中，与ResourceClaim中的字段相同的所有字段也是有效的。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClaimSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClass": {
                                                              "description": "ResourceClass is used by administrators to influence how resources are allocated.\n\nThis is an alpha type and requires enabling the DynamicResourceAllocation feature gate.",
                                                              "descriptionCN": "资源类是由管理员用来控制资源分配的方式的。这是一个alpha版本，需要启用动态资源分配功能开关。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化结构。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "driverName": {
                                                                      "description": "DriverName defines the name of the dynamic resource driver that is used for allocation of a ResourceClaim that uses this class.\n\nResource drivers have a unique name in forward domain order (acme.example.com).",
                                                                      "descriptionCN": "资源驱动器在其后域（acme.example.com）有一个独特的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "kind 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可能根据客户端向它们提交请求时提供的端点来推断出这一点。不能被更新。使用 camelCase 编写。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata",
                                                                      "descriptionCN": "标准对象元数据",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "parametersRef": {
                                                                      "description": "ParametersRef references an arbitrary separate object that may hold parameters that will be used by the driver when allocating a resource that uses this class. A dynamic resource driver can distinguish between parameters stored here and and those stored in ResourceClaimSpec.",
                                                                      "descriptionCN": "参数引用了一个任意的独立对象，它可能包含用于分配使用此类的资源时使用的参数。动态资源驱动程序可以区分在这里存储的参数和在ResourceClaimSpec中存储的参数。",
                                                                      "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClassParametersReference"
                                                                  },
                                                                  "suitableNodes": {
                                                                      "description": "Only nodes matching the selector will be considered by the scheduler when trying to find a Node that fits a Pod when that Pod uses a ResourceClaim that has not been allocated yet.\n\nSetting this field is optional. If null, all nodes are candidates.",
                                                                      "descriptionCN": "只有与选中的 selector 相匹配的节点才会在尝试找到一个 Pod 使用未分配的 ResourceClaim 时被调度器考虑。如果为 null，则所有节点都是候选者。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClassList": {
                                                              "description": "ResourceClassList is a collection of classes.",
                                                              "descriptionCN": "资源类列表是一个集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了此对象的版本化表示形式。服务器应将识别的规范转换为内部最新值，同时可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of resource classes.",
                                                                      "descriptionCN": "物品列表是资源类的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.resource.v1alpha2.ResourceClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一个表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推断出这一点。不能更新。使用CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata",
                                                                      "descriptionCN": "标准元数据列表",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceClassParametersReference": {
                                                              "description": "ResourceClassParametersReference contains enough information to let you locate the parameters for a ResourceClass.",
                                                              "descriptionCN": "资源类参数引用中包含了足够的信息，以让你定位到ResourceClass的参数。",
                                                              "properties": {
                                                                  "apiGroup": {
                                                                      "description": "APIGroup is the group for the resource being referenced. It is empty for the core API. This matches the group in the APIVersion that is used when creating the resources.",
                                                                      "descriptionCN": "APIGroup 是参考的资源所在的组。对于核心 API，它是空的。这与创建资源时使用的 APIVersion 组别相匹配。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is the type of resource being referenced. This is the same value as in the parameter object's metadata.",
                                                                      "descriptionCN": "善良是被引用的类型。这个值与参数对象的元数据相同。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name is the name of resource being referenced.",
                                                                      "descriptionCN": "名字是指正在引用的资源的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace that contains the referenced resource. Must be empty for cluster-scoped resources and non-empty for namespaced resources.",
                                                                      "descriptionCN": "包含引用资源的命名空间。对于集群范围内的资源，必须为空；对于命名空间内的资源，必须不为空。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.resource.v1alpha2.ResourceHandle": {
                                                              "description": "ResourceHandle holds opaque resource data for processing by a specific kubelet plugin.",
                                                              "descriptionCN": "资源handle持有专用于处理特定kubernetes插件的不透明资源数据。",
                                                              "properties": {
                                                                  "data": {
                                                                      "description": "Data contains the opaque data associated with this ResourceHandle. It is set by the controller component of the resource driver whose name matches the DriverName set in the ResourceClaimStatus this ResourceHandle is embedded in. It is set at allocation time and is intended for processing by the kubelet plugin whose name matches the DriverName set in this ResourceHandle.\n\nThe maximum size of this field is 16KiB. This may get increased in the future, but not reduced.",
                                                                      "descriptionCN": "数据包含了与这个ResourceHandle关联的不可见数据。这是由资源驱动器控制器中的名称匹配DriverName的组件设置的。它是分配时间设置的，并且是为kubelet插件设置的，其名称与这个ResourceHandle中的DriverName相匹配。此字段的最大大小为16KiB。在未来可能会有所增加，但不会减少。",
                                                                      "type": "string"
                                                                  },
                                                                  "driverName": {
                                                                      "description": "DriverName specifies the name of the resource driver whose kubelet plugin should be invoked to process this ResourceHandle's data once it lands on a node. This may differ from the DriverName set in ResourceClaimStatus this ResourceHandle is embedded in.",
                                                                      "descriptionCN": "资源驱动名称指定的是在此 ResourceHandle 资源上的 kubelet 插件应该被调用以处理其数据。这可能与在 ResourceClaimStatus 中设置的 DriverName 不同。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.scheduling.v1.PriorityClass": {
                                                              "description": "PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.",
                                                              "descriptionCN": "优先级类定义了名称与优先级整数值之间的映射。整数值可以是任何有效的整数。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的形式的版本化结构。服务器应该将可识别的结构转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "description": {
                                                                      "description": "description is an arbitrary string that usually provides guidelines on when this priority class should be used.",
                                                                      "descriptionCN": "描述是一个任意的字符串，通常用于说明当优先级类应该使用时应该使用的指导。",
                                                                      "type": "string"
                                                                  },
                                                                  "globalDefault": {
                                                                      "description": "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.",
                                                                      "descriptionCN": "全局默认指定，如果Pod中没有优先级类，则这个PriorityClass应被视为默认优先级。一个PriorityClass只能被标记为`globalDefault`。然而，如果有多个PriorityClasses具有`globalDefault`字段设置为true，并且最小的全局默认优先级类的值被设置，那么使用最小的全局默认优先级类的值作为默认优先级。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一种表示这个对象所代表的REST资源的字符串值。服务器可以从客户端提交请求的端点推测这一点。不能更新。 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "preemptionPolicy": {
                                                                      "description": "preemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset.",
                                                                      "descriptionCN": "预调策略是用于优先级较低的Pod的策略。当设置为Never或PreemptLowerPriority时，会自动重置。如果没有设置，则默认重置为PreemptLowerPriority。",
                                                                      "type": "string"
                                                                  },
                                                                  "value": {
                                                                      "description": "value represents the integer value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.",
                                                                      "descriptionCN": "优先级表示这个优先级类的整数值。这是当pods在他们的pod spec中包含该类的名字时，它们实际接收的优先级。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.scheduling.v1.PriorityClassList": {
                                                              "description": "PriorityClassList is a collection of priority classes.",
                                                              "descriptionCN": "优先级列表是一个包含优先级类的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的可变表示形式。服务器应该将识别的规范转换为最新的内部值，如果发现不熟悉的值，则可能拒绝。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of PriorityClasses",
                                                                      "descriptionCN": "项目列表是PriorityClasses",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.scheduling.v1.PriorityClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示此对象所代表的REST资源的一个字符串值。服务器可能通过客户端提交请求的端点推断这一点。不能被更新。在驼峰命名法中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSIDriver": {
                                                              "description": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
                                                              "descriptionCN": "CSIDriver捕获集群部署的Container Storage Interface (CSI)卷驱动器的信息。Kubernetes attach detach控制器使用此对象确定是否需要附加。Kubelet使用此对象确定是否需要将Pod信息传递到挂载点。CSIDriver对象是非命名空间化的。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的序列化版本。服务器应该将识别的格式转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示该对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时使用的端点来推测这个值。不能被更新。使用CamelCase命名方式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata. metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象元数据。metadata.name表示这个对象引用的CSI驱动器的名字；它必须与该驱动器在CSI GetPluginName()方法中返回的名称相同。驱动器名称必须少于63个字符，以字母（a-z）、数字（0-9）和下划线（_）开始，并且在中间有介于这些字符之间的点、点、字母（a-z）、数字（0-9）和介于这些字符之间的点、点、字母（a-z）、数字（0-9）。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec represents the specification of the CSI Driver.",
                                                                      "descriptionCN": "“spec”代表CSI驱动的规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriverSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSIDriverList": {
                                                              "description": "CSIDriverList is a collection of CSIDriver objects.",
                                                              "descriptionCN": "CSIDriverList是一个包含CSIDriver对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的形式的版本化模式。服务器应该将识别的模式转换为最新的内部值，如果接收到未识别的值，则可能会拒绝它。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of CSIDriver",
                                                                      "descriptionCN": "物品是CSIDriver的列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriver"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示该对象所代表的REST资源的字符串值。服务器可能根据客户端向其提交请求时提供的端点推断出这个字段。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据 更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSIDriverSpec": {
                                                              "description": "CSIDriverSpec is the specification of a CSIDriver.",
                                                              "descriptionCN": "CSIDriverSpec 是 CSIDriver 的规格。",
                                                              "properties": {
                                                                  "attachRequired": {
                                                                      "description": "attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.\n\nThis field is immutable.",
                                                                      "descriptionCN": "附加要求表明，这个CSI驱动器需要一个附加操作（因为它实现CSI控制器发布Volume()方法），并且Kubernetes的附加分离控制器应该调用volume插件接口来检查卷状态，并在卷被连接前等待。CSI外部-接入协调者与CSI驱动器协作更新卷状态，当附加操作完成后。如果CSIDriverRegistry特征开关启用且值为false，则将进行附加操作。否则将执行附加操作。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "fsGroupPolicy": {
                                                                      "description": "fsGroupPolicy defines if the underlying volume supports changing ownership and permission of the volume before being mounted. Refer to the specific FSGroupPolicy values for additional details.\n\nThis field is immutable.\n\nDefaults to ReadWriteOnceWithFSType, which will examine each volume to determine if Kubernetes should modify ownership and permissions of the volume. With the default policy the defined fsGroup will only be applied if a fstype is defined and the volume's access mode contains ReadWriteOnce.",
                                                                      "descriptionCN": "FSGroupPolicy定义了在挂载之前卷的所有权和权限是否可以被改变。参阅特定的FSGroupPolicy值以获取更多详细信息。\n\n这个字段是不可变的。\n\n默认设置为ReadWriteOnceWithFSType，它将检查每个卷以确定Kubernetes是否应该修改卷的所有权和权限。默认策略下，定义的fsGroup只会在定义的fsType和卷访问模式中包含ReadWriteOnce时应用。",
                                                                      "type": "string"
                                                                  },
                                                                  "podInfoOnMount": {
                                                                      "description": "podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations, if set to true. If set to false, pod information will not be passed on mount. Default is false.\n\nThe CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext.\n\nThe following VolumeContext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \"csi.storage.k8s.io/pod.name\": pod.Name \"csi.storage.k8s.io/pod.namespace\": pod.Namespace \"csi.storage.k8s.io/pod.uid\": string(pod.UID) \"csi.storage.k8s.io/ephemeral\": \"true\" if the volume is an ephemeral inline volume\n                                defined by a CSIVolumeSource, otherwise \"false\"\n\n\"csi.storage.k8s.io/ephemeral\" is a new feature in Kubernetes 1.16. It is only required for drivers which support both the \"Persistent\" and \"Ephemeral\" VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.\n\nThis field is immutable.",
                                                                      "descriptionCN": "CsiDriver指示，在挂载操作期间，如果设置为true，则该CSI驱动器需要附加额外的pod信息（如podName, podUID等）。如果设置为false，pod信息将不会被传递到挂载。默认值为false。\n\nCsiDriver指定PodInfoOnMount作为驱动部署的一部分。如果设置为true，则Kubelet将在CSI NodePublishVolume()调用中将Pod信息传递为VolumeContext。CSI驱动器负责解析和验证通过VolumeContext传入的信息。\n\n如果设置为true，并且volume是CSIVolumeSource定义的由EphemeralVolumeSource创建的ephemeral inline volume，那么将向\"csi.storage.k8s.io/pod.name\": pod.Name \"csi.storage.k8s.io/pod.namespace\": pod.Namespace \"csi.storage.k8s.io/pod.uid\": string(pod.UID) \"csi.storage.k8s.io/ephemeral\": \"true\" 这个字段传递。否则，将会忽略这个字段。\n\n\"csi.storage.k8s.io/ephemeral\"是 Kubernetes 1.16 中的一个新特性。它仅在支持“持久”和“异步”VolumeLifecycleMode 的驱动程序上可用。其他驱动器可以将pod信息禁用或忽略此字段。由于 Kubernetes 1.15 不支持此字段，只有当在这样的集群上部署时，才能支持一个模式，而且部署决定哪种模式，例如使用驱动器命令行参数。\n\n这个字段是不可变的。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "requiresRepublish": {
                                                                      "description": "requiresRepublish indicates the CSI driver wants `NodePublishVolume` being periodically called to reflect any possible change in the mounted volume. This field defaults to false.\n\nNote: After a successful initial NodePublishVolume call, subsequent calls to NodePublishVolume should only update the contents of the volume. New mount points will not be seen by a running container.",
                                                                      "descriptionCN": "需要重发布指示CSI驱动器希望`NodePublishVolume`被定期调用，以反映 mounted volume中的任何可能变化。此字段默认为false。\n\n注意：在成功首次NodePublishVolume调用后，后续的NodePublishVolume调用应仅更新volume的内容。新挂载点将不会被正在运行的容器看到。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "seLinuxMount": {
                                                                      "description": "seLinuxMount specifies if the CSI driver supports \"-o context\" mount option.\n\nWhen \"true\", the CSI driver must ensure that all volumes provided by this CSI driver can be mounted separately with different `-o context` options. This is typical for storage backends that provide volumes as filesystems on block devices or as independent shared volumes. Kubernetes will call NodeStage / NodePublish with \"-o context=xyz\" mount option when mounting a ReadWriteOncePod volume used in Pod that has explicitly set SELinux context. In the future, it may be expanded to other volume AccessModes. In any case, Kubernetes will ensure that the volume is mounted only with a single SELinux context.\n\nWhen \"false\", Kubernetes won't pass any special SELinux mount options to the driver. This is typical for volumes that represent subdirectories of a bigger shared filesystem.\n\nDefault is \"false\".",
                                                                      "descriptionCN": "挂载时指定\"CSI驱动器支持\"-o context\" mount选项。\n\n当为\"true\"，则该CSI驱动器必须确保所有由此CSI驱动器提供的卷可以独立使用不同 `-o context` 选项进行挂载。这在提供块设备或独立共享卷的存储后端中是常见的。Kubernetes会在Pod中调用NodeStage / NodePublish，并将\"-o context=xyz\"挂载选项传递给读写一次pod中的使用了明确设置SELinux上下文的Pod的volume。未来，可能会扩大到其他访问模式。无论如何，Kubernetes都会确保仅使用一个 SELinux上下文来挂载该卷。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "storageCapacity": {
                                                                      "description": "storageCapacity indicates that the CSI volume driver wants pod scheduling to consider the storage capacity that the driver deployment will report by creating CSIStorageCapacity objects with capacity information, if set to true.\n\nThe check can be enabled immediately when deploying a driver. In that case, provisioning new volumes with late binding will pause until the driver deployment has published some suitable CSIStorageCapacity object.\n\nAlternatively, the driver can be deployed with the field unset or false and it can be flipped later when storage capacity information has been published.\n\nThis field was immutable in Kubernetes <= 1.22 and now is mutable.",
                                                                      "descriptionCN": "存储容量指示卷驱动器希望Pod调度考虑驱动部署将报告的存储容量。如果设置为true，则可以启用检查。\n\n当部署驱动时，立即进行检查。在这种情况下，在发布一些合适的CSIStorageCapacity对象之前，会暂停新创建的卷。\n\n另一种方法是将该字段设为未赋值或false，并稍后在存储容量信息被发布后将其翻转。此字段在Kubernetes <= 1.22中不可变，现在可变。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "tokenRequests": {
                                                                      "description": "tokenRequests indicates the CSI driver needs pods' service account tokens it is mounting volume for to do necessary authentication. Kubelet will pass the tokens in VolumeContext in the CSI NodePublishVolume calls. The CSI driver should parse and validate the following VolumeContext: \"csi.storage.k8s.io/serviceAccount.tokens\": {\n  \"<audience>\": {\n    \"token\": <token>,\n    \"expirationTimestamp\": <expiration timestamp in RFC3339>,\n  },\n  ...\n}\n\nNote: Audience in each TokenRequest should be different and at most one token is empty string. To receive a new token after expiry, RequiresRepublish can be used to trigger NodePublishVolume periodically.",
                                                                      "descriptionCN": "tokenRequests指示CSI驱动器需要为其正在挂载的卷提供服务帐户令牌，以进行必要的身份验证。Kubelet将在CSI NodePublishVolume调用中将这些令牌传递给CSI驱动器的VolumeContext。CSI驱动器应解析并验证以下VolumeContext：\"csi.storage.k8s.io/serviceAccount.tokens\": {\r\n  \"<audience>\": {\r\n    \"token\": <token>,\n    \"expirationTimestamp\": <expiration timestamp in RFC3339>,\n  },\n  ...\n}\n\n注意: 在每个TokenRequest中的 Audience都需要不同，并且最多只能有一个空字符串。为了在到期后接收新的令牌， requiresRepublish可以用于定期触发NodePublishVolume。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.TokenRequest"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "volumeLifecycleModes": {
                                                                      "description": "volumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is \"Persistent\", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism.\n\nThe other mode is \"Ephemeral\". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume.\n\nFor more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.\n\nThis field is beta. This field is immutable.",
                                                                      "descriptionCN": "卷生命周期模式定义了这个CSI驱动器支持的哪种类型的卷。如果列表为空，则默认设置为“持久”，这是由CSI规范定义并由Kubernetes通过PV/PVC机制实现的。\n\n其他模式是“异步”。在这一模式下，卷是在Podspec中直接定义的，并且生命周期与该Pod的生命周期相连接。驱动器必须知道这一点，因为它只会得到NodePublishVolume的调用，对于这样的卷。\n\n关于如何实施这一模式的信息，请参阅：https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html 一个驱动器可以支持其中的一种或多种模式，未来可能还会有更多的模式添加。\n\n此字段处于beta阶段。此字段不可变。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-list-type": "set"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSINode": {
                                                              "description": "CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
                                                              "descriptionCN": "节点存储所有安装在该节点上的CSI驱动程序的信息。CSI驱动不需要直接创建CSINode对象。只要他们使用node-driver-registrar的侧car容器，Kubelet就会自动为CSI驱动器作为kubelet插件注册的一部分填充CSINode对象。CSINode与Node的名称相同。如果对象不存在，则表示该节点上没有可用的CSIDriver，或者Kubelet版本太低，无法创建这个对象。CSINode有一个指向相应节点对象的OwnerReference属性。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的可变模型。服务器应该将识别的模式转换为最新的内部值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是表示这个对象所代表的REST资源的字符串值。服务器可以从客户端提交请求时推测出这个信息。不能被更新。在CamelCase下。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. metadata.name must be the Kubernetes node name.",
                                                                      "descriptionCN": "标准对象的元数据。元数据.name必须是Kubernetes节点名称。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec is the specification of CSINode",
                                                                      "descriptionCN": "Csinode是CSINode的规格。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeSpec"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSINodeDriver": {
                                                              "description": "CSINodeDriver holds information about the specification of one CSI driver installed on a node",
                                                              "descriptionCN": "CSINodeDriver 保存了节点上安装的CSI驱动器的规格信息。",
                                                              "properties": {
                                                                  "allocatable": {
                                                                      "description": "allocatable represents the volume resources of a node that are available for scheduling. This field is beta.",
                                                                      "descriptionCN": "可分配资源表示节点上的可用资源空间，这是 beta 级别。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeNodeResources"
                                                                  },
                                                                  "name": {
                                                                      "description": "name represents the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.",
                                                                      "descriptionCN": "\"name\"代表所指对象的名称。此必须是驱动器返回的CSI GetPluginName()函数中的相同名称。\n\n这个短语可能是在讨论一个计算机程序或系统，其中有一个名为CSI的设备驱动。\"name\"在这里代表了该设备驱动的名称，而\"CSIDriver\"则是指向该设备驱动的类名。在代码中，我们使用\"CSIDriver\"来表示这个名称，以便其他地方正确地引用它。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeID": {
                                                                      "description": "nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as \"node1\", but the storage system may refer to the same node as \"nodeA\". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. \"nodeA\" instead of \"node1\". This field is required.",
                                                                      "descriptionCN": "从驱动器角度看，节点ID的字段。该字段使Kubernetes能够与不共享相同命名空间的存储系统进行通信。例如，Kubernetes可能将给定的节点称为“node1”，但存储系统可能将其视为“A”。当Kubernetes向存储系统发出命令以附加一个卷到特定节点时，它可以使用此字段来使用存储系统的理解和认为的节点名称（例如，“nodeA”而不是“node1”）。这是一个必填字段。",
                                                                      "type": "string"
                                                                  },
                                                                  "topologyKeys": {
                                                                      "description": "topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. \"company.com/zone\", \"company.com/region\"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.",
                                                                      "descriptionCN": "拓扑键是驱动器支持的列表。当一个驱动器在集群上初始化时，它会提供一组它理解（例如：“公司.com/zone”，“公司.com/region”）的拓扑键。当一个节点被初始化时，它也会提供与相同拓扑键和值相同的拓扑键。Kubelet将在自己的节点对象上公开这些拓扑键标签。当Kubernetes进行拓扑感知的部署时，它可以使用这个列表来确定它应该从节点对象中检索哪些标签，并将它们传递回驱动器。如果驱动器不支持拓扑，那么可以为空。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSINodeList": {
                                                              "description": "CSINodeList is a collection of CSINode objects.",
                                                              "descriptionCN": "CSINodeList 是一个包含 CSINode 对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是这个表示对象的一个版本化的结构。服务器应该将识别的模式转换为内部的最新值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of CSINode",
                                                                      "descriptionCN": "项目列表是CSINode",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.CSINode"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示此对象所代表的REST资源的字符串值。服务器可以从客户端提交请求时推断出这个值。不能被更新。使用CamelCase命名法。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSINodeSpec": {
                                                              "description": "CSINodeSpec holds information about the specification of all CSI drivers installed on a node",
                                                              "descriptionCN": "CSINodeSpec包含安装在节点上的所有CSI驱动器的规格信息。",
                                                              "properties": {
                                                                  "drivers": {
                                                                      "description": "drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.",
                                                                      "descriptionCN": "驾驶者是一个列出所有存在于节点上的CSI驾驶员的信息列表。如果列表中的所有驾驶员都被卸载，这个列表就会变得空洞。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeDriver"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSIStorageCapacity": {
                                                              "description": "CSIStorageCapacity stores the result of one CSI GetCapacity call. For a given StorageClass, this describes the available capacity in a particular topology segment.  This can be used when considering where to instantiate new PersistentVolumes.\n\nFor example this can express things like: - StorageClass \"standard\" has \"1234 GiB\" available in \"topology.kubernetes.io/zone=us-east1\" - StorageClass \"localssd\" has \"10 GiB\" available in \"kubernetes.io/hostname=knode-abc123\"\n\nThe following three cases all imply that no capacity is available for a certain combination: - no object exists with suitable topology and storage class name - such an object exists, but the capacity is unset - such an object exists, but the capacity is zero\n\nThe producer of these objects can decide which approach is more suitable.\n\nThey are consumed by the kube-scheduler when a CSI driver opts into capacity-aware scheduling with CSIDriverSpec.StorageCapacity. The scheduler compares the MaximumVolumeSize against the requested size of pending volumes to filter out unsuitable nodes. If MaximumVolumeSize is unset, it falls back to a comparison against the less precise Capacity. If that is also unset, the scheduler assumes that capacity is insufficient and tries some other node.",
                                                              "descriptionCN": "CSIStorageCapacity 存储获取容量调用的结果。对于一个给定的 StorageClass，这描述了在特定拓扑段中可用的容量。这可用于考虑在何处实例化新的持久卷。\n\n例如，这种可以表示诸如： - StorageClass \"standard\" 在 \"topology.kubernetes.io/zone=us-east1\" 上有 \"1234 GiB\" 可用 - StorageClass \"localssd\" 在 \"kubernetes.io/hostname=knode-abc123\" 上有 \"10 GiB\" 可用 以下三种情况都表明对于某个组合没有可用的容量： - 没有具有适当拓扑和存储类名称的对象存在 - 这个对象存在，但是容量未设置 - 这个对象存在，但是容量为零 产生的这些对象的生产者可以根据选择哪种方法更合适。它们被 kube-scheduler 当接口选项（CSIDriverSpec.StorageCapacity）启用时消耗。调度器比较 MaxVolumeSize 对于已存在的待发卷的最大大小与请求的待发卷大小之间的大小以过滤出不适合节点。如果最大体积大小未设置，则将其与更不精确的 Capacity 之间的较小值进行比较。如果该也未设置，则调度器假设容量不足，并尝试其他节点。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象的版本化表示形式。服务器应该将可识别的格式转换为内部最新的值，如果识别不到，则拒绝未知值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "capacity": {
                                                                      "description": "capacity is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThe semantic is currently (CSI spec 1.2) defined as: The available capacity, in bytes, of the storage that can be used to provision volumes. If not set, that information is currently unavailable.",
                                                                      "descriptionCN": "数据驱动器在GetCapacity响应中报告的容量为匹配前字段的拓扑和参数。当前（CSI规范1.2）定义为：可以使用的存储可用于分配卷的可用容量，如果未设置，则该信息目前不可用。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind”是一个表示这个对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时使用的端点来推测这一点。无法被更新。使用CamelCase命名方式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "maximumVolumeSize": {
                                                                      "description": "maximumVolumeSize is the value reported by the CSI driver in its GetCapacityResponse for a GetCapacityRequest with topology and parameters that match the previous fields.\n\nThis is defined since CSI spec 1.4.0 as the largest size that may be used in a CreateVolumeRequest.capacity_range.required_bytes field to create a volume with the same parameters as those in GetCapacityRequest. The corresponding value in the Kubernetes API is ResourceRequirements.Requests in a volume claim.",
                                                                      "descriptionCN": "CSI驱动器在GetCapacity请求中报告的最大容量大小。这个值是在 CSI 1.4.0 版本中定义的，用于创建具有与 GetCapacity 请求相同参数的体积时使用的最大容量大小。在 Kubernetes API 中，VolumeClaim 中对应的资源需求是 Requests。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. The name has no particular meaning. It must be a DNS subdomain (dots allowed, 253 characters). To ensure that there are no conflicts with other CSI drivers on the cluster, the recommendation is to use csisc-<uuid>, a generated name, or a reverse-domain name which ends with the unique CSI driver name.\n\nObjects are namespaced.\n\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。名称没有特定的意义。必须是一个DNS子域名（允许点，最多253个字符）。为了确保集群中的其他CSI驱动程序不会冲突，建议使用csisc-<uuid>，一个生成的名字，或具有唯一CSI驱动程序名的反向域名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "nodeTopology": {
                                                                      "description": "nodeTopology defines which nodes have access to the storage for which capacity was reported. If not set, the storage is not accessible from any node in the cluster. If empty, the storage is accessible from all nodes. This field is immutable.",
                                                                      "descriptionCN": "节点拓扑定义了哪些节点有权访问报告的存储。如果没有设置，存储就无法从集群中的任何节点访问。如果为空，存储可以被所有节点访问。这个字段是不可变的。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                                                                  },
                                                                  "storageClassName": {
                                                                      "description": "storageClassName represents the name of the StorageClass that the reported capacity applies to. It must meet the same requirements as the name of a StorageClass object (non-empty, DNS subdomain). If that object no longer exists, the CSIStorageCapacity object is obsolete and should be removed by its creator. This field is immutable.",
                                                                      "descriptionCN": "存储类名称代表报告容量应用于的StorageClass的名称。它必须满足与StorageClass对象（非空，DNS子域名）相同的要求。如果该对象不再存在，CSIStorageCapacity对象就过时了，并且由其创建者应该删除。这个字段是不可变的。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.CSIStorageCapacityList": {
                                                              "description": "CSIStorageCapacityList is a collection of CSIStorageCapacity objects.",
                                                              "descriptionCN": "CSIStorageCapacityList是一个包含CSIStorageCapacity对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示的对象的版本化格式。服务器应该将识别的格式转换为最新的内部值，如果不符合，可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of CSIStorageCapacity objects.",
                                                                      "descriptionCN": "物品列表是CSIStorageCapacity对象。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.CSIStorageCapacity"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "name"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是表示此对象所代表的REST资源的一种字符串值。服务器可能根据客户端提交请求时所使用的端点推断出这个属性。无法被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更详细信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.StorageClass": {
                                                              "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
                                                              "descriptionCN": "存储类描述了一个为哪些持久卷可以动态部署的类的存储类型参数。根据etcd中的命名空间，存储类的名称是ObjectMeta.Name。",
                                                              "properties": {
                                                                  "allowVolumeExpansion": {
                                                                      "description": "allowVolumeExpansion shows whether the storage class allow volume expand.",
                                                                      "descriptionCN": "允许体积扩展显示存储类是否允许体积扩展。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "allowedTopologies": {
                                                                      "description": "allowedTopologies restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.",
                                                                      "descriptionCN": "允许的拓扑模式限制节点拓扑中动态部署卷的数量。每个卷插件都定义了它自己的支持拓扑规范。空的 TopologySelectorTerm 列表表示没有拓扑限制。这个字段仅在启用 VolumeScheduling 功能的服务器上被认可。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
                                                                      },
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化表示形式。服务器应该将识别的规范转换为内部的最新值，并可能拒绝不被识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是表示这个对象所代表的REST资源的一个字符串值。服务器可以根据客户端提交请求的端点来推测。不能被更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "mountOptions": {
                                                                      "description": "mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class. e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
                                                                      "descriptionCN": "\"mountOptions\" 是用于动态配置此存储类中动态分配的 PersistentVolume 的 mountOptions。例如：[\"ro\", \"soft\"] 不被验证 - 如果 PV 中有一个无效，则挂载将失败。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "parameters": {
                                                                      "description": "parameters holds the parameters for the provisioner that should create volumes of this storage class.",
                                                                      "descriptionCN": "参数存储类的创建者应该为实现此存储类的提供者分配参数。",
                                                                      "type": "object"
                                                                  },
                                                                  "provisioner": {
                                                                      "description": "provisioner indicates the type of the provisioner.",
                                                                      "descriptionCN": "提供者指示提供者的类型。",
                                                                      "type": "string"
                                                                  },
                                                                  "reclaimPolicy": {
                                                                      "description": "reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class. Defaults to Delete.",
                                                                      "descriptionCN": "回滚策略控制动态为此存储类创建的持久卷的回收策略。默认设置为删除。",
                                                                      "type": "string"
                                                                  },
                                                                  "volumeBindingMode": {
                                                                      "description": "volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.",
                                                                      "descriptionCN": "volumeBindingMode 表示持久性VolumeClaim应如何被分配和绑定。当未设置时， Volume Binding Immediate 会被使用。这个字段只有在启用VolumeScheduling 功能的服务器上才有效。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.StorageClassList": {
                                                              "description": "StorageClassList is a collection of storage classes.",
                                                              "descriptionCN": "存储类列表是一个存储类的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的可变结构化数据的形式。服务器应该将识别到的结构化数据转换为最新的内部值，可能拒绝未识别的价值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of StorageClasses",
                                                                      "descriptionCN": "物品是StorageClasses的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.StorageClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示这个对象所代表的 REST 资源的字符串值。服务器可以根据客户端提交请求时使用的 endpoint 来推测这个值。不能被更新。在 camelCase 中命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.TokenRequest": {
                                                              "description": "TokenRequest contains parameters of a service account token.",
                                                              "descriptionCN": "TokenRequest包含服务账户令牌的参数。",
                                                              "properties": {
                                                                  "audience": {
                                                                      "description": "audience is the intended audience of the token in \"TokenRequestSpec\". It will default to the audiences of kube apiserver.",
                                                                      "descriptionCN": "\"TokenRequestSpec\"中的目标受众是\"Token\"。默认情况下，它将用于kubeapiserver的观众。",
                                                                      "type": "string"
                                                                  },
                                                                  "expirationSeconds": {
                                                                      "description": "expirationSeconds is the duration of validity of the token in \"TokenRequestSpec\". It has the same default value of \"ExpirationSeconds\" in \"TokenRequestSpec\".",
                                                                      "descriptionCN": "过期秒数是令牌在\"TokenRequestSpec\"中的有效期限。它在\"TokenRequestSpec\"中的默认值为\"ExpirationSeconds\"。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeAttachment": {
                                                              "description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced.",
                                                              "descriptionCN": "\"VolumeAttachment\"捕获了将指定的卷与其指定节点关联或断开的意图。\"VolumeAttachment\"对象是非命名空间化的。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示的版本化结构。服务器应该将识别的格式转换为内部最新的值，可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是一种表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端提交请求时使用的端点推测这一点。不能被更新。 CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec represents specification of the desired attach/detach volume behavior. Populated by the Kubernetes system.",
                                                                      "descriptionCN": "\"spec\" 表示所需附着/解绑卷的行为规范。由 Kubernetes 系统提供。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status represents status of the VolumeAttachment request. Populated by the entity completing the attach or detach operation, i.e. the external-attacher.",
                                                                      "descriptionCN": "状态代表VolumeAttachment请求的状态。由完成附件或拆卸操作的实体填充，即外部 Attachger。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeAttachmentList": {
                                                              "description": "VolumeAttachmentList is a collection of VolumeAttachment objects.",
                                                              "descriptionCN": "卷积附件列表是一个包含卷积附件对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这个表示对象的对象表示的版本化结构的约定。服务器应该将可识别的结构转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of VolumeAttachments",
                                                                      "descriptionCN": "物品是VolumeAttachments列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachment"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的一段字符串。服务器可以从客户端提交请求的端点推断出这段字符串。不能被更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeAttachmentSource": {
                                                              "description": "VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.",
                                                              "descriptionCN": "卷积附件源表示应该被附加的卷。目前，只能通过外部附件器将持久卷附件到系统中，未来我们可能允许在Pods内也将在线卷附件到系统中。仅能设置一个成员。",
                                                              "properties": {
                                                                  "inlineVolumeSpec": {
                                                                      "description": "inlineVolumeSpec contains all the information necessary to attach a persistent volume defined by a pod's inline VolumeSource. This field is populated only for the CSIMigration feature. It contains translated fields from a pod's inline VolumeSource to a PersistentVolumeSpec. This field is beta-level and is only honored by servers that enabled the CSIMigration feature.",
                                                                      "descriptionCN": "inlineVolumeSpec包含有关由Pod的inline VolumeSource定义的持久卷的所有必要的信息。此字段仅在CSIMigration功能中填充。它将Pod inline VolumeSource中的字段翻译成PersistentVolumeSpec。此字段处于beta级，只有启用CSIMigration功能的服务器才会 honored。",
                                                                      "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
                                                                  },
                                                                  "persistentVolumeName": {
                                                                      "description": "persistentVolumeName represents the name of the persistent volume to attach.",
                                                                      "descriptionCN": "持久卷名表示要连接的持久卷的名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeAttachmentSpec": {
                                                              "description": "VolumeAttachmentSpec is the specification of a VolumeAttachment request.",
                                                              "descriptionCN": "VolumeAttachmentSpec 是 VolumeAttachment 请求的规格描述。",
                                                              "properties": {
                                                                  "attacher": {
                                                                      "description": "attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().",
                                                                      "descriptionCN": "传送器表示必须处理此请求的卷驱动程序名称。这是GetPluginName()返回的名字。",
                                                                      "type": "string"
                                                                  },
                                                                  "nodeName": {
                                                                      "description": "nodeName represents the node that the volume should be attached to.",
                                                                      "descriptionCN": "节点名表示应该将卷存储到的节点。",
                                                                      "type": "string"
                                                                  },
                                                                  "source": {
                                                                      "description": "source represents the volume that should be attached.",
                                                                      "descriptionCN": "源代表应被附加的体积。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSource"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeAttachmentStatus": {
                                                              "description": "VolumeAttachmentStatus is the status of a VolumeAttachment request.",
                                                              "descriptionCN": "卷积附件状态是卷积附件请求的状态。",
                                                              "properties": {
                                                                  "attachError": {
                                                                      "description": "attachError represents the last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.",
                                                                      "descriptionCN": "在附件操作中遇到的最后错误表示。如果存在，则必须仅由完成附件操作的实体设置此字段，即外部-attacher。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError"
                                                                  },
                                                                  "attached": {
                                                                      "description": "attached indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.",
                                                                      "descriptionCN": "附件表明已成功连接。此字段仅由完成关联操作的实体设置，即外部 Attach器。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "attachmentMetadata": {
                                                                      "description": "attachmentMetadata is populated with any information returned by the attach operation, upon successful attach, that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.",
                                                                      "descriptionCN": "附件元数据在成功附着操作后，会根据 Attach 操作返回的信息填充。这是一项必须传递给后续的 WaitForAttach 或 Mount 调用的字段。只有完成附加操作的实体才能设置此字段，即外部 Attach 组件。",
                                                                      "type": "object"
                                                                  },
                                                                  "detachError": {
                                                                      "description": "detachError represents the last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.",
                                                                      "descriptionCN": " DetachError 表示在 detach 操作中遇到的最后错误。如果出现，此字段只能由完成 detach 操作的实体设置，即外部附件。",
                                                                      "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeError": {
                                                              "description": "VolumeError captures an error encountered during a volume operation.",
                                                              "descriptionCN": "卷积错误捕捉了一个在卷积操作中遇到的错误。",
                                                              "properties": {
                                                                  "message": {
                                                                      "description": "message represents the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.",
                                                                      "descriptionCN": "消息表示在 Attach 或 Detach 操作中遇到的错误。这个字符串可能被记录，因此不应包含敏感信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "time": {
                                                                      "description": "time represents the time the error was encountered.",
                                                                      "descriptionCN": "时间代表了错误发生的时期。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1.VolumeNodeResources": {
                                                              "description": "VolumeNodeResources is a set of resource limits for scheduling of volumes.",
                                                              "descriptionCN": "VolumeNodeResources 是用于调度卷的资源限制设置集合。",
                                                              "properties": {
                                                                  "count": {
                                                                      "description": "count indicates the maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.",
                                                                      "descriptionCN": "这表明CSI驱动器在节点上管理的最大唯一卷数。一个将两者都连接到该节点的卷被认为是已使用一次，而不是两次。对于同一节点上的多个Pod共享的唯一卷，则遵循相同的规则。如果未指定此字段，则该节点支持的卷数是无限的。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1alpha1.VolumeAttributesClass": {
                                                              "description": "VolumeAttributesClass represents a specification of mutable volume attributes defined by the CSI driver. The class can be specified during dynamic provisioning of PersistentVolumeClaims, and changed in the PersistentVolumeClaim spec after provisioning.",
                                                              "descriptionCN": "卷积属性类代表由CSI驱动器定义的可变卷积属性规范。该类可以被动态分配持久性VolumeClaims，也可在创建持久性VolumeClaim后进行更改。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这种表示的对象的版本化结构。服务器应该将可识别的 schema 转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "driverName": {
                                                                      "description": "Name of the CSI driver This field is immutable.",
                                                                      "descriptionCN": "CSI（Crime Scene Investigation）司机姓名该字段是不可变的。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个字符串值，代表这个对象所表示的REST资源。服务器可能根据客户端提交请求时提供的端点来推测这一点。不能被更新。在CamelCase下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "parameters": {
                                                                      "description": "parameters hold volume attributes defined by the CSI driver. These values are opaque to the Kubernetes and are passed directly to the CSI driver. The underlying storage provider supports changing these attributes on an existing volume, however the parameters field itself is immutable. To invoke a volume update, a new VolumeAttributesClass should be created with new parameters, and the PersistentVolumeClaim should be updated to reference the new VolumeAttributesClass.\n\nThis field is required and must contain at least one key/value pair. The keys cannot be empty, and the maximum number of parameters is 512, with a cumulative max size of 256K. If the CSI driver rejects invalid parameters, the target PersistentVolumeClaim will be set to an \"Infeasible\" state in the modifyVolumeStatus field.",
                                                                      "descriptionCN": "参数表定义由CSI驱动器提供。这些值对Kubernetes是透明的，直接传递给CSI驱动器。底层存储提供商支持在现有的卷上更改这些属性，但是参数字段本身是不可变的。要更新卷，请创建一个新的VolumeAttributesClass，并将 PersistentVolumeClaim 更新为指向新的VolumeAttributesClass。\n\n此字段是必需的，并且至少包含一对键/值对。键不能为空，最大数量的参数为512，累计的最大大小为256K。如果CSI驱动器拒绝无效参数，则目标PVC的状态将在modifyVolumeStatus字段设置为\"Infeasible\"。",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.api.storage.v1alpha1.VolumeAttributesClassList": {
                                                              "description": "VolumeAttributesClassList is a collection of VolumeAttributesClass objects.",
                                                              "descriptionCN": "VolumeAttributesClassList 是一个包含 VolumeAttributesClass 对象的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示形式的可变schema。服务器应该将识别的schema转换为内部最新的值，可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items is the list of VolumeAttributesClass objects.",
                                                                      "descriptionCN": "物品是一个包含VolumeAttributesClass对象的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.api.storage.v1alpha1.VolumeAttributesClass"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\" 是一个表示此对象所代表的 REST 资源的字符串值。服务器可能通过客户端提交请求时提供的端点来推测这一点。无法更新。使用 camelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition": {
                                                              "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
                                                              "descriptionCN": "自定义资源列定义指定服务器端打印的列。",
                                                              "properties": {
                                                                  "description": {
                                                                      "description": "description is a human readable description of this column.",
                                                                      "descriptionCN": "描述是一个人类可读的关于这个栏目的描述。",
                                                                      "type": "string"
                                                                  },
                                                                  "format": {
                                                                      "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                                                                      "descriptionCN": "格式是一个可选的OpenAPI类型定义，用于这个列。主标识符列使用'name'格式进行处理，以帮助客户端识别该列是资源名称。查看https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types获取详细信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "jsonPath": {
                                                                      "description": "jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.",
                                                                      "descriptionCN": "JSONPath 是一种简单的 JSON 路径（即使用数组表示），它会对每个自定义资源进行评估以产生该列的值。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is a human readable name for the column.",
                                                                      "descriptionCN": "名字是列中的可读名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "priority": {
                                                                      "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.",
                                                                      "descriptionCN": "优先级是一个整数，定义了这个列相对于其他列的相对重要性。较低的数字被认为是更高的优先级。在有限空间场景中可能被省略的列应该给予优先级大于0的位置。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.",
                                                                      "descriptionCN": "类型是一个OpenAPI数据类型的定义。请参阅https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types以获取详细信息。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion": {
                                                              "description": "CustomResourceConversion describes how to convert different versions of a CR.",
                                                              "descriptionCN": "CustomResourceConversion 描述了如何将不同的CR版本转换。",
                                                              "properties": {
                                                                  "strategy": {
                                                                      "description": "strategy specifies how custom resources are converted between versions. Allowed values are: - `\"None\"`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `\"Webhook\"`: API Server will call to an external webhook to do the conversion. Additional information\n  is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.",
                                                                      "descriptionCN": "策略规定了如何将自定义资源从版本转换。允许的值是： - `\"None\"`: 这个转换器只会改变apiVersion字段，不会触碰其他任何自定义资源字段。 - `\"Webhook\"`: API服务器会调用外部 webhook 来完成这个转换。需要额外的信息来进行此选项。这要求 spec.preserveUnknownFields 设置为 false，spec.conversion.webhook 设置为 true。",
                                                                      "type": "string"
                                                                  },
                                                                  "webhook": {
                                                                      "description": "webhook describes how to call the conversion webhook. Required when `strategy` is set to `\"Webhook\"`.",
                                                                      "descriptionCN": "Webhook描述了如何调用转换 webhook。当策略设置为 \"Webhook\" 时，必填。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition": {
                                                              "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.",
                                                              "descriptionCN": "CustomResourceDefinition表示应暴露在API服务器上的资源。其名称必须以<>.spec.name.<>.spec.group格式存在。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化模型。服务器应该将识别的规范转换为内部最新的值，而可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的一串字符串。服务器可能从客户端提交请求时推测出这一点。不能被更新。CamelCase格式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "spec describes how the user wants the resources to appear",
                                                                      "descriptionCN": "该说明描述了用户希望资源如何出现。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "status indicates the actual state of the CustomResourceDefinition",
                                                                      "descriptionCN": "状态表示CustomResourceDefinition的实际状态。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition": {
                                                              "description": "CustomResourceDefinitionCondition contains details for the current condition of this pod.",
                                                              "descriptionCN": "CustomResourceDefinitionCondition 包含当前 Pod 的条件详细信息。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "lastTransitionTime last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "最后的过渡时间是：最后一次状态转换为另一个状态的时间。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message is a human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "消息是表示最后过渡的可读人类可见的信息。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason is a unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "原因是一个独特的、一个单词的CamelCase原因，以描述该条件最后的状态。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "status is the status of the condition. Can be True, False, Unknown.",
                                                                      "descriptionCN": "状态是条件的当前状况。可以是真实的，虚假的，未知的。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type is the type of the condition. Types include Established, NamesAccepted and Terminating.",
                                                                      "descriptionCN": "条件类型为条件类型。包括已知、接受名称和终止名称。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList": {
                                                              "description": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
                                                              "descriptionCN": "定制资源定义列表是一个包含定制资源定义对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion是这个表示对象的版本化结构的定义。服务器应该将可识别的架构转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "items list individual CustomResourceDefinition objects",
                                                                      "descriptionCN": "列表中包含单个的CustomResourceDefinition对象。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是一个表示此对象所代表的 REST 资源的字符串值。服务器可以通过客户端提交请求时的端点来推断这一点。不能被更新。在 camelCase 中。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据\n更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames": {
                                                              "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
                                                              "descriptionCN": "\"CustomResourceDefinitionNames\" 是这个 \"CustomResourceDefinition\" 中需要使用的名称。",
                                                              "properties": {
                                                                  "categories": {
                                                                      "description": "categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.",
                                                                      "descriptionCN": "分类是一个列表，这个自定义资源属于（例如：'所有'）。此信息发布在API发现文档中，并用于支持如`kubectl get all`这样的调用。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.",
                                                                      "descriptionCN": "资源的种类是序列化类型的。它通常以CamelCase的形式且单数形式出现。自定义资源实例将使用这个值作为API调用中的`kind`属性。",
                                                                      "type": "string"
                                                                  },
                                                                  "listKind": {
                                                                      "description": "listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".",
                                                                      "descriptionCN": "列表的序列化形式为资源类型的列表。默认设置为\"kind\"List。",
                                                                      "type": "string"
                                                                  },
                                                                  "plural": {
                                                                      "description": "plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.",
                                                                      "descriptionCN": "资源服务的复数形式是用于提供的资源的复数名称。自定义资源在`/apis/<group>/<version>/.../<plural>`路径下提供。必须匹配CustomResourceDefinition（以形如`<names.plural>.<group>`的形式）的所有小写字母。\n\n请注意，您需要将 `/apis/<group>/<version>/.../<plural>` 替换为您的实际路径，并使用您想要的服务的特定资源名替换 `<names.plural>`。",
                                                                      "type": "string"
                                                                  },
                                                                  "shortNames": {
                                                                      "description": "shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.",
                                                                      "descriptionCN": "短名称是资源的短名称，暴露在API发现文档中，并由客户端支持类似`kubectl get <shortname>`的调用。必须全部为小写。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "singular": {
                                                                      "description": "singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.",
                                                                      "descriptionCN": "单个资源的单个名称。必须全部为小写字母。默认为大小写为`kind`。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec": {
                                                              "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
                                                              "descriptionCN": "自定义资源定义规范描述了用户希望他们的资源看起来什么样子。",
                                                              "properties": {
                                                                  "conversion": {
                                                                      "description": "conversion defines conversion settings for the CRD.",
                                                                      "descriptionCN": "转化定义CRD的转换设置。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion"
                                                                  },
                                                                  "group": {
                                                                      "description": "group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).",
                                                                      "descriptionCN": "团体是定义的自定义资源API组。自定义资源在`/apis/<group>/...`中提供服务。必须匹配CustomResourceDefinition（以形式 `<names.plural>.<group>`）中的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "names": {
                                                                      "description": "names specify the resource and kind names for the custom resource.",
                                                                      "descriptionCN": "资源名指定了自定义资源的类型和名称。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
                                                                  },
                                                                  "preserveUnknownFields": {
                                                                      "description": "preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.",
                                                                      "descriptionCN": "保留未知字段表明，在存储时，对于OpenAPI schema中未指定的对象字段应被保留。`apiVersion`、`kind`、`metadata`和`metadataknownFields`内部的所有字段都是保留在存储中的。在`spec.versions[*].schema.openAPIV3Schema`中设置`x-preserve-unknown-fields`为true可以替代此字段。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "scope": {
                                                                      "description": "scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.",
                                                                      "descriptionCN": "范围表示定义的自定义资源是否为集群或命名空间级别。允许值是`Cluster`和`Namespaced`。",
                                                                      "type": "string"
                                                                  },
                                                                  "versions": {
                                                                      "description": "versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
                                                                      "descriptionCN": "版本列表定义的自定义资源的所有API版本。版本名用于计算在API发现中列出的服务版本的顺序。如果版本字符串为\"kubernetes-like\"，它将高于非\"kubernetes-like\"版本字符串，按字典序进行排序。\"Kubernetes-like\"版本从v开始，然后是数字（主要版本）、可选的\"alpha\"或\"beta\"以及另一个数字（次要版本）。这些首先由GA > beta > alpha排序（其中GA是一个没有后缀如beta或alpha的版本），然后按照主版本和次级版本进行比较。示例：v10、v2、v1、v11beta2、v10beta3、v3beta1、v12alpha1、v11alpha2、foo1、foo10。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus": {
                                                              "description": "CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition",
                                                              "descriptionCN": "CustomResourceDefinitionStatus表示 CustomResourceDefinition的状态。",
                                                              "properties": {
                                                                  "acceptedNames": {
                                                                      "description": "acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.",
                                                                      "descriptionCN": "被采纳的名字是实际用于发现的名称。它们可能与规格上的名字不同。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
                                                                  },
                                                                  "conditions": {
                                                                      "description": "conditions indicate state for particular aspects of a CustomResourceDefinition",
                                                                      "descriptionCN": "条件表明CustomResourceDefinition中特定方面所处的状态。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map"
                                                                  },
                                                                  "storedVersions": {
                                                                      "description": "storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.",
                                                                      "descriptionCN": "存储版本列表了所有持久化过的CustomResources版本。跟踪这些版本允许在etcd中存储版本的迁移路径。该字段是可变的，因此迁移控制器可以完成从另一个版本（确保没有旧对象留在存储）到此列表中的其他版本的迁移，并移除剩下的版本。当它们存在于这个列表时，版本可能不会从`spec.versions`中删除。\n\n翻译结果：\n\n存储版本列表了所有持久化过的CustomResources版本。跟踪这些版本允许在etcd中存储版本的迁移路径。该字段是可变的，因此迁移控制器可以完成从另一个版本（确保没有旧对象留在存储）到此列表中的其他版本的迁移，并移除剩下的版本。当它们存在于这个列表时，版本可能不会从`spec.versions`中删除。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion": {
                                                              "description": "CustomResourceDefinitionVersion describes a version for CRD.",
                                                              "descriptionCN": "CustomResourceDefinitionVersion定义CRD的版本。",
                                                              "properties": {
                                                                  "additionalPrinterColumns": {
                                                                      "description": "additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.",
                                                                      "descriptionCN": "额外的打印机列指定在Table输出中返回的额外列。见 https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables 以获取更多细节。如果没有指定任何列，则使用显示定制资源年龄的一行显示。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"
                                                                      }
                                                                  },
                                                                  "deprecated": {
                                                                      "description": "deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.",
                                                                      "descriptionCN": "已弃用表示此版本的自定义资源API已过时。设置为true时，发送到该版本的API请求将收到服务器响应中的警告头。默认为false。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "deprecationWarning": {
                                                                      "description": "deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.",
                                                                      "descriptionCN": "警告：当`deprecated`为真时，将覆盖默认返回给API客户端的警告。只能在`deprecated`为真的情况下设置。默认警告表明该版本已过时，并建议使用最新提供的稳定版本，如果存在的话。\n\n注：这个中文翻译是基于英文原文的，所以可能有细微差别。",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.",
                                                                      "descriptionCN": "名称为版本名，例如：“v1”，“v2beta1”等。如果`served`是true，则自定义资源在 `/apis/<group>/<version>/...` 下提供。",
                                                                      "type": "string"
                                                                  },
                                                                  "schema": {
                                                                      "description": "schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.",
                                                                      "descriptionCN": "描述这个版本的自定义资源的验证、剪枝和默认化使用的schema。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation"
                                                                  },
                                                                  "served": {
                                                                      "description": "served is a flag enabling/disabling this version from being served via REST APIs",
                                                                      "descriptionCN": "\"的服务是一个标志，用于设置/禁用该版本是否通过REST API进行服务。\"",
                                                                      "type": "boolean"
                                                                  },
                                                                  "storage": {
                                                                      "description": "storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.",
                                                                      "descriptionCN": "存储表明当将自定义资源保存到存储时，应使用此版本。必须有与存储=true完全匹配的唯一版本。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "subresources": {
                                                                      "description": "subresources specify what subresources this version of the defined custom resource have.",
                                                                      "descriptionCN": "子资源指定此版本定义的自定义资源所拥有的子资源。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale": {
                                                              "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
                                                              "descriptionCN": "自定义资源子项缩放定义了如何为自定义资源提供缩放子项。",
                                                              "properties": {
                                                                  "labelSelectorPath": {
                                                                      "description": "labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.",
                                                                      "descriptionCN": "标签选择器路径定义了一个名为`status.selector`的自定义资源，该资源与Scale状态中的selector相关联。仅允许没有数组表示的JSON路径。必须设置为适用于HorizontalPodAutoscaler。JSON路径指向此字段必须是一个字符串字段（非复杂selector结构），其中包含以字符串形式表示的标签选择器。更多信息：https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource 如果在自定义资源中给定路径下没有值，则`status.selector`子资源中的selector值将默认为空字符串。",
                                                                      "type": "string"
                                                                  },
                                                                  "specReplicasPath": {
                                                                      "description": "specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.",
                                                                      "descriptionCN": "弹性伸缩资源配置的JSON路径定义了与Scale `spec.replicas`相关联的自定义资源中的JSON路径。只允许没有数组标记的JSON路径。必须在`.spec`下指定。如果给定路径在自定义资源中没有任何值，则GET操作将返回错误。",
                                                                      "type": "string"
                                                                  },
                                                                  "statusReplicasPath": {
                                                                      "description": "statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.",
                                                                      "descriptionCN": "状态副本路径定义了一个在自定义资源中表示Scale status Replicas的JSON路径。允许没有数组形式的JSON路径。必须是在`.status`目录下的JSON Path。如果给定路径在自定义资源中的值为0，/scale子资源中的status.replicas属性将默认设置为0。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus": {
                                                              "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a /status subresource for the custom resource * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza",
                                                              "descriptionCN": "自定义资源子资源状态定义了如何为自定义资源服务子资源的状态。子资源的状态由`.status`路径在自定义资源内的JSON路径表示。设置时，将向 /status子资源提供自定义资源对象，忽略除状态语句外的任何更改。向自定义资源进行PUT、POST或PATCH请求时，将忽略对状态语句的更改。",
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources": {
                                                              "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
                                                              "descriptionCN": "\"CustomResourceSubresources\"定义了自定义资源的健康状态和规模子资源。",
                                                              "properties": {
                                                                  "scale": {
                                                                      "description": "scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.",
                                                                      "descriptionCN": "规模指示，该自定义资源应返回一个/scale子资源，其中包含一个autoscaling/v1Scale对象。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale"
                                                                  },
                                                                  "status": {
                                                                      "description": "status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.",
                                                                      "descriptionCN": "状态指示定制资源应提供一个根URL `/status`子资源。当启用：1.向定制资源的主端点请求时，对`status`语句对象的状态进行更改将忽略。2.向定制资源的根URL `/status`子资源发送任何其他更改都将忽略不改变`status`语句对象的状态。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation": {
                                                              "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
                                                              "descriptionCN": "CustomResourceValidation 是 CustomResources 类型的验证方法列表。",
                                                              "properties": {
                                                                  "openAPIV3Schema": {
                                                                      "description": "openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.",
                                                                      "descriptionCN": "OpenAPI V3 Schema 是用于验证和修剪的 OpenAPI v3 schema。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation": {
                                                              "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
                                                              "descriptionCN": "外部文档允许引用外部资源进行扩展文档。",
                                                              "properties": {
                                                                  "description": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字内容。请提供需要翻译的文本，我会尽我所能为您提供准确、详细的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "url": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您把需要翻译的文本粘贴在这里，我会尽我最大的努力来帮助您。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {
                                                              "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
                                                              "descriptionCN": "JSON（JavaScript Object Notation）是一种用于表示数据的格式。支持的数据类型包括bool、int64、float64、string、[]interface{}和map[string]interface{}，以及nil。"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps": {
                                                              "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
                                                              "descriptionCN": "JSONSchemaProps是一个遵循 Specification Draft 4（http://json-schema.org/）的JSON-Schema。",
                                                              "properties": {
                                                                  "$ref": {
                                                                      "descriptionCN": "对不起，您没有提供需要翻译的文字。请将需要翻译的文字复制粘贴到这里，我会尽我所能帮助您将其翻译成中文。",
                                                                      "type": "string"
                                                                  },
                                                                  "$schema": {
                                                                      "descriptionCN": "当然，我很乐意帮助您完成这个任务。请您提供需要翻译的文字。",
                                                                      "type": "string"
                                                                  },
                                                                  "additionalItems": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供具体的文本内容，我会尽我所能为您提供准确的中文翻译。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
                                                                  },
                                                                  "additionalProperties": {
                                                                      "descriptionCN": "非常抱歉，您没有提供需要翻译的文字。请提供需要翻译的文字，我会尽力将其准确、完整地翻译成中文。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
                                                                  },
                                                                  "allOf": {
                                                                      "descriptionCN": "很抱歉，由于您没有提供具体的文本内容，我无法为您提供完整的翻译。请您提供需要翻译的文字，我会尽我所能帮助您。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
                                                                      }
                                                                  },
                                                                  "anyOf": {
                                                                      "descriptionCN": "当然可以，请您提供需要翻译的文字，我会尽力将其准确地翻译成中文。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
                                                                      }
                                                                  },
                                                                  "default": {
                                                                      "description": "default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false.",
                                                                      "descriptionCN": "默认值是未定义对象字段的默认值。默认是一个在 CustomResourceDefaulting 特性 gate 下的 beta 功能。默认需要 `spec.preserveUnknownFields` 为 false。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
                                                                  },
                                                                  "definitions": {
                                                                      "descriptionCN": "当然可以，请您把需要翻译的文字发给我，我会尽我最大的努力来帮助您的。",
                                                                      "type": "object"
                                                                  },
                                                                  "dependencies": {
                                                                      "descriptionCN": "当然可以，我很乐意帮助您。请您提供需要翻译的文字内容。",
                                                                      "type": "object"
                                                                  },
                                                                  "description": {
                                                                      "type": "string"
                                                                  },
                                                                  "enum": {
                                                                      "descriptionCN": "当然可以，我很乐意帮助您将文字翻译为中文。请您提供需要翻译的文字内容，我会尽我最大的努力为您提供准确、详细且易于理解的翻译。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
                                                                      }
                                                                  },
                                                                  "example": {
                                                                      "descriptionCN": "我很乐意帮助您将文本从一种语言翻译成另一种语言。请提供需要翻译的文字和目标语言。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
                                                                  },
                                                                  "exclusiveMaximum": {
                                                                      "descriptionCN": "很抱歉，由于您没有提供需要翻译的文字，请提供具体的文本内容，我才能为您进行准确的中文翻译。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "exclusiveMinimum": {
                                                                      "descriptionCN": "当然可以，我很乐意帮助您。请您把需要翻译的文字发给我，我会尽我所能将其准确地翻译成中文。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "externalDocs": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供需要翻译的文字，我会尽力将其准确地翻译为中文。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
                                                                  },
                                                                  "format": {
                                                                      "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:\n\n- bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
                                                                      "descriptionCN": "格式是一种OpenAPI v3的格式字符串。未知格式被忽略。以下是一些验证的格式：\n\n- bsonobjectid：一个BSON对象ID，即24个十六进制字符的字符串 - uri：一个URI作为Golang net/url.ParseRequestURI的解析结果 - email：一个电子邮件地址作为Golang net.mail.ParseAddress的解析结果 - hostname：定义为RFC 1034, 第三章第3.1段中的互联网主机名的有效表示 - ipv4：一个IPv4 IP作为Golang net.ParseIP的解析结果 - ipv6：一个IPv6 IP作为Golang net.ParseIP的解析结果 - cidr：一个CIDR作为Golang net.ParseCIDR的解析结果 - mac：一个MAC地址作为Golang net.ParseMAC的解析结果 - uuid：一个UUID，允许大写定义（使用正则表达式？i）^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3：一个UUID3，允许大写定义（使用正则表达式？i）^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4：一个UUID4，允许大写定义（使用正则表达式？i）^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5：一个UUID5，允许大写定义（使用正则表达式？i）^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn：一个ISBN10或ISBN13数字字符串，如\"0321751043\"或\"978-0321751041\" - isbn10：一个ISBN10数字字符串，如\"0321751043\" - isbn13：一个ISBN13数字字符串，如\"978-0321751041\" - creditcard：一个信用卡号码，遵循正则表达式？(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$，其中任何非数字字符混合 - ssn：一个美国的社会安全号码，遵循正则表达式？\\\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor：一个十六进制颜色代码，如#FFFFFF:遵循正则表达式？#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor：一个RGB颜色代码，如rgb like \"rgb(255,255,2559)\" - byte：Base64编码的二进制数据 - password：任何类型的字符串 - date：一个日期字符串，如\"2006-01-02\"，按照 RFC3339 的标准定义 - duration：一个duration字符串，如\"22 ns\"，按 Golang time.ParseDuration 或兼容 Scala duration 类型进行解析 - datetime：一个日期时间字符串，如 \"2014-12-15T19:30:20.000Z\"，按照 RFC3339 的标准定义",
                                                                      "type": "string"
                                                                  },
                                                                  "id": {
                                                                      "descriptionCN": "很抱歉，由于您没有提供需要翻译的文字，请提供文字或原文，我会尽力帮助您进行中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "descriptionCN": "当然可以，请您提供需要翻译的文字，我会尽我最大的努力来完成您的任务。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"
                                                                  },
                                                                  "maxItems": {
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "maxLength": {
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "maxProperties": {
                                                                      "descriptionCN": "请提供需要翻译的文字。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "maximum": {
                                                                      "descriptionCN": "当然可以，您请提供需要翻译的文字。",
                                                                      "type": "number",
                                                                      "format": "double"
                                                                  },
                                                                  "minItems": {
                                                                      "descriptionCN": "请提供需要翻译的文字，我会尽力将其翻译成中文。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "minLength": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供需要翻译的文字，我会尽力帮助您将其翻译成中文。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "minProperties": {
                                                                      "descriptionCN": "当然可以，请您提供需要翻译的文字，我会尽我所能将其准确地转化为中文。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "minimum": {
                                                                      "descriptionCN": "当然可以，请您把需要翻译的文字粘贴到这里，我会尽我所能为您翻译。",
                                                                      "type": "number",
                                                                      "format": "double"
                                                                  },
                                                                  "multipleOf": {
                                                                      "descriptionCN": "当然可以，您可以将需要翻译的文字粘贴在这里。",
                                                                      "type": "number",
                                                                      "format": "double"
                                                                  },
                                                                  "not": {
                                                                      "descriptionCN": "当然可以，但您还没有提供需要翻译的文字内容。请您提供需要翻译的文本，我会尽力帮助您将其准确、完整的中文翻译出来。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
                                                                  },
                                                                  "nullable": {
                                                                      "descriptionCN": "当然可以，您可以把需要翻译的文字粘贴在这里，我会尽我最大的努力来帮助您。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "oneOf": {
                                                                      "descriptionCN": "当然可以，请您提供需要翻译的文字内容，我会尽我所能帮助您进行准确的中文翻译。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
                                                                      }
                                                                  },
                                                                  "pattern": {
                                                                      "descriptionCN": "当然可以，但是我需要您提供需要翻译的文字。",
                                                                      "type": "string"
                                                                  },
                                                                  "patternProperties": {
                                                                      "descriptionCN": "当然，我很乐意帮助您。请您把需要翻译的文字发给我，我会尽我所能提供准确的中文翻译。",
                                                                      "type": "object"
                                                                  },
                                                                  "properties": {
                                                                      "descriptionCN": "请提供需要翻译的文字。",
                                                                      "type": "object"
                                                                  },
                                                                  "required": {
                                                                      "descriptionCN": "当然可以，但请您提供需要翻译的文字内容。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "title": {
                                                                      "descriptionCN": "当然可以，但是您没有提供需要翻译的文字。请提供具体的文本，我将尽力为您进行准确的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供原文或者更具体的问题，我会尽力为您解答。",
                                                                      "type": "string"
                                                                  },
                                                                  "uniqueItems": {
                                                                      "descriptionCN": "非常抱歉，您没有提供需要翻译的文字。请您提供具体的文本，我会尽力为您进行准确的中文翻译。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "x-kubernetes-embedded-resource": {
                                                                      "description": "x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).",
                                                                      "descriptionCN": "x-kubernetes-embedded-resource定义了该值是一个嵌入式的Kubernetes运行时.Object。TypeMeta和ObjectMeta是类型Meta，它们用于对象。该类型必须是对象。它允许进一步限制嵌入的对象。 kind, apiVersion 和 metadata 是自动验证的。如果对象完全被指定（到kind, apiVersion和metadata），则允许设置x-kubernetes-preserve-unknown-fields为true，但不需要。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "x-kubernetes-int-or-string": {
                                                                      "description": "x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more",
                                                                      "descriptionCN": "如果x-kubernetes-int-or-string为真，那么这个值既可视为整数也可视为字符串。如果是这样，则允许空类型，并且任何Of类型的子类型都允许。以下是满足这些条件的模式之一：\n\n1) anyOf：\n   - type: integer\n   - type: string\n\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... 0或多个",
                                                                      "type": "boolean"
                                                                  },
                                                                  "x-kubernetes-list-map-keys": {
                                                                      "description": "x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.\n\nThis tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\n\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.",
                                                                      "descriptionCN": "标签x-kubernetes-list-map-keys用于给数组指定x-kubernetes-list-type为`map`的键。此标签仅应用于具有\"x-kubernetes-list-type\"扩展设置为`map`的列表中。对于此属性，必须指定值为子结构的 scalar 类型字段（不支持嵌套）。定义的属性应是可选或具有默认值，以确保所有列表项都有这些属性存在。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "x-kubernetes-list-type": {
                                                                      "description": "x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:\n\n1) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic lists will be entirely replaced when updated. This extension\n     may be used on any type of list (struct, scalar, ...).\n2) `set`:\n     Sets are lists that must not have multiple items with the same value. Each\n     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an\n     array with x-kubernetes-list-type `atomic`.\n3) `map`:\n     These lists are like maps in that their elements have a non-index key\n     used to identify them. Order is preserved upon merge. The map tag\n     must only be used on a list with elements of type object.\nDefaults to atomic for arrays.",
                                                                      "descriptionCN": "x-kubernetes-list-type 属性将数组进一步描述其拓扑结构。这个扩展只能在列表中使用，并可能有三种可能的值：\n\n1) `atomic`: 列表被视为一个单一实体，就像一个标量。\n   当更新时，整个列表将被完全替换。这个扩展可以用于任何类型的列表（结构、标量...）。\n\n2) `set`：\n   set 是包含多个具有相同值项的列表。每个值必须是一个标量，一个 x-kubernetes-map-type 标记为原子的对象或一个 x-kubernetes-list-type 标记为原子的数组。\n\n3) `map`：\n   这些列表类似于地图，在这一点上它们的元素都有一个非索引键用来识别它们。合并后保持了顺序。 map 标签只能在具有类型对象元素的列表中使用。默认情况下，对于数组使用原子标签。",
                                                                      "type": "string"
                                                                  },
                                                                  "x-kubernetes-map-type": {
                                                                      "description": "x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:\n\n1) `granular`:\n     These maps are actual maps (key-value pairs) and each fields are independent\n     from each other (they can each be manipulated by separate actors). This is\n     the default behaviour for all maps.\n2) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic maps will be entirely replaced when updated.",
                                                                      "descriptionCN": "x-kubernetes-map-type注释对象以进一步描述其拓扑。此扩展只能在类型为对象时使用，可能有2个可能的值：\n\n1) `granular`：这些映射是实际映射（键值对）且每个字段彼此独立（它们可以各自由单独的演员操作）。这是所有映射的默认行为。\n2) `atomic`：列表被视为一个实体，就像一维数。当更新时，将完全替换整个列表。",
                                                                      "type": "string"
                                                                  },
                                                                  "x-kubernetes-preserve-unknown-fields": {
                                                                      "description": "x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.",
                                                                      "descriptionCN": "x-kubernetes-preserve-unknown-fields是一个函数，它会阻止API服务器在解析步骤中删除未知字段。这意味着它会对递归地删除任何不在验证规范中的字段进行阻止，但当有嵌套属性或额外属性被指定在规范中时，它将恢复正常的删除行为。\n\n这是一个可能的上下文：\n\n假设我们有一个名为`Deployment`的资源，并且我们想要在创建新的`Deployment`实例时，如果它的`spec.replicas`字段不是由用户指定的（也就是说，它没有出现在我们的验证规范中），那么我们将保留这个字段，因为它可能会有助于我们更好地理解如何配置和部署这个资源。但是，如果我们知道用户已经指定了`replicas`字段，我们就不应该再使用`deployment/preserve-unknown-fields`这个函数来保护这个字段。\n\n要使`deployment/preserve-unknown-fields`函数不起作用，你可以在API端点上添加一个元数据来告诉Kubernetes这个字段是必填的。例如：\n\n```json\n{\n  \"apiVersion\": \"apps/v1\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"my-deployment\"\n  },\n  \"spec\": {\n    \"replicas\": 2,\n    \"metadataLabels\": {\n      \"app\": \"my-app\"\n    }\n  }\n}\n```\n\n在这个例子中，`deployment/preserve-unknown-fields`函数就不会阻止我们为`my-app`创建一个新的`Deployment`实例。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "x-kubernetes-validations": {
                                                                      "description": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language. This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.",
                                                                      "descriptionCN": "x-kubernetes-validations 是一个在 Cel 语言表达式语言中定义的一系列验证规则列表。这个字段是一个 alpha 级别的。使用这个字段需要 feature gate CustomResourceValidationExpressions 被启用。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "rule"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray": {
                                                              "description": "JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes.",
                                                              "descriptionCN": "JSONSchemaPropsOrArray代表一个值，既可以是一个JSONSchemaProps，也可以是数组中的JSONSchemaProps。主要在这里用于序列化目的。"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool": {
                                                              "description": "JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.",
                                                              "descriptionCN": "JSONSchemaPropsOrBool 是 JSONSchemaProps 或一个布尔值。默认情况下，它是一个布尔属性。"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray": {
                                                              "description": "JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.",
                                                              "descriptionCN": "JSONSchemaPropsOrStringArray表示一个JSONSchemaProps或一个字符串数组。"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference": {
                                                              "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
                                                              "descriptionCN": "服务Reference持有Service的引用，legacy.k8s.io",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "name is the name of the service. Required",
                                                                      "descriptionCN": "服务名称",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "namespace is the namespace of the service. Required",
                                                                      "descriptionCN": "服务的命名空间。要求",
                                                                      "type": "string"
                                                                  },
                                                                  "path": {
                                                                      "description": "path is an optional URL path at which the webhook will be contacted.",
                                                                      "descriptionCN": "路径是 webhook 联系 URL 的可选路径。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.",
                                                                      "descriptionCN": "端口是 webhook 通过的一种可选服务端口。`port` 必须是一个有效的端口号（1-65535，不包括）。默认情况下为443以实现兼容性。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule": {
                                                              "description": "ValidationRule describes a validation rule written in the CEL expression language.",
                                                              "descriptionCN": "验证规则描述了在CEL表达式语言中编写的一条验证规则。",
                                                              "properties": {
                                                                  "fieldPath": {
                                                                      "description": "fieldPath represents the field path returned when the validation fails. It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field. e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo` If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList` It does not support list numeric index. It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info. Numeric index of array is not supported. For field name which contains special characters, use `['specialName']` to refer the field name. e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`",
                                                                      "descriptionCN": "字段路径表示验证失败时返回的字段路径。它必须是一个相对JSON路径（即使用数组符号），并在该x-kubernetes-validation扩展的位置（以schema中特定map的位置为准）引用一个已有的字段。例如，当验证检查在map`testMap`中的特定属性`foo`时，可以设置fieldPath为`.testMap.foo`；如果验证需要检查两个列表有唯一的属性，则可以设置fieldPath为 either of the list: e.g. `.testList`。它不支持数组数字索引。它支持操作符以指向一个现有的字段。参考[kubernetes.io/docs/reference/kubectl/jsonpath/]了解更多关于JSON路径的支持信息。对于包含特殊字符的字段名，可以使用`['specialName']`来引用该字段名。例如，对于属性`foo.34$`出现在list `testList`中，可以设置fieldPath为`.testList['foo.34$']`",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "Message represents the message displayed when validation fails. The message is required if the Rule contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "messageExpression": {
                                                                      "description": "MessageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a rule, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the rule; the only difference is the return type. Example: \"x must be less than max (\"+string(self.max)+\")\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "optionalOldSelf": {
                                                                      "description": "optionalOldSelf is used to opt a transition rule into evaluation even when the object is first created, or if the old object is missing the value.\n\nWhen enabled `oldSelf` will be a CEL optional whose value will be `None` if there is no old value, or when the object is initially created.\n\nYou may check for presence of oldSelf using `oldSelf.hasValue()` and unwrap it after checking using `oldSelf.value()`. Check the CEL documentation for Optional types for more information: https://pkg.go.dev/github.com/google/cel-go/cel#OptionalTypes\n\nMay not be set unless `oldSelf` is used in `rule`.",
                                                                      "descriptionCN": "默认的 `oldSelf` 用于在创建对象时或没有旧值的情况下为过渡规则选择一个评估规则。当启用 `oldSelf` 时，它将是一个名为 `Optional` 的Cel optional类型，其值为 `None` 如果没有旧值，则为对象初始创建时。\n\n可以通过检查 `oldSelf.hasValue()` 来检查是否存在 `oldSelf`。然后使用 `oldSelf.value()` 来卸载它。查看 Cel 视图文档以获取 Optional 类型的信息：https://pkg.go.dev/github.com/google/cel-go/cel#OptionalTypes",
                                                                      "type": "boolean"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule. The HTTP status code returned to the caller will match the reason of the reason of the first failed validation rule. The currently supported reasons are: \"FieldValueInvalid\", \"FieldValueForbidden\", \"FieldValueRequired\", \"FieldValueDuplicate\". If not set, default to use \"FieldValueInvalid\". All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.",
                                                                      "descriptionCN": "原因提供了一个机器可读的验证失败原因，当请求失败时，该值将返回给调用者。返回到调用者的HTTP状态码将匹配第一个失败验证规则的原因。目前支持的原因是：\"FieldValueInvalid\"、\"FieldValueForbidden\"、\"FieldValueRequired\"和\"FieldValueDuplicate\"。如果没有设置，默认使用\"FieldValueInvalid\"。所有未来的添加理由都必须接受客户端阅读这个值，并未知原因应被视为\"FieldValueInvalid\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "rule": {
                                                                      "description": "Rule represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The `self` variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {\"rule\": \"self.status.actual <= self.spec.maxDesired\"}\n\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map are accessible via CEL macros and functions such as `self.all(...)`. If the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and functions. If the Rule is scoped to a scalar, `self` is bound to the scalar value. Examples: - Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"} - Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions. This includes: - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nEquality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a `transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`. When `optionalOldSelf` is true, the `oldSelf` variable is a CEL optional\n variable whose value() is the same type as `self`.\nSee the documentation for the `optionalOldSelf` field for details.\n\nTransition rules by default are applied only on UPDATE requests and are skipped if an old value could not be found. You can opt a transition rule into unconditional evaluation by setting `optionalOldSelf` to true.",
                                                                      "descriptionCN": "规则代表表达式，该表达式将由Cel进行评估。参阅：<https://github.com/google/cel-spec>。 规则仅应用于根资源或具有状态子集的对象的属性。`self`变量在CEL表达式中被绑定到Scoped值。 示例：\n- 规则应用于具有状态子集的资源的资源根下的属性： {\"rule\": \"self.status.actual <= self.spec.maxDesired\"}\n如果规则适用于对象，其可访问属性为对象中的字段可通过 `self.field` 和字段存在性检查可用： null 值的字段被视为不存在字段。 如果规则适用于对象包含额外属性（即映射），映射的值可以通过 `self[mapKey]` 可用： map 范围可以通过 `mapKey in self` 和所有映射项都是可用的CEL宏和函数如 `self.all(...)`。 如果规则适用于数组，则数组元素可以通过 `self[i]` 可用，并且通过宏和函数可用。 如果规则适用于单个值，`self` 将被绑定到该值。\n例子：\n- 规则应用于具有状态子集的对象的嵌套属性： {\"rule\": \"self.components['Widget'].priority < 10\"}\n- 规则应用于列表中的整数： {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"}\n- 规则应用于字符串值： {\"rule\": \"self.startsWith('kube')\"}\n自定义资源的x-kubernetes-preserve-unknown-fields保留的数据不适用于 Cel 表达式。包括： - 不同属性值保存在自定义对象数据结构中的未知类型的属性。 对于 \"未知类型\" 的定义如下：\n  - 自定义数据结构中没有类型并设置 x-kubernetes-preserve-unknown fields 为 true 的 schema\n  - 数组中项目的类型为 \"未知类型\"\n  - 对象中其他附加属性的类型为 \"未知类型\"\n只有以 `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` 结尾的属性名称可访问。访问该属性时按照以下规则进行解码： - '__' 解码为 '__underscores__' - '.' 解码为 '__dot__' - '-' 解码为 '__dash__' - '/' 解码为 '__slash__' - 模块名称完全匹配 Cel reserved 关键字时解码为 '__{keyword}__'。关键字是：\n    \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n    \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\n示例：\n- 规则用于访问名为 \"namespace\" 的属性： {\"rule\": \"self.__namespace__ > 0\"}\n- 规则用于访问名为 \"x-prop\" 的属性： {\"rule\": \"self.x__dash__prop > 0\"}\n- 规则用于访问名为 \"redact__d\" 的属性： {\"rule\": \"self.redact__underscores__d > 0\"}",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig": {
                                                              "description": "WebhookClientConfig contains the information to make a TLS connection with the webhook.",
                                                              "descriptionCN": "WebhookClientConfig包含用于与webhook进行TLS连接的信息。",
                                                              "properties": {
                                                                  "caBundle": {
                                                                      "description": "caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.",
                                                                      "descriptionCN": "caBundle 是一个 PEM 编码的 CA 来件，它将用于验证 webhook 的服务器证书。如果没有指定，则系统使用 API 服务器上的信任根。",
                                                                      "type": "string",
                                                                      "format": "byte"
                                                                  },
                                                                  "service": {
                                                                      "description": "service is a reference to the service for this webhook. Either service or url must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.",
                                                                      "descriptionCN": "服务是这个webhook的参考。要么服务，要么url必须被指定。\n\n如果webhook在集群中运行，那么应该使用`service`。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference"
                                                                  },
                                                                  "url": {
                                                                      "description": "url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.\n\nThe `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.\n\nPlease note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.\n\nThe scheme must be \"https\"; the URL must begin with \"https://\".\n\nA path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.",
                                                                      "descriptionCN": "URL给出了 webhook的定位，使用标准 URL 格式（`scheme://host:port/path`）。唯一必须指定的是 `url` 或 `service`。\n\n主机不应指向运行在集群中的服务；使用 `service` 部分。主机可能通过外部 DNS 在一些 API 服务器（如 `kube-apiserver` 不能在内部 DNS 中解析）中进行解析。主机也可以是一个 IP 地址。\n\n请注意，将 `localhost` 或 `127.0.0.1` 作为主机是危险的，除非您对所有的运行了 API 服务器的服务都进行了严格的运行这个 webhook。此类安装通常是不可移植的，即很难在新的集群上启用。\n\nscheme 必须为 \"https\"；URL 应以 \"https://\" 开始。\n\n路径是可选的，并且如果存在则可以是任何字符串在 URL 中许可的。您可以使用路径传递任意字符串给 webhook，例如：集群标识符。\n\n尝试使用用户或基本认证（如 `\"user:password@\"`）是不允许的。片段（#\"...\") 和查询参数（?\"...\") 也都不允许。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion": {
                                                              "description": "WebhookConversion describes how to call a conversion webhook",
                                                              "descriptionCN": "WebhookConversion 描述了如何调用转换 webhook。",
                                                              "properties": {
                                                                  "clientConfig": {
                                                                      "description": "clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.",
                                                                      "descriptionCN": "\"clientConfig\" 是用于指导如何在策略为 \"Webhook\" 时调用 webhook 的说明。",
                                                                      "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig"
                                                                  },
                                                                  "conversionReviewVersions": {
                                                                      "description": "conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.",
                                                                      "descriptionCN": "转换审查版本列表是Webhook期望的首选`ConversionReview`版本的有序列表。API服务器将使用该列表中的第一个支持版本。如果此列表中没有指定的所有版本都被API服务器支持，转换将失败用于自定义资源。如果持久化Webhook配置指定了允许的版本，并且API服务器不知道这些版本，API调用将失败。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.api.resource.Quantity": {
                                                              "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` <quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber> ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
                                                              "descriptionCN": "量是一个固定点的表示方式。它提供了方便地在JSON和YAML中进行解码/编码，以及使用String()和AsInt64()访问器的 marshaling/unmarshaling。\n\n序列化格式如下：\n\n```<数量>        ::= <已签名的数字><后缀>\n```\n\n请注意，`后缀` 可能为空（从 \"\" 范围），`数字` 由多个 `0` 或 `1` 组成。`数字`、`数字`.和 ``. 可以用作可选的小数部分。`加号`、`减号` 和 `对数符号` 的形式是唯一的，它们不能表示大于2^63-1 的数值或具有超过3个小数位的值。\n\n大于或等于2^63-1 的数值将被限制为实部，或者取其最大溢出值；超过3个小数位的数值也将被限制为正实数，并向上或向下调整指数或后缀。\n\n如果使用其中的一种形式进行乘法运算，则不会出现超过2^63-1 的问题。如果需要更大的或更小的数量，未来可以考虑进一步扩展此功能。\n\n当一个量从字符串中解析时，它会记住它的类型后缀，并在序列化时使用相同的类型。\n\n在序列化之前，量将处于“标准形式”。这意味着指数/后缀将以适当的方式调整（例如：上拉/下拉），以便：\n\n- 无需丢失精度 - 不会有浮点数被输出 - 指数（或后缀）的最大值。\n\n最后，除非该数字是负数，否则会忽略这个标志。\n\n示例：\n\n- 1.5 将被序列化为 \"1500m\" - 1.5Gi 将被序列化为 \"1536Mi\"\n\n注意：量永远不会内部表示为浮点数。这是整个练习的目的。\n\n非标准值仍然按照良好的形式解析，但将返回其标准形式。因此始终使用标准形式，或者不要进行差异。\n\n此格式旨在使其难以在不编写特殊处理代码的情况下使用这些数字，以期望这会导致实现者也使用固定点实现。",
                                                              "type": "string"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
                                                              "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
                                                              "descriptionCN": "APIGroup 包含名称、支持版本和首选版本的集合。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化格式。服务器应该将识别的规范转换为内部最新的值，并可能拒绝未识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型是表示这个对象所代表的REST资源的一个字符串值。服务器可以根据客户端向它提交请求时提交的端点推测这一点。不能被更新。在CamelCase格式下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the name of the group.",
                                                                      "descriptionCN": "这个名字是这个团体的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "preferredVersion": {
                                                                      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
                                                                      "descriptionCN": "首选版本是API服务器推荐的版本，这可能就是存储版本。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
                                                                  },
                                                                  "serverAddressByClientCIDRs": {
                                                                      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
                                                                      "descriptionCN": "根据客户端的CIDR地址和服务器正在服务这个组的服务地址，生成这张地图。这样可以尽可能高效地帮助客户端找到服务器。客户端可以根据他们匹配的CIDR地址使用相应的服务器地址。如果有多个匹配的CIDR地址，客户端应该使用最长的匹配的CIDR地址。服务器只返回它认为客户可以匹配的CIDR地址。例如：如果客户端使用内部IP地址到达服务器，则服务器将只返回内部IP地址的CIDR地址。服务器会检查X-Forwarded-For头或X-Real-Ip头或请求RemoteAddr（以顺序）来获取客户端的IP地址。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
                                                                      }
                                                                  },
                                                                  "versions": {
                                                                      "description": "versions are the versions supported in this group.",
                                                                      "descriptionCN": "版本是这个组支持的版本。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
                                                              "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
                                                              "descriptionCN": "APIGroupList是一个列表，其中包含APIGroup，以便客户端可以发现/apis中的API。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个表示对象的版本化 schema。服务器应该将可识别的 schema 转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "groups": {
                                                                      "description": "groups is a list of APIGroup.",
                                                                      "descriptionCN": "\"groups\" 是一个 APIGroup 的列表。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "善良是一种表示这个对象所代表的REST资源的字符串值。服务器可能从客户端提交请求时推断出这一点。无法更新。在CamelCase形式下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
                                                              "description": "APIResource specifies the name of a resource and whether it is namespaced.",
                                                              "descriptionCN": "API资源指定了资源的名称，以及它是命名空间还是不是。",
                                                              "properties": {
                                                                  "categories": {
                                                                      "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
                                                                      "descriptionCN": "类别是一个将资源归类到的列表（例如：'全部'）。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "group": {
                                                                      "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
                                                                      "descriptionCN": "\"组是资源的首选组。空表示包含资源列表的组。对于子资源，这个可能有不同的值，例如：Scale\"",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
                                                                      "descriptionCN": "关键字：resource（资源）、Kind（类型）",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "name is the plural name of the resource.",
                                                                      "descriptionCN": "名词的复数形式是该资源的名称。",
                                                                      "type": "string"
                                                                  },
                                                                  "namespaced": {
                                                                      "description": "namespaced indicates if a resource is namespaced or not.",
                                                                      "descriptionCN": "命名空间指示资源是否是命名空间中的。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "shortNames": {
                                                                      "description": "shortNames is a list of suggested short names of the resource.",
                                                                      "descriptionCN": "资源名称列表中包含了一些建议的简短名字。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "singularName": {
                                                                      "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
                                                                      "descriptionCN": "单个名称是资源的单个名称。这允许客户端处理复数和单数的隐晦方式。使用kubectl CLI接口，单个名称可以更准确地报告单个项目的状态，并允许同时处理单数和复数。",
                                                                      "type": "string"
                                                                  },
                                                                  "storageVersionHash": {
                                                                      "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
                                                                      "descriptionCN": "存储版本的哈希值，当写入数据存储时该资源被转换为的版本。值必须由客户端处理为不可见的。只有与值进行等价比较的有效性。这是一个alpha特性，并且在未来可能会发生变化或删除。这个字段只由apiserver在StorageVersionHash功能门启用时填充。即使它毕业，这个字段仍然可选。",
                                                                      "type": "string"
                                                                  },
                                                                  "verbs": {
                                                                      "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
                                                                      "descriptionCN": "verb 是一个支持的 kube 动作列表 (这包括 get、list、watch、create、update、patch、delete 和 deletecollection，以及 proxy)。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "version": {
                                                                      "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
                                                                      "descriptionCN": "版本是资源的首选版本。空意味着包含资源列表的版本的不同值，例如：v1（当在core resource的组内的v1beta1版本中）。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
                                                              "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
                                                              "descriptionCN": "APIResourceList是一个资源列表，用于暴露特定组和版本中支持的资源名称，并且如果该资源被命名空间。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个表示的对象的版本化结构。服务器应该将识别的规范转换为内部的最新值，如果它们不被接受，则拒绝不受欢迎的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "groupVersion": {
                                                                      "description": "groupVersion is the group and version this APIResourceList is for.",
                                                                      "descriptionCN": "API资源列表的版本是这个APIResourceList所属于的组和版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示这个对象所代表的REST资源的字符串值。服务器可以通过客户端提交请求时的端点推测出它。不能被更新。使用CamelCase命名方式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "resources": {
                                                                      "description": "resources contains the name of the resources and if they are namespaced.",
                                                                      "descriptionCN": "资源包含资源的名称以及它们是否被命名空间分隔。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
                                                                      }
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions": {
                                                              "description": "APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.",
                                                              "descriptionCN": "API版本列表提供了可用的版本，以便客户端发现 /api，这是遗留v1 API的根路径。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象表示的版本化的 schema。服务器应该将识别的 schema 转换为最新的内部值，如果未识别，则拒绝不认可的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind 是表示该对象所代表的 REST 资源的字符串值。服务器可以从客户端提交请求时推测出这个值。不能更新。在 camelCase 中表示。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "serverAddressByClientCIDRs": {
                                                                      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
                                                                      "descriptionCN": "客户端的CIDR地图到服务器地址。这是为了帮助客户端以最高效的网络方式到达服务器。客户可以根据他们匹配的CIDR使用适当的服务器地址。如果有多组匹配，客户应该使用最长的匹配CIDR。服务器只返回它认为客户可以匹配的 CIDR。例如：主路由器只会返回内部IP CIDR，如果客户端通过内部IP访问服务器。服务器查看X-Forwarded-For头部、X-Real-Ip头或请求远程地址（按顺序）来获取客户端 IP。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
                                                                      }
                                                                  },
                                                                  "versions": {
                                                                      "description": "versions are the api versions that are available.",
                                                                      "descriptionCN": "版本是可用的API版本。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.Condition": {
                                                              "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                                              "descriptionCN": "条件包含了当前状态下该API资源的一个方面详细信息。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                                                      "descriptionCN": "最后一次状态转换的时间是当底层条件改变时的状态转换。如果不知道这个时间，那么使用API字段改变时是可以接受的。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                                                                      "descriptionCN": "消息是一个人类可读的指示，详细说明过渡。这可能是一个空字符串。",
                                                                      "type": "string"
                                                                  },
                                                                  "observedGeneration": {
                                                                      "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                                                                      "descriptionCN": "观察到的生成代表根据设置的 .metadata.generation 来指定的状态。例如，如果 .metadata.generation 目前为 12，但 .status.conditions[x].observedGeneration 等于 9，那么条件与当前实例的状态不兼容。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "reason": {
                                                                      "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                                                                      "descriptionCN": "原因包含一个表示条件最后转移原因的程序化标识符。特定类型条件的生产者可能为该字段定义预期值和意义，并确定值是否被视为保证API的行为。值应为CamelCase字符串。此字段不应为空。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "status of the condition, one of True, False, Unknown.",
                                                                      "descriptionCN": "状态状况：真、假、未知。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                                                      "descriptionCN": "CamelCase 和 foo.example.com/CamelCase 这两种方式都表示相同的数据类型，即字符串。它们之间的主要区别在于语法结构和字母缩进的使用。在 camelCase 中，每个单词都是由下划线分隔的，并且每个单词的首字母大写。而在 foo.example.com/CamelCase 中，所有单词都是以下划线开头，而且每个单词的首字母小写。\n\n但是，需要注意的是，在某些情况下， CamelCase 可能不是最直观或易于理解的方式，特别是当我们在实际项目中处理许多相同的代码块时。在这种情况下，我们可以使用另一个更直接的方式来表示数据类型：\n\n```\nclass MyString {\n  // ...\n}\n```\n\n在这个例子中，\"MyString\" 是一个类名，它包含了许多变量和方法，但只有 \"string\" 是一个数据类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
                                                              "description": "DeleteOptions may be provided when deleting an API object.",
                                                              "descriptionCN": "删除选项可能在删除API对象时提供。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion定义了这个对象表示形式的版本化结构。服务器应该将识别的结构转换为内部的最新值，而可能拒绝不识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "dryRun": {
                                                                      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                                                                      "descriptionCN": "当存在时，意味着不应该持久化修改。无效或未识别的干燥运行指令将导致错误响应，并停止对请求的进一步处理。有效值是：- 全部：所有干燥运行阶段都将被处理",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  },
                                                                  "gracePeriodSeconds": {
                                                                      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                                                                      "descriptionCN": "物体删除前的秒数。值必须是非负整数。如果为零，则使用指定类型默认的等待期。如果没有指定，默认将使用每个对象的默认值。零表示立即删除。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示这个对象所代表的REST资源的字符串值。服务器可能根据客户端向它提交请求时使用的端点推测这一点。不能被更新。使用CamelCase。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "orphanDependents": {
                                                                      "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                                                                      "descriptionCN": "已过时，请使用传播策略，该字段将在1.7中被弃用。如果为真/假，则将向对象的finalizers列表添加或移除“孤儿”最终izer。这两个字段可以同时设置，但不能都设置。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "preconditions": {
                                                                      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
                                                                      "descriptionCN": "必须在删除操作前完成。如果没有可能，将返回409冲突状态。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
                                                                  },
                                                                  "propagationPolicy": {
                                                                      "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                                                                      "descriptionCN": "垃圾收集是否和如何进行。 either 这个字段或 orphanDependents 可能会被设置，但两者都不被设置。默认策略由 metadata.finalizers 中的现有最终izer 决定，以及资源特定的默认策略决定。可接受的值有：'Orphan' -孤儿依赖；'Background' -允许垃圾收集器在后台删除依赖；'Foreground' -一种多级递归策略，该策略在前台删除所有依赖。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
                                                              "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                                                              "descriptionCN": "字段V1存储一个像 Trie 的数据结构中的字段集合，以 JSON 格式。每个键都是点符号（.），它总是映射到一个空集，或者是一个字符串表示子字段或项的值。字符串将遵循以下四种格式之一：'f:<name>'，其中 <name> 是结构中字段的名称，或者在 map 'v:<value>' 中的 key 是实际 JSON 格式的列表项 'i:<index>' 中的值，<index> 是列表项 \"k:<keys>\" 中的键的唯一值 如果键映射到一个空 Fields 值，该字段代表的键是集合的一部分。\n指定的格式定义在 sigs.k8s.io/structured-merge-diff",
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
                                                              "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
                                                              "descriptionCN": "版本组包含一个\"group/\"和\"version\"字符串，这是每个版本的\"组\"和\"版本\"。它是一个结构体来保持扩展性。",
                                                              "properties": {
                                                                  "groupVersion": {
                                                                      "description": "groupVersion specifies the API group and version in the form \"group/version\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "version": {
                                                                      "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
                                                                      "descriptionCN": "版本定义了以\"version\"的形式呈现的版本。这可以节省客户端分割GroupVersion时的麻烦。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
                                                              "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                              "descriptionCN": "标签选择器是一种在一组资源上的标签查询。matchLabels和matchExpressions的结果是AND的。空标签选择器匹配所有对象。null标签选择器不匹配任何对象。",
                                                              "properties": {
                                                                  "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "descriptionCN": "匹配表达式是一个标签选择器需求列表。这些要求是并联的。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
                                                                      }
                                                                  },
                                                                  "matchLabels": {
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "descriptionCN": "匹配标签是一个映射，其中键值对对。匹配标签中的一个键值对等于matchExpressions中的一个元素，其key字段为\"key\"，操作符为\"In\"，值数组仅包含\"value\"。这些要求是并行的。",
                                                                      "type": "object"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
                                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                              "descriptionCN": "标签选择器要求是一个包含值、键和关系键与值的查询。",
                                                              "properties": {
                                                                  "key": {
                                                                      "description": "key is the label key that the selector applies to.",
                                                                      "descriptionCN": "\"key\" 是选择器应用到的标签 key。",
                                                                      "type": "string"
                                                                  },
                                                                  "operator": {
                                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                      "descriptionCN": "\"operator\"代表键与一组值之间的关系。有效的操作符包括\"In\", \"NotIn\", \"Exists\"和\"Don'tExist\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "values": {
                                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "descriptionCN": "值数组是一个字符串值的数组。如果操作符是In或NotIn，值数组必须不为空。如果操作符是Exists或DoesNotExist，值数组必须为空。这个数组在战略合并补丁期间会被替换。",
                                                                      "type": "array",
                                                                      "items": {}
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
                                                              "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
                                                              "descriptionCN": "元数据描述了合成资源必须拥有的元数据，包括列表和各种状态对象。一个资源可能只有一个{ObjectMeta, ListMeta}。",
                                                              "properties": {
                                                                  "continue": {
                                                                      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                                                                      "descriptionCN": "如果用户设置了一个返回项数量的限制，可以继续。这意味着服务器有更多的可用数据。值是模糊的，可能用于向提供此列表给先前请求获取下一批可用对象的端点发出另一个请求。如果服务器配置发生变化或超过几分钟过去了，则连续列表可能是不可能的。使用此续传值返回的资源版本字段将与第一响应中的值相同，除非您从错误消息中收到此令牌。",
                                                                      "type": "string"
                                                                  },
                                                                  "remainingItemCount": {
                                                                      "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
                                                                      "descriptionCN": "剩余计数项是指列表中未包含在此列表响应中的后续项的数量。如果请求包含标签或字段选择器，则剩余计数项的未知性，该字段在序列化过程中将被留下为空并省略。如果列表完整（要么因为它不进行分块，要么这是最后一个块），则没有更多的剩余项，该字段将在序列化过程中被留下为空并省略。服务器版本大于v1.15时不设置此字段。剩余计数项的用途是估计集合的大小。客户端不应依赖于剩余计数项来设置或精确。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "resourceVersion": {
                                                                      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                      "descriptionCN": "该字符串标识服务器内部此对象的版本，可用于客户端确定对象何时发生变化。值必须由客户端处理并返回给服务器。这是读取的，不可更改。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                      "type": "string"
                                                                  },
                                                                  "selfLink": {
                                                                      "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                                                                      "descriptionCN": "已经被弃用的selfLink是一个不可修改且只读的字段，系统不再为其提供任何数据。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
                                                              "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                                                              "descriptionCN": "\"ManagedFieldsEntry\"是一个工作流标识符，一个FieldSet和该FieldSet应用于的资源组版本。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                                                                      "descriptionCN": "API版本定义了该字段集应用于此资源的版本。格式为\"group-version\"，类似于顶级APIVersion字段。需要跟踪字段集合的版本，因为它无法自动转换。",
                                                                      "type": "string"
                                                                  },
                                                                  "fieldsType": {
                                                                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "fieldsV1": {
                                                                      "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
                                                                      "descriptionCN": "“FieldsV1”类型下，`FieldsV1`持有第一个JSON格式描述的版本。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
                                                                  },
                                                                  "manager": {
                                                                      "description": "Manager is an identifier of the workflow managing these fields.",
                                                                      "descriptionCN": "经理是管理这些字段的工作流程的标识符。",
                                                                      "type": "string"
                                                                  },
                                                                  "operation": {
                                                                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                                                                      "descriptionCN": "操作类型是导致这个ManagedFieldsEntry被创建的操作。此字段的有效值只有'Apply'和'Update'两个。",
                                                                      "type": "string"
                                                                  },
                                                                  "subresource": {
                                                                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                                                                      "descriptionCN": "子资源是用于更新该对象的子资源名称，或者空字符串如果对象通过主资源进行更新。此字段中的值用于区分管理者，即使他们共享相同的名称。例如，状态更新将与使用相同经理名称的常规更新区分开来。请注意，APIVersion字段与Subresource字段无关，并且始终对应于主资源的版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "time": {
                                                                      "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
                                                                      "descriptionCN": "时间是管理字段添加的日期戳。如果字段被添加，管理员会更新这个日期戳；如果管理员改变一个拥有者的字段值或删除一个字段，日期戳也会被更新。当字段从记录中移除时，日期戳不会被更新，因为另一个管理员接管了它。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime": {
                                                              "description": "MicroTime is version of Time with microsecond level precision.",
                                                              "descriptionCN": "微时是微秒级精度时间的版本。",
                                                              "type": "string",
                                                              "format": "date-time"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
                                                              "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
                                                              "descriptionCN": "对象元数据是所有持久资源必须有的信息，包括用户必须创建的所有对象。",
                                                              "properties": {
                                                                  "annotations": {
                                                                      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                                                                      "descriptionCN": "注释是一个无结构的键值对映射，存储在资源上，可能由外部工具设置以存储和检索任意元数据。它们不查询，并应在修改对象时保持其状态。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                                                                      "type": "object"
                                                                  },
                                                                  "creationTimestamp": {
                                                                      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "创建时间是一个表示服务器创建时的时间戳。这个值不能保证在单独的操作中被设置为发生在先的顺序。客户端可能不会设置这个值。它以RFC3339格式表示，并且是UTC。\n\n由系统填充。只读。空列表。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "deletionGracePeriodSeconds": {
                                                                      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                                                                      "descriptionCN": "此对象允许的最大时间以优雅的方式终止，然后再从系统中移除。只有在删除时间也设置时才能设置。只能被缩短。只读。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "deletionTimestamp": {
                                                                      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "删除时间是用于指定何时资源将被删除的RFC 3339日期和时间。该字段由服务器在用户请求一个优雅删除时设置，而不是由客户端直接设置。资源应在这个字段的时间之后（即资源列表中不再可见，也无法通过名称访问）被期望删除。一旦最终清理者列表为空，删除就会被阻止。一旦删除时间被设置，此值可能不会被设置或设置更远的未来，尽管它可能会被缩短或资源可能会在设定的时间之前被删除。例如，用户可以要求删除一个Pod在30秒内。Kubelet将在Pod中的容器收到平稳终止信号后立即发送硬终止信号（SIGKILL）。清理后，将从API移除Pod。如果未设置，对对象的优雅删除尚未请求。此信息由系统在进行优雅删除请求时填充。这是只读的：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "finalizers": {
                                                                      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                                                                      "descriptionCN": "必须在对象从注册表删除之前为空。每个条目都是负责该卸载项的组件的标识符，将从列表中删除该条目。如果对象的删除时间不为nil，则此列表中的条目只能被删除。最终izers可能按任意顺序进行处理和删除。无法强制执行排序，因为这引入了严重的死锁风险。finalizers是一个共享字段，任何拥有权限的actor都可以重新排序它。如果最终izers列表按照某种顺序进行处理，则导致第一个最后izer的责任组件等待由一个负责后续最后izer的组件产生的信号（字段值、外部系统或其他），从而形成死锁。如果没有强制排序，finalizers可以自由地在其之间排列，并且不受列表排序更改的影响。",
                                                                      "type": "array",
                                                                      "items": {},
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "generateName": {
                                                                      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                                                      "descriptionCN": "生成名是一个可选前缀，服务器使用它来生成一个唯一的名称。如果Name字段没有提供，则会生成唯一名称。这个值也会与一个独特的后缀一起使用。提供的值具有和Name字段相同的验证规则，并可能被服务器的所需长度限制的后缀截断。\n\n如果该字段被指定且生成的名称存在，服务器将返回409错误。\n\n仅适用于Name字段未指定的情况。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                                                      "type": "string"
                                                                  },
                                                                  "generation": {
                                                                      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                                                                      "descriptionCN": "序列号代表特定一代的所求状态。由系统填充。只读。",
                                                                      "type": "integer",
                                                                      "format": "int64"
                                                                  },
                                                                  "labels": {
                                                                      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                                                                      "descriptionCN": "对象的组织和分类可以通过字符串键和值来实现。这些键可以用于选择（scope）和分类（select）。更多详情：https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                                                                      "type": "object"
                                                                  },
                                                                  "managedFields": {
                                                                      "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                                                                      "descriptionCN": "管理字段将工作流-id和版本映射到用于该工作流的管理组中的特定字段。这主要是为了内部维护，用户通常不需要设置或理解这个字段。一个工作流程可以是用户的名称、控制器的名称，也可以是像“ci-cd”这样的特定应用路径的名字。当修改对象时，该工作流程使用的版本总是这些字段。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
                                                                      }
                                                                  },
                                                                  "name": {
                                                                      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                                                      "descriptionCN": "名称必须在命名空间中唯一。尽管一些资源可能允许客户端自动生成适当的名称，但名称主要用于创建idempotence和配置定义。无法更新。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                                                                      "descriptionCN": "命名空间定义了每个名称的空间。空命名空间等同于默认命名空间，但“默认”是标准的表示。并非所有对象都需要在命名空间中受到限制 - 对于这些对象，该字段的值将为空。",
                                                                      "type": "string"
                                                                  },
                                                                  "ownerReferences": {
                                                                      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                                                                      "descriptionCN": "这个对象依赖的对象的列表。如果列表中的所有对象都被删除，这个对象会被垃圾收集。如果这个对象是由控制器管理的，那么这个列表中会有一个条目指向控制器，控制器字段设置为true。不能有超过一个管理控制器。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                                                                      },
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  },
                                                                  "resourceVersion": {
                                                                      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                                                                      "descriptionCN": "这是一个表示对象内部版本的不可见值，客户可以使用这个值来确定对象是否已经发生变化。可以用于乐观并发、更改检测和对资源或一组资源的监视操作。客户端必须将这些值视为不可见，并直接返回给服务器。它们只能在特定资源或一组资源上有效。\n\n由系统生成并只读。需要被客户端处理为不可见，并且不能直接返回给服务器。只能在特定资源或一组资源上有效。更多信息可以在https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency中找到。",
                                                                      "type": "string"
                                                                  },
                                                                  "selfLink": {
                                                                      "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                                                                      "descriptionCN": "已过时的：selfLink 是一个遗留的只读字段，系统不再为其生成数据。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "descriptionCN": "此对象的唯一时间/空间值是UID。通常由服务器在成功创建资源时生成，并不允许通过PUT操作更改。\n\n系统填充。读取式。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
                                                              "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                                                              "descriptionCN": "拥有者参考包含了足够的信息，让你能够识别一个拥有对象。拥有对象必须与依赖项在同一命名空间中，或者是在簇态中，因此没有命名空间字段。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "API version of the referent.",
                                                                      "descriptionCN": "参考API版本。",
                                                                      "type": "string"
                                                                  },
                                                                  "blockOwnerDeletion": {
                                                                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                                                                      "descriptionCN": "如果真，则且如果所有权人具有“ foregroundDeletion”最终处理器，那么所有权人将无法从键/值存储中删除。参考https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion 可以了解垃圾收集器如何与该字段交互，并强制执行前台删除。默认为false。要设置此字段，请用户拥有所有权者的“delete”权限，否则422（无响应）将返回。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "controller": {
                                                                      "description": "If true, this reference points to the managing controller.",
                                                                      "descriptionCN": "如果真实，这个参考点指向管理控制器。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "类型：参考人\n更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                                                      "descriptionCN": "命名对象的指针。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names/",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "descriptionCN": "参考ID。更多信息：https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
                                                              "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
                                                              "descriptionCN": "修补程序是提供给Kubernetes PATCH请求体的具象名称和类型。",
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
                                                              "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
                                                              "descriptionCN": "在进行操作（如更新、删除等）之前，必须满足先决条件。",
                                                              "properties": {
                                                                  "resourceVersion": {
                                                                      "description": "Specifies the target ResourceVersion",
                                                                      "descriptionCN": "指定目标ResourceVersion。",
                                                                      "type": "string"
                                                                  },
                                                                  "uid": {
                                                                      "description": "Specifies the target UID.",
                                                                      "descriptionCN": "指定目标用户ID。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
                                                              "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
                                                              "descriptionCN": "根据客户端CIDR，服务器地址可以帮助客户端确定他们应该使用哪种服务器地址。",
                                                              "properties": {
                                                                  "clientCIDR": {
                                                                      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
                                                                      "descriptionCN": "CIDR，即类目限制路由协议，可以用来为客户匹配他们的IP地址以确定应该使用的服务器地址。",
                                                                      "type": "string"
                                                                  },
                                                                  "serverAddress": {
                                                                      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
                                                                      "descriptionCN": "本服务器地址，适用于匹配上述CIDR的客户端。可以是主机名、主机名:port、IP或IP:port。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
                                                              "description": "Status is a return value for calls that don't return other objects.",
                                                              "descriptionCN": "状态是一个返回值，用于调用不返回其他对象的情况。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是此对象表示形式的版本化的 schema。服务器应该将可识别的 schema 转换为最新的内部值，并可能拒绝不可识别的值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "code": {
                                                                      "description": "Suggested HTTP return code for this status, 0 if not set.",
                                                                      "descriptionCN": "这状态的HTTP返回代码，如果没有设置的话是0。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "details": {
                                                                      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
                                                                      "descriptionCN": "原因相关的扩展数据。每个原因可能定义其自己的扩展细节。该字段是可选的，并且返回的数据不保证符合任何类型的规范，除了根据原因类型所定义的规范。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "“Kind”是表示这个对象所代表的REST资源的一个字符串值。服务器可能根据客户端提交请求时提供的端点来推测这一点。无法被更新。在驼峰命名法下。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human-readable description of the status of this operation.",
                                                                      "descriptionCN": "这个操作的状态的可读描述。",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "标准元数据列表。更多详情：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  },
                                                                  "reason": {
                                                                      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                                                                      "descriptionCN": "这是一种可读的关于为什么这个操作处于\"失败\"状态的文字描述。如果该值为空，则没有信息可用。原因可以解释HTTP状态代码，但它不会覆盖它。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "descriptionCN": "任务状态。一栏：\"成功\" 或 \"失败\"。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
                                                              "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
                                                              "descriptionCN": "状态原因提供了关于API的状态失败的更多信息，包括遇到多个错误的情况。",
                                                              "properties": {
                                                                  "field": {
                                                                      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "message": {
                                                                      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                                                                      "descriptionCN": "为错误原因的可读描述。这个字段可能被直接呈现给读者。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                                                                      "descriptionCN": "错误原因的文字描述。如果此值为空，无可用信息。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
                                                              "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
                                                              "descriptionCN": "状态详细信息是一个服务器可能设置的额外属性集，用于提供关于响应的更多信息。Status对象的状态字段定义了将要设置的属性类型。客户端必须忽略不符合定义的每种属性的字段，并应假设任何属性都可能是空的、无效的或未定义的。",
                                                              "properties": {
                                                                  "causes": {
                                                                      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                                                                      "descriptionCN": "状态原因数组包含更多与失败状态相关的信息。并非所有的StatusReasons都提供详细的原因。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
                                                                      }
                                                                  },
                                                                  "group": {
                                                                      "description": "The group attribute of the resource associated with the status StatusReason.",
                                                                      "descriptionCN": "与状态StatusReason关联的资源属性组。",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "这种与状态StatusReason关联的资源类型。在某些操作中可能与其请求的资源类型不同。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "name": {
                                                                      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                                                                      "descriptionCN": "状态原因资源与当前状态StatusReason关联的资源名称属性。",
                                                                      "type": "string"
                                                                  },
                                                                  "retryAfterSeconds": {
                                                                      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                                                                      "descriptionCN": "如果指定，操作前的时间（秒）应进行重试。一些错误可能表明客户端需要采取替代行动-对于这些错误，该字段可能指示等待时间以采取替代行动。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "uid": {
                                                                      "description": "UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "descriptionCN": "资源的uid。（当存在一个可以描述的单一资源时）。更多详情：https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
                                                              "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                                                              "descriptionCN": "时间是一个围绕时间的容器。这个容器支持正确地将数据包装为YAML和JSON格式。为了许多提供给time包的工厂方法，提供了相应的包装器。\n\n1. 我们需要知道yaml 和 json 的基本格式。\n2. time 包提供了一种优雅的方式来使用这些格式。\n3. time 包中的许多 factory 方法都将数据转换为这样的格式。\n4. 使用正确的包装器可以轻松地实现这一点。\n\n因此，在我们的程序中，我们可以这样做：\n\n```python\nimport yaml\n\n# 假设我们有一个日历实例\ncalendar = Calendar()\n\n# 将日历实例转换为YAML格式\nyaml_data = calendar.to_yaml()\n\nprint(yaml_data)  # 输出: \n```\n\n在这个例子中，我们首先导入了yaml库。然后，我们创建了一个名为Calendar的类，并将其初始化为一个日历实例。接着，我们将这个日历实例转换为YAML格式，并打印出来。结果将会是以下形式：\n\n```yaml\n- date: '2022-05-01'\n  title: 'May Day'\n```\n\n这就是如何使用time库来正确地将日期和标题封装在YAML和JSON格式的数据中。",
                                                              "type": "string",
                                                              "format": "date-time"
                                                          },
                                                          "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
                                                              "description": "Event represents a single event to a watched resource.",
                                                              "descriptionCN": "事件是指对被监视的资源的一个单独事件。",
                                                              "properties": {
                                                                  "object": {
                                                                      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
                                                                      "descriptionCN": "对象：\n- 如果类型添加或修改：该对象的新状态。\n- 如果类型删除：在删除之前该对象的状态。\n- 如果类型错误：*建议状态；根据上下文其他类型可能有意义。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
                                                                  },
                                                                  "type": {
                                                                      "descriptionCN": "当然可以，但是我需要您提供需要翻译的文字。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.runtime.RawExtension": {
                                                              "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
                                                              "descriptionCN": "元数据扩展用于存储外部版本中的扩展。\n\n要使用此功能，请在您的外部，版本化的结构中创建一个字段，其类型为`RawExtension`。同时，在内部结构中创建一个对象`MyPlugin`。您还需要注册各种插件类型。\n\n// 内部包：\n\n类型 `MyAPIObject` 结构体包含 JSON 中的 `typeMeta` 和 `MyPlugin` 对象。\n// type PluginA 结构体包含 'aOption' 字段和 `MyPlugin` 对象。\n\n// 外部包：\n\n类型 `MyAPIObject` 结构体包含 `json:\",inline\"` 标签，表示字段 `myPlugin` 是内部 `MyAPIObject` 结构体的一部分。\n// type PluginA 结构体包含 'aOption' 字段和 `MyPlugin` 对象。\n\n// 在网络上，JSON 将看起来像这样：\n\n{\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\"\n\t},\n}\n\n那么会发生什么？首先使用 json 或 yaml 解码序列化的数据到外部的 MyAPIObject 结构体中。这会导致原始 JSON 被存储而不被解压。下一步是复制（通过 pkg/conversion）到内部结构中。 runtime 包的 DefaultScheme 已经安装了将存储在 RawExtension 中的 JSON 转换为正确对象类型的转换函数。当该对象是未知类型的时，runtime.Unknown 对象将被创建并存储。",
                                                              "type": "object"
                                                          },
                                                          "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
                                                              "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
                                                              "descriptionCN": "IntOrString 是一种可以存储整数或字符串的类型。当用于 JSON 或 YAML 浮点数和解码/反序列化时，它会产生或消费其内部类型。这使得你可以具有例如一个 JSON 字段，它可以接受名称或数字。",
                                                              "type": "string",
                                                              "format": "int-or-string"
                                                          },
                                                          "io.k8s.apimachinery.pkg.version.Info": {
                                                              "description": "Info contains versioning information. how we'll want to distribute that information.",
                                                              "descriptionCN": "信息包含版本信息。我们将如何分发该信息。",
                                                              "properties": {
                                                                  "buildDate": {
                                                                      "descriptionCN": "当然可以，请您把需要翻译的文字发给我。",
                                                                      "type": "string"
                                                                  },
                                                                  "compiler": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请提供需要翻译的文字以便我为您服务。",
                                                                      "type": "string"
                                                                  },
                                                                  "gitCommit": {
                                                                      "descriptionCN": "当然可以，但是我需要您提供原始的中文文字内容，才能进行翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "gitTreeState": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请您提供文本，我将为您进行准确的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "gitVersion": {
                                                                      "type": "string"
                                                                  },
                                                                  "goVersion": {
                                                                      "descriptionCN": "很抱歉，您没有提供需要翻译的文字。请提供文本，我将尽快为您提供准确的中文翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "major": {
                                                                      "descriptionCN": "非常抱歉，您的问题没有提供需要翻译的文字。请您提供完整的文字，我会尽我所能进行翻译。",
                                                                      "type": "string"
                                                                  },
                                                                  "minor": {
                                                                      "descriptionCN": "对不起，您没有提供要翻译的文字。请提供需要翻译的文字，我会尽力为您完成翻译任务。",
                                                                      "type": "string"
                                                                  },
                                                                  "platform": {
                                                                      "descriptionCN": "对不起，您没有提供需要翻译的文字。请提供需要翻译的文本，我会尽力帮助您将其翻译成中文。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService": {
                                                              "description": "APIService represents a server for a particular GroupVersion. Name must be \"version.group\".",
                                                              "descriptionCN": "APIService代表特定GroupVersion服务器。名称必须是\"version.group\"。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "API版本定义了这个对象的版本化结构。服务器应该将识别的模式转换为内部的最新值，如果遇到未识别的值，则可能拒绝。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "Kind是一个表示此对象所代表的REST资源的字符串值。服务器可以根据客户端提交请求时提供的端点来推测此值。不能被更新。 CamelCase形式。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准对象的元数据。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
                                                                  },
                                                                  "spec": {
                                                                      "description": "Spec contains information for locating and communicating with a server",
                                                                      "descriptionCN": "规范包含用于定位和与服务器通信的信息。",
                                                                      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status contains derived information about an API server",
                                                                      "descriptionCN": "状态中包含有关API服务器的衍生信息。",
                                                                      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition": {
                                                              "description": "APIServiceCondition describes the state of an APIService at a particular point",
                                                              "descriptionCN": "APIServiceCondition描述了一个APIService在特定时刻的状态。",
                                                              "properties": {
                                                                  "lastTransitionTime": {
                                                                      "description": "Last time the condition transitioned from one status to another.",
                                                                      "descriptionCN": "上次的状态转换。",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                                                                  },
                                                                  "message": {
                                                                      "description": "Human-readable message indicating details about last transition.",
                                                                      "descriptionCN": "可读的指示最后过渡细节的文字。",
                                                                      "type": "string"
                                                                  },
                                                                  "reason": {
                                                                      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                                                                      "descriptionCN": "独特，一词， CamelCase 的原因使该条件的最后过渡状态。",
                                                                      "type": "string"
                                                                  },
                                                                  "status": {
                                                                      "description": "Status is the status of the condition. Can be True, False, Unknown.",
                                                                      "descriptionCN": "状态是状况的状态。可以是真实的，也可以是假的，或者未知的。",
                                                                      "type": "string"
                                                                  },
                                                                  "type": {
                                                                      "description": "Type is the type of the condition.",
                                                                      "descriptionCN": "类型是条件的类型。",
                                                                      "type": "string"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList": {
                                                              "description": "APIServiceList is a list of APIService objects.",
                                                              "descriptionCN": "APIServiceList 是一个包含 APIService 对象的列表。",
                                                              "properties": {
                                                                  "apiVersion": {
                                                                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "descriptionCN": "APIVersion 是这个表示对象的版本化的结构定义。服务器应该将识别的 schema 转换为内部最新的值，如果发现不认可的值，则可能拒绝这些值。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                      "type": "string"
                                                                  },
                                                                  "items": {
                                                                      "description": "Items is the list of APIService",
                                                                      "descriptionCN": "物品是APIService列表",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
                                                                      }
                                                                  },
                                                                  "kind": {
                                                                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "descriptionCN": "\"Kind\"是一个表示这个对象所代表的REST资源的字符串值。服务器可能通过客户端提交请求时引用的端点推测出这一点。不能被更新。使用CamelCase命名。更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                      "type": "string"
                                                                  },
                                                                  "metadata": {
                                                                      "description": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "descriptionCN": "标准元数据更多信息：https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                                                      "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec": {
                                                              "description": "APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.",
                                                              "descriptionCN": "APIServiceSpec包含寻找和与服务器通信的信息。仅https支持，尽管您可以禁用证书验证。",
                                                              "properties": {
                                                                  "caBundle": {
                                                                      "description": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.",
                                                                      "descriptionCN": "CA bundle是一个PEM编码的CA绑定，它将用于验证API服务器的部署证书。如果没有指定，系统对apiserver的信任根将被使用。",
                                                                      "type": "string",
                                                                      "format": "byte",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                  },
                                                                  "group": {
                                                                      "description": "Group is the API group name this server hosts",
                                                                      "descriptionCN": "该服务器托管的API组名称为\"Group\"。",
                                                                      "type": "string"
                                                                  },
                                                                  "groupPriorityMinimum": {
                                                                      "description": "GroupPriorityMinimum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMinimum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s",
                                                                      "descriptionCN": "优先级最低为这个组应至少拥有的优先级。更高优先级意味着该组比低优先级组更受客户欢迎。请注意，其他版本的该组可能还指定更高的优先级值，以便整个组获得更高的优先级。主排序基于优先级最低，从高到低排序（20之前10）。次要排序基于对象名称的字母顺序比较。 (v1.bar before v1.foo) 我们建议像 *.k8s.io (除了扩展名) 之类的在18000, PaaSes (OpenShift, Deis) 推荐作为优先级别最高的。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  },
                                                                  "insecureSkipTLSVerify": {
                                                                      "description": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.",
                                                                      "descriptionCN": "在与此服务器进行通信时，不启用TLS证书验证。这非常强烈建议。你应该使用CA Bundle。",
                                                                      "type": "boolean"
                                                                  },
                                                                  "service": {
                                                                      "description": "Service is a reference to the service for this API server.  It must communicate on port 443. If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.",
                                                                      "descriptionCN": "服务是这个API服务器上的服务参考。它必须在端口443上通信。如果Service为nil，这意味着处理API分组版本的本地处理正在由此服务器进行。调用将简单地委托给正常处理链来完成。",
                                                                      "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference"
                                                                  },
                                                                  "version": {
                                                                      "description": "Version is the API version this server hosts.  For example, \"v1\"",
                                                                      "descriptionCN": "",
                                                                      "type": "string"
                                                                  },
                                                                  "versionPriority": {
                                                                      "description": "VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
                                                                      "descriptionCN": "版本优先级控制着这个API版本在它组中的顺序。必须大于0。主要排序是基于VersionPriority，按照从高到低（10之前20）。由于它是内部的组，数量可能很小，可能在10s左右。如果两个版本具有相同的优先级，则会使用版本字符串来计算分组内的顺序。如果版本字符串为\"kube-like\"，则会在非\"kube-like\"版本字符串之间进行升序排序，这些版本按字典顺序排序。\"Kube-like\"版本首先按照GA>beta>alpha（其中GA是不带后缀的beta或alpha版本），然后根据比较主要版本和最小版本。示例排列列表：v10，v2，v1，v11beta2，v10beta3，v3beta1，v12alpha1，v11alpha2，foo1，foo10。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus": {
                                                              "description": "APIServiceStatus contains derived information about an API server",
                                                              "descriptionCN": "APIServiceStatus包含API服务器的衍生信息。",
                                                              "properties": {
                                                                  "conditions": {
                                                                      "description": "Current service state of apiService.",
                                                                      "descriptionCN": "当前API服务的状态。",
                                                                      "type": "array",
                                                                      "items": {
                                                                          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition"
                                                                      },
                                                                      "x-kubernetes-list-map-keys": [
                                                                          "type"
                                                                      ],
                                                                      "x-kubernetes-list-type": "map",
                                                                      "x-kubernetes-patch-strategy": "merge"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          },
                                                          "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference": {
                                                              "description": "ServiceReference holds a reference to Service.legacy.k8s.io",
                                                              "descriptionCN": "ServiceReference 保存了一个 Service 的引用。legacy.k8s.io",
                                                              "properties": {
                                                                  "name": {
                                                                      "description": "Name is the name of the service",
                                                                      "descriptionCN": "姓名是服务的名称",
                                                                      "type": "string"
                                                                  },
                                                                  "namespace": {
                                                                      "description": "Namespace is the namespace of the service",
                                                                      "descriptionCN": "服务的命名空间是其所在的命名空间。",
                                                                      "type": "string"
                                                                  },
                                                                  "port": {
                                                                      "description": "If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).",
                                                                      "descriptionCN": "如果指定，服务中托管webhook的端口，默认为443以保持兼容性。`port`应为有效的端口号（1-65535，不包括）。",
                                                                      "type": "integer",
                                                                      "format": "int32"
                                                                  }
                                                              },
                                                              "type": "object"
                                                          }
                                                      }
                                                  }
                                                  """;
}
