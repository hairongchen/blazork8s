@using BlazorApp.Pages.Cluster
@using BlazorApp.Service.k8s
@using BlazorApp.Utils.Prometheus.Models.Interfaces
@using k8s.Models
@inherits BlazorApp.Pages.Common.DrawerPageBase<V1Node>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_cpu_seconds_total"]
                            MetricName="process_cpu_seconds_total" Unit="seconds">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_open_fds"]
                            MetricName="process_open_fds">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_max_fds"]
                            MetricName="process_max_fds">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_resident_memory_bytes"]
                            MetricName="process_resident_memory_bytes" Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_virtual_memory_bytes"]
                            MetricName="process_virtual_memory_bytes" Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["process_virtual_memory_max_bytes"]
                            MetricName="process_virtual_memory_max_bytes" Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_ulimits_soft"]
                            MetricName="container_ulimits_soft">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_oom_events_total"]
                            MetricName="container_oom_events_total">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_processes"]
                            MetricName="container_processes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_scrape_error"]
                            MetricName="container_scrape_error">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_sockets"]
                            MetricName="container_sockets">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_spec_cpu_period"]
                            MetricName="container_spec_cpu_period">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_spec_cpu_quota"]
                            MetricName="container_spec_cpu_quota">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_spec_cpu_shares"]
                            MetricName="container_spec_cpu_shares">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_spec_memory_limit_bytes"]
                            MetricName="container_spec_memory_limit_bytes"
                            Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics"
                            Title=@L["container_spec_memory_reservation_limit_bytes"]
                            MetricName="container_spec_memory_reservation_limit_bytes"
                            Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_spec_memory_swap_limit_bytes"]
                            MetricName="container_spec_memory_swap_limit_bytes"
                            Unit="bytes">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_tasks_state"]
                            MetricName="container_tasks_state">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_threads"]
                            MetricName="container_threads">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@CAdvisorMetrics" Title=@L["container_threads_max"]
                            MetricName="container_threads_max">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["go_goroutines"]
                            MetricName="go_goroutines">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["go_threads"]
                            MetricName="go_threads">
</MetricsCounterGaugeSumView>
<MetricsCounterGaugeSumView AllMetrics="@Metrics" Title=@L["go_gc_heap_allocs_bytes_total"]
                            MetricName="go_gc_heap_allocs_bytes_total" Unit="bytes">
</MetricsCounterGaugeSumView>
<MetircsHistogramTotalAvgView AllMetrics="@Metrics" Title=@L["go_gc_pauses_seconds"]
                              MetricName="go_gc_pauses_seconds"
                              Unit="seconds">
</MetircsHistogramTotalAvgView>


<MetircsHistogramTotalAvgView AllMetrics="@Metrics" Title=@L["go_gc_duration_seconds"]
                              MetricName="go_gc_duration_seconds"
                              Unit="seconds">
</MetircsHistogramTotalAvgView>
<MetircsHistogramTotalAvgView AllMetrics="@Metrics" Title=@L["go_gc_heap_allocs_by_size_bytes"]
                              MetricName="go_gc_heap_allocs_by_size_bytes"
                              Unit="bytes">
</MetircsHistogramTotalAvgView>
<MetircsHistogramTotalAvgView AllMetrics="@Metrics" Title=@L["go_sched_latencies_seconds"]
                              MetricName="go_sched_latencies_seconds"
                              Unit="seconds">
</MetircsHistogramTotalAvgView>

@code {
    [Parameter] public V1Node Node { get; set; }

    [Inject] INodeService NodeService { get; set; }
    private IList<IMetric> Metrics { get; set; }
    private IList<IMetric> CAdvisorMetrics { get; set; }
    private IList<IMetric> ResourceMetrics { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Node = Options;
        Metrics = await NodeService.GetMetrics(Node.Name());
        CAdvisorMetrics = await NodeService.GetCadvisorMetrics(Node.Name());
        ResourceMetrics = await NodeService.GetResourceMetrics(Node.Name());

        await base.OnInitializedAsync();
    }


}
