@page "/Service"
@using BlazorApp.Pages.Common
@using BlazorApp.Pages.Common.Html.HTable
@using BlazorApp.Pages.Common.Metadata
@using k8s.Models
@inherits BlazorApp.Pages.Common.TableBase<V1Service>
@if (TableData.PagedItems != null)
{
    <HTable Class="wideTable">
        <HTr>
            <HTd >
                <SearchToolBar Title=@L["Service"] Count="@TableData.Total" OnItemDeletedCallback="@(async () => await InvokeAsync(StateHasChanged))"
                               OnSelectedItemCloseClicked="@TableData.RemoveSelection"
                               OnRemoveAllClicked="@TableData.RemoveAllSelection" TableData="@TableData"
                               OnSearch="OnSearchHandler" TItem="V1Service"
                               OnNsSelected="OnNsSelectedHandler">
                </SearchToolBar>
            </HTd>
        </HTr>
        <HTr>
            <HTd >
                <Table TItem="V1Service"
                       DataSource="@TableData.PagedItems"
                       Size=@TableSize.Small Bordered="true"
                       Total="TableData.Total"
                       @bind-PageIndex="TableData.PageIndex"
                       @bind-PageSize="TableData.PageSize"
                       @bind-SelectedRows="TableData.SelectedRows"
                       Loading="TableData.Loading"
                       OnChange="OnPageChangeHandler">
                    <Selection Key="@(context.Name())"/>
                    <AntDesign.Column Field="@context.Name()" Title=@L["Name"]>
                        <Button OnClick="@(() => OnItemNameClick(context))" Type="@ButtonType.Link">@context.Name()</Button>
                    </AntDesign.Column>
                    <AntDesign.Column Field="@context.Namespace()" Title=@L["Namespace"] Width="110px"/>

                    <AntDesign.Column Title=@L["Type"] TData="string">
                        <ColorfulTag>@context.Spec.Type</ColorfulTag>
                    </AntDesign.Column>
                    <AntDesign.Column Title=@L["ClusterIP"] TData="string" Width="100px">
                        @if (context.Spec.ClusterIPs is { Count: > 0 })
                        {
                            @foreach (var p in context.Spec.ClusterIPs)
                            {
                                <ColorfulTag>@p</ColorfulTag>
                            }
                        }
                    </AntDesign.Column>

                    <AntDesign.Column Title=@L["Ports"] TData="string" Width="100px">
                        @foreach (var p in context.Spec.Ports)
                        {
                            <ColorfulTag>@($"{p.Port}{(p.NodePort != null ? ":" + p.NodePort : "")}/{p.Protocol}")</ColorfulTag>
                        }
                    </AntDesign.Column>
                    <AntDesign.Column Title=@L["Headless"] TData="string" Width="100px">
                        @if (context.Spec.ClusterIP == "None" && context.Spec.Type == "ClusterIP")
                        {
                            <ColorfulTag>True</ColorfulTag>
                        }
                    </AntDesign.Column>
                    <AntDesign.Column Title=@L["Selector"] TData="string" Width="100px">
                        <SelectorView Selector="@context.Spec.Selector"></SelectorView>
                    </AntDesign.Column>
                    <AntDesign.Column Title=@L["ExternalIP"] TData="string" Width="100px">
                        @if (context.Spec.ExternalIPs is { Count: > 0 })
                        {
                            @foreach (var p in context.Spec.ExternalIPs)
                            {
                                <ColorfulTag>@p</ColorfulTag>
                            }
                        }
                    </AntDesign.Column>
                    <AntDesign.Column Title=@L["Age"] TData="string" Width="100px">
                        <AgeView Age="@context.CreationTimestamp()"></AgeView>
                    </AntDesign.Column>
                    <ActionColumn Title=@L["Action"] Width="100px">
                        <ServiceAction Item="@context"></ServiceAction>
                    </ActionColumn>
                </Table>

            </HTd>
        </HTr>
    </HTable>

    <ResourceWatcher OnResourceChanged="OnResourceChanged" T="V1Service"></ResourceWatcher>
}
