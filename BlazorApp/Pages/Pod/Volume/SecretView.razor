@using k8s.Models
@using BlazorApp.Pages.Common.Html.HTable
@using BlazorApp.Pages.Common.Metadata
@using BlazorApp.Utils
@using BlazorApp.Pages.Common.Html
@inherits BlazorApp.Pages.Common.PageBase

@if (Volume.Secret != null)
{
    <BadgeRibbon Text="@Volume.Name" Placement="start" Color="#832">
        <TextTemplate>
            <span style="color:#DCDCDC">@Index</span>
            <Icon Type="hdd" Theme="outline"/>
            @Volume.Name
        </TextTemplate>
        <ChildContent>
            <Card Bordered>
                <HTable >
                    <HTableColumn Title="Volume" ExplainField="pod.spec.volumes.secret">
                        <RefView Ref="@TransferToRef(Volume)" FullView="true"></RefView>
                    </HTableColumn>


                    <PropertySimpleView Title=@L["Name"] ExplainField="pod.spec.volumes.secret.secretName" Item="@Volume.Secret.SecretName"></PropertySimpleView>
                    <PropertySimpleView Title="DefaultMode" ExplainField="pod.spec.volumes.secret.defaultMode" Item="@Volume.Secret.DefaultMode"></PropertySimpleView>
                    <PropertySimpleView Title="Optional" ExplainField="pod.spec.volumes.secret.optional" Item="@Volume.Secret.Optional"></PropertySimpleView>

                    @if (Volume.Secret.Items != null)
                    {
                        @foreach (var ktp in Volume.Secret.Items)
                        {
                            <HTableColumn Title="Secret" ExplainField="pod.spec.volumes.secret">
                                <Tag>@Volume.Name</Tag> <Tag Color="@RandomColorHelper.RandomColor()">Secret</Tag>
                                <Tag>@ktp.Key => @ktp.Path</Tag>
                                @if (ktp.Mode != null)
                                {
                                    <Tag>@ktp.Mode</Tag>
                                }
                                <KubectlExplainButton Field="pod.spec.volumes.secret.items"></KubectlExplainButton>
                            </HTableColumn>
                        }
                    }
                </HTable>
            </Card>
        </ChildContent>
    </BadgeRibbon>
}


@code {



    [Parameter]
    public V1Volume Volume { get; set; }

    [Parameter]
    public int Index { get; set; }

    [Parameter]
    public string Namespace { get; set; }

    private V1ObjectReference TransferToRef(V1Volume volume)
    {
        return new V1ObjectReference()
        {
            Name              = volume.Secret.SecretName,
            Kind              = "Secret",
            NamespaceProperty = Namespace
        };
    }

}
