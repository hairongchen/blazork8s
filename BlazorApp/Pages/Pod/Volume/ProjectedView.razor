@using k8s.Models
@using BlazorApp.Pages.Common.Html.HTable
@using BlazorApp.Pages.Common.Metadata
@using BlazorApp.Utils
@if (Volume.Projected != null)
{
    <BadgeRibbon Text="@Volume.Name" Placement="start" Color="#832">
        <TextTemplate>
            <span style="color:#DCDCDC">@Index</span>
            <Icon Type="hdd" Theme="outline"/>
            @Volume.Name
        </TextTemplate>
        <ChildContent>
            <Card Bordered>
                <HTable >
                    <HTr>
                        <HTd>Volume</HTd>
                        <HTd >
                            <Tag>@Volume.Name</Tag> <Tag Color="@RandomColorHelper.RandomColor()">Projected</Tag>
                            <KubectlExplainButton Field="pod.spec.volumes.projected"></KubectlExplainButton>
                        </HTd>
                    </HTr>

                    <PropertySimpleView Title="DefaultMode" ExplainField="pod.spec.volumes.projected.defaultMode" Item="@Volume.Projected.DefaultMode"></PropertySimpleView>

                    @foreach (var p in Volume.Projected.Sources)
                    {
                        @if (p.DownwardAPI != null && p.DownwardAPI.Items != null)
                        {
                            @foreach (var item in p.DownwardAPI.Items)
                            {
                                <HTr>
                                    <HTd >
                                        DownwardAPI
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.downwardAPI"></KubectlExplainButton>
                                    </HTd >
                                    <HTd >
                                        <Tag Icon="hdd" Color="@RandomColorHelper.RandomColor()">@item.Path</Tag>
                                        @if (item.FieldRef != null)
                                        {
                                            <Tag>@item.Mode @item.FieldRef.ApiVersion/@item.FieldRef.FieldPath </Tag>
                                        }
                                        @if (item.ResourceFieldRef != null)
                                        {
                                            <Tag> @item.ResourceFieldRef.ContainerName/@item.ResourceFieldRef.Resource</Tag>
                                        }
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.downwardAPI.items"></KubectlExplainButton>
                                    </HTd>
                                </HTr>
                            }
                        }


                        @if (p.ConfigMap != null && p.ConfigMap.Items != null)
                        {
                            @foreach (var ktp in p.ConfigMap.Items)
                            {
                                <HTr>
                                    <HTd >
                                        ConfigMap
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.configMap"></KubectlExplainButton>

                                    </HTd >
                                    <HTd >
                                        <Tag Icon="hdd" Color="@RandomColorHelper.RandomColor()">@p.ConfigMap.Name</Tag>
                                        <Tag>@ktp.Key => @ktp.Path</Tag>
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.configMap.items"></KubectlExplainButton>
                                    </HTd>
                                </HTr>
                            }
                        }

                        @if (p.Secret != null && p.Secret.Items != null)
                        {
                            @foreach (var ktp in p.Secret.Items)
                            {
                                <HTr>
                                    <HTd >
                                        Secret
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.secret"></KubectlExplainButton>
                                    </HTd >
                                    <HTd >
                                        <Tag Icon="hdd" Color="@RandomColorHelper.RandomColor()"> @p.Secret.Name</Tag>
                                        <Tag>@ktp.Key => @ktp.Path</Tag>
                                        <KubectlExplainButton Field="pod.spec.volumes.projected.sources.secret.items"></KubectlExplainButton>
                                    </HTd>
                                </HTr>
                            }
                        }

                        @if (p.ServiceAccountToken != null)
                        {
                            <HTr>
                                <HTd >
                                    ServiceAccountToken
                                    <KubectlExplainButton Field="pod.spec.volumes.projected.sources.serviceAccountToken"></KubectlExplainButton>
                                </HTd >
                                <HTd >
                                    <Tag Icon="hdd" Color="@RandomColorHelper.RandomColor()"> @p.ServiceAccountToken.Path</Tag>
                                    <Tag>@p.ServiceAccountToken.Audience @p.ServiceAccountToken.ExpirationSeconds s</Tag>
                                    <KubectlExplainButton Field="pod.spec.volumes.projected.sources.serviceAccountToken"></KubectlExplainButton>
                                </HTd>
                            </HTr>
                        }
                    }
                </HTable>
            </Card>
        </ChildContent>
    </BadgeRibbon>
}


@code {

    [Parameter]
    public V1Volume Volume { get; set; }

    [Parameter]
    public int Index { get; set; }

}
