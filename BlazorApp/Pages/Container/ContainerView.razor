@using Extension.k8s
@using BlazorApp.Pages.Common.Metadata
@if (Containers != null)
{
    @foreach (var c in Containers)
    {
        <BadgeRibbon Text="@c.Name" Placement="start">
            <Card Bordered>
                <Descriptions Title="" Bordered Column="1">
                    <DescriptionsItem Title="Name">
                        <ContainerType Type="@Type"></ContainerType>
                        @c.Name
                    </DescriptionsItem>
                    <DescriptionsItem Title="Status">
                        @{
                            var (sum, msg) = ContainerStatuses.ReadySummaryWithMsg(c.Name);
                            if (sum == "Ready")
                            {
                                <Tag Color="Green">Ready</Tag>
                            }
                            else
                            {
                                <Tag Color="orange-inverse">@sum</Tag>
                                <p>@msg</p>
                            }
                        }
                    </DescriptionsItem>
                    <PropertySimpleView Title="RestartCount" Item="@ContainerStatuses.Where(x => x.Name == c.Name).Sum(x => x.RestartCount)" ExplainField="pod.status.containerStatuses.restartCount"></PropertySimpleView>
                    <PropertySimpleView Title="Image" Item="@c.Image" ExplainField="pod.spec.containers.name"></PropertySimpleView>
                    <PropertyOptionView Title="ImagePullPolicy" ExplainField="pod.spec.containers.imagePullPolicy" Item="@c.ImagePullPolicy" Options='@(new[] { "Always", "IfNotPresent", "Never" })'></PropertyOptionView>
                    <PropertySimpleView Title="Resources" Item="@c.Resources" ExplainField="pod.spec.containers.resources" ShowInJson="true"></PropertySimpleView>
                    <PropertySimpleView Title="envFrom" Item="@c.EnvFrom" ExplainField="pod.spec.containers.envFrom" ShowInJson="true"></PropertySimpleView>
                    <PropertySimpleView Title="lifecycle" Item="@c.Lifecycle" ExplainField="pod.spec.containers.lifecycle" ShowInJson="true"></PropertySimpleView>
                    <PropertySimpleView Title="ResizePolicy" Item="@c.ResizePolicy" ExplainField="pod.spec.containers.resizePolicy" ShowInJson="true"></PropertySimpleView>
                    <PropertySimpleView Title="securityContext" Item="@c.SecurityContext" ExplainField="pod.spec.containers.securityContext" ShowInJson="true"></PropertySimpleView>
                    <PropertyOptionView Title="TerminationMessagePolicy" Item="@c.TerminationMessagePolicy" ExplainField="pod.spec.containers.terminationMessagePolicy"  Options='@(new[] { "FallbackToLogsOnError", "File" })'></PropertyOptionView>
                    <PropertySimpleView Title="TerminationMessagePath" Item="@c.TerminationMessagePath" ExplainField="pod.spec.containers.terminationMessagePath"></PropertySimpleView>
                    <PropertySimpleView Title="WorkingDir" Item="@c.WorkingDir" ExplainField="pod.spec.containers.workingDir"></PropertySimpleView>
                    <PropertySimpleView Title="Tty" Item="@c.Tty" ExplainField="pod.spec.containers.tty"></PropertySimpleView>
                    <PropertySimpleView Title="Stdin" Item="@c.Stdin" ExplainField="pod.spec.containers.stdin"></PropertySimpleView>
                    <PropertySimpleView Title="StdinOnce" Item="@c.StdinOnce" ExplainField="pod.spec.containers.stdinOnce"></PropertySimpleView>

                    <EnvView Env="@c.Env"></EnvView>
                    @if (c.Ports != null)
                    {
                        <DescriptionsItem Title="Ports">

                            @foreach (var p in c.Ports)
                            {
                                <div>
                                    @($"{p.Name}:{p.ContainerPort}/{p.Protocol}")
                                    <Button Type="@ButtonType.Primary" OnClick="@(() => Forward(p))">Forward</Button>
                                </div>
                            }
                        </DescriptionsItem>
                    }
                    @if (c.Command != null)
                    {
                        <DescriptionsItem Title="Command">
                            @foreach (var cc in c.Command)
                            {
                                @cc
                                <br/>
                            }
                        </DescriptionsItem>
                    }
                    @if (c.Args != null)
                    {
                        <DescriptionsItem Title="Args">
                            @foreach (var cc in c.Args)
                            {
                                @cc
                                <br/>
                            }
                        </DescriptionsItem>
                    }
                    <ProbeView Probe="@c.LivenessProbe" ProbeType="LivenessProbe"></ProbeView>
                    <ProbeView Probe="@c.ReadinessProbe" ProbeType="ReadinessProbe"></ProbeView>
                    <ProbeView Probe="@c.StartupProbe" ProbeType="StartupProbe"></ProbeView>

                    @if (c.VolumeMounts != null)
                    {
                        <DescriptionsItem Title="VolumeMounts">
                            @foreach (var vm in c.VolumeMounts)
                            {
                                @if (vm.ReadOnlyProperty != null && vm.ReadOnlyProperty == true)
                                {
                                    <Tag PresetColor="@PresetColor.Gold">RO</Tag>
                                }
                                else
                                {
                                    <Tag PresetColor="@PresetColor.Lime">RW</Tag>
                                }

                                <Tag>@vm.Name</Tag>
                                <Tag Color="#87d068">@vm.MountPath</Tag>
                                <br/>
                            }
                        </DescriptionsItem>
                    }
                </Descriptions>
            </Card>
        </BadgeRibbon>
    }
}
