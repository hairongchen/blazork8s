@using k8s.Models
@using BlazorApp.Pages.Common.Html
@using BlazorApp.Pages.Common.Html.HTable
@using BlazorApp.Pages.Common.Metadata
@using BlazorApp.Pages.Common
@inherits BlazorApp.Pages.Common.PageBase

@if (Ingress is { Count: > 0 })
{
    <HTableColumn Title="@Title" ExplainField="networkPolicy.spec.ingress">
        <HTable Class="miniTable">
            @foreach (var ingressRule in Ingress)
            {
                @if (ingressRule.FromProperty is { Count: > 0 })
                {
                    <HTableColumn Title="From">
                        <HTable>
                            <NetworkPolicyPeerView Peers="ingressRule.FromProperty" ExplainField="networkPolicy.spec.ingress.from"></NetworkPolicyPeerView>
                        </HTable>
                    </HTableColumn>
                }

                @if (ingressRule.Ports is { Count: > 0 })
                {
                    <HTableColumn Title=@L["Ports"]>
                        @foreach (var port in ingressRule.Ports)
                        {
                            <HTable Class="miniTable">
                                <PropertyOptionView Title="Protocol" Item="port.Protocol" ExplainField="networkPolicy.spec.ingress.ports" Options='@(new[] { "TCP", "UDP", "SCTP" })'></PropertyOptionView>
                                <HTableColumn Title=@L["Ports"] ExplainField="networkPolicy.spec.ingress.ports">
                                    <ColorfulTag>
                                        @port.Port
                                        @if (port.EndPort != null)
                                        {
                                            @($" - {port.EndPort}")
                                        }
                                    </ColorfulTag>
                                </HTableColumn>
                            </HTable>
                        }
                    </HTableColumn>
                }
            }
        </HTable>

        @if (Ingress.Where(x => x.FromProperty != null).SelectMany(x => x.FromProperty).ToList().Count == 0 && Ingress.Where(x => x.Ports != null).SelectMany(x => x.Ports).ToList().Count == 0)
        {
            <Tag>ALL</Tag>
        }
    </HTableColumn>
}

@code {

    [Parameter]
    public IList<V1NetworkPolicyIngressRule> Ingress { get; set; }

    [Parameter]
    public string Title { get; set; }

}
