@page "/Job"
@using k8s.Models
@using Extension
@using BlazorApp.Pages.Common.Html.HTable
@using BlazorApp.Pages.Common.Metadata
@using BlazorApp.Pages.Common
@inherits BlazorApp.Pages.Common.TableBase<V1Job>
@if (TableData.PagedItems != null)
{
    <HTable Class="wideTable">
        <HTr>
            <HTd >
                <SearchToolBar Title="Job" Count="@TableData.Total"
                               OnSelectedItemCloseClicked="@TableData.RemoveSelection"
                               OnRemoveAllClicked="@TableData.RemoveAllSelection" TableData="@TableData"
                               OnSearch="OnSearchHandler" TItem="V1Job"
                               OnNsSelected="OnNsSelectedHandler">
                </SearchToolBar>
            </HTd>
        </HTr>
        <HTr>
            <HTd >
                <Table TItem="V1Job"
                       DataSource="@TableData.PagedItems"
                       Size=@TableSize.Small Bordered="true"
                       Total="TableData.Total"
                       @bind-PageIndex="TableData.PageIndex"
                       @bind-PageSize="TableData.PageSize"
                       @bind-SelectedRows="TableData.SelectedRows"
                       Loading="TableData.Loading"
                       OnChange="OnPageChangeHandler">
                    <Selection Key="@(context.Name())"/>
                    <AntDesign.Column Field="@context.Name()" Title="Name">
                        <Button OnClick="@(() => OnItemNameClick(context))" Type="@ButtonType.Link">@context.Name()</Button>
                    </AntDesign.Column>
                    <AntDesign.Column Field="@context.Namespace()" Title="Namespace" Width="110px"/>
                    <AntDesign.Column Title="Completions" TData="string" Width="80px">
                        @($"{context.Status.Succeeded ?? 0}/{context.Spec.Completions}")
                    </AntDesign.Column>
                    <AntDesign.Column Title="Duration" TData="string" Width="100px">
                        @if (context.Status.CompletionTime != null)
                        {
                            @((context.Status.CompletionTime - context.Status.StartTime).GetValueOrDefault().Age())
                        }
                        else
                        {
                            @((DateTime.Now - context.Status.StartTime).GetValueOrDefault().Age())
                        }
                    </AntDesign.Column>
                    <AntDesign.Column Title="Selector" TData="string">
                        <LabelSelectorView LabelSelector="@context.Spec.Selector"></LabelSelectorView>
                    </AntDesign.Column>
                    <AntDesign.Column Title="Images" TData="string">
                        <ImagesListView PodSpec="@context.Spec.Template.Spec"></ImagesListView>
                    </AntDesign.Column>

                    <AntDesign.Column Title="Age" TData="string" Width="100px">
                        <AgeView Age="@context.CreationTimestamp()"></AgeView>
                    </AntDesign.Column>
                    <ActionColumn Title="Action" Width="100px">
                        <JobAction Item="@context"></JobAction>
                    </ActionColumn>
                </Table>

            </HTd>
        </HTr>
    </HTable>

    <ResourceWatcher OnResourceChanged="OnResourceChanged" T="V1Job"></ResourceWatcher>
}
